"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@simplewebauthn";
exports.ids = ["vendor-chunks/@simplewebauthn"];
exports.modules = {

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/generateAuthenticationOptions.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/authentication/generateAuthenticationOptions.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateAuthenticationOptions: () => (/* binding */ generateAuthenticationOptions)\n/* harmony export */ });\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _helpers_generateChallenge_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/generateChallenge.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js\");\n\n\n/**\n * Prepare a value to pass into navigator.credentials.get(...) for authenticator \"login\"\n *\n * @param allowCredentials Authenticators previously registered by the user, if any. If undefined\n * the client will ask the user which credential they want to use\n * @param challenge Random value the authenticator needs to sign and pass back\n * user for authentication\n * @param timeout How long (in ms) the user can take to complete authentication\n * @param userVerification Set to `'discouraged'` when asserting as part of a 2FA flow, otherwise\n * set to `'preferred'` or `'required'` as desired.\n * @param extensions Additional plugins the authenticator or browser should use during authentication\n * @param rpID Valid domain name (after `https://`)\n */\nasync function generateAuthenticationOptions(options = {}) {\n    const { allowCredentials, challenge = await (0,_helpers_generateChallenge_js__WEBPACK_IMPORTED_MODULE_1__.generateChallenge)(), timeout = 60000, userVerification = 'preferred', extensions, rpID, } = options;\n    /**\n     * Preserve ability to specify `string` values for challenges\n     */\n    let _challenge = challenge;\n    if (typeof _challenge === 'string') {\n        _challenge = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.fromUTF8String(_challenge);\n    }\n    return {\n        challenge: _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.fromBuffer(_challenge),\n        allowCredentials: allowCredentials?.map((cred) => ({\n            ...cred,\n            id: _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.fromBuffer(cred.id),\n        })),\n        timeout,\n        userVerification,\n        extensions,\n        rpId: rpID,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vYXV0aGVudGljYXRpb24vZ2VuZXJhdGVBdXRoZW50aWNhdGlvbk9wdGlvbnMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNFO0FBQ0Y7QUFDcEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx5REFBeUQ7QUFDaEUsWUFBWSxvQ0FBb0MsZ0ZBQWlCLHlFQUF5RTtBQUMxSTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLCtFQUE0QjtBQUNqRDtBQUNBO0FBQ0EsbUJBQW1CLDBFQUF1QjtBQUMxQztBQUNBO0FBQ0EsZ0JBQWdCLDBFQUF1QjtBQUN2QyxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vYXV0aGVudGljYXRpb24vZ2VuZXJhdGVBdXRoZW50aWNhdGlvbk9wdGlvbnMuanM/YTU5YiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc29CYXNlNjRVUkwsIGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuLi9oZWxwZXJzL2lzby9pbmRleC5qcyc7XG5pbXBvcnQgeyBnZW5lcmF0ZUNoYWxsZW5nZSB9IGZyb20gJy4uL2hlbHBlcnMvZ2VuZXJhdGVDaGFsbGVuZ2UuanMnO1xuLyoqXG4gKiBQcmVwYXJlIGEgdmFsdWUgdG8gcGFzcyBpbnRvIG5hdmlnYXRvci5jcmVkZW50aWFscy5nZXQoLi4uKSBmb3IgYXV0aGVudGljYXRvciBcImxvZ2luXCJcbiAqXG4gKiBAcGFyYW0gYWxsb3dDcmVkZW50aWFscyBBdXRoZW50aWNhdG9ycyBwcmV2aW91c2x5IHJlZ2lzdGVyZWQgYnkgdGhlIHVzZXIsIGlmIGFueS4gSWYgdW5kZWZpbmVkXG4gKiB0aGUgY2xpZW50IHdpbGwgYXNrIHRoZSB1c2VyIHdoaWNoIGNyZWRlbnRpYWwgdGhleSB3YW50IHRvIHVzZVxuICogQHBhcmFtIGNoYWxsZW5nZSBSYW5kb20gdmFsdWUgdGhlIGF1dGhlbnRpY2F0b3IgbmVlZHMgdG8gc2lnbiBhbmQgcGFzcyBiYWNrXG4gKiB1c2VyIGZvciBhdXRoZW50aWNhdGlvblxuICogQHBhcmFtIHRpbWVvdXQgSG93IGxvbmcgKGluIG1zKSB0aGUgdXNlciBjYW4gdGFrZSB0byBjb21wbGV0ZSBhdXRoZW50aWNhdGlvblxuICogQHBhcmFtIHVzZXJWZXJpZmljYXRpb24gU2V0IHRvIGAnZGlzY291cmFnZWQnYCB3aGVuIGFzc2VydGluZyBhcyBwYXJ0IG9mIGEgMkZBIGZsb3csIG90aGVyd2lzZVxuICogc2V0IHRvIGAncHJlZmVycmVkJ2Agb3IgYCdyZXF1aXJlZCdgIGFzIGRlc2lyZWQuXG4gKiBAcGFyYW0gZXh0ZW5zaW9ucyBBZGRpdGlvbmFsIHBsdWdpbnMgdGhlIGF1dGhlbnRpY2F0b3Igb3IgYnJvd3NlciBzaG91bGQgdXNlIGR1cmluZyBhdXRoZW50aWNhdGlvblxuICogQHBhcmFtIHJwSUQgVmFsaWQgZG9tYWluIG5hbWUgKGFmdGVyIGBodHRwczovL2ApXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUF1dGhlbnRpY2F0aW9uT3B0aW9ucyhvcHRpb25zID0ge30pIHtcbiAgICBjb25zdCB7IGFsbG93Q3JlZGVudGlhbHMsIGNoYWxsZW5nZSA9IGF3YWl0IGdlbmVyYXRlQ2hhbGxlbmdlKCksIHRpbWVvdXQgPSA2MDAwMCwgdXNlclZlcmlmaWNhdGlvbiA9ICdwcmVmZXJyZWQnLCBleHRlbnNpb25zLCBycElELCB9ID0gb3B0aW9ucztcbiAgICAvKipcbiAgICAgKiBQcmVzZXJ2ZSBhYmlsaXR5IHRvIHNwZWNpZnkgYHN0cmluZ2AgdmFsdWVzIGZvciBjaGFsbGVuZ2VzXG4gICAgICovXG4gICAgbGV0IF9jaGFsbGVuZ2UgPSBjaGFsbGVuZ2U7XG4gICAgaWYgKHR5cGVvZiBfY2hhbGxlbmdlID09PSAnc3RyaW5nJykge1xuICAgICAgICBfY2hhbGxlbmdlID0gaXNvVWludDhBcnJheS5mcm9tVVRGOFN0cmluZyhfY2hhbGxlbmdlKTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgY2hhbGxlbmdlOiBpc29CYXNlNjRVUkwuZnJvbUJ1ZmZlcihfY2hhbGxlbmdlKSxcbiAgICAgICAgYWxsb3dDcmVkZW50aWFsczogYWxsb3dDcmVkZW50aWFscz8ubWFwKChjcmVkKSA9PiAoe1xuICAgICAgICAgICAgLi4uY3JlZCxcbiAgICAgICAgICAgIGlkOiBpc29CYXNlNjRVUkwuZnJvbUJ1ZmZlcihjcmVkLmlkKSxcbiAgICAgICAgfSkpLFxuICAgICAgICB0aW1lb3V0LFxuICAgICAgICB1c2VyVmVyaWZpY2F0aW9uLFxuICAgICAgICBleHRlbnNpb25zLFxuICAgICAgICBycElkOiBycElELFxuICAgIH07XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/generateAuthenticationOptions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/verifyAuthenticationResponse.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/authentication/verifyAuthenticationResponse.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAuthenticationResponse: () => (/* binding */ verifyAuthenticationResponse)\n/* harmony export */ });\n/* harmony import */ var _helpers_decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/decodeClientDataJSON.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js\");\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/parseAuthenticatorData.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js\");\n/* harmony import */ var _helpers_parseBackupFlags_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/parseBackupFlags.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js\");\n/* harmony import */ var _helpers_matchExpectedRPID_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/matchExpectedRPID.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n\n\n\n\n\n/**\n * Verify that the user has legitimately completed the login process\n *\n * **Options:**\n *\n * @param response Response returned by **@simplewebauthn/browser**'s `startAssertion()`\n * @param expectedChallenge The base64url-encoded `options.challenge` returned by\n * `generateAuthenticationOptions()`\n * @param expectedOrigin Website URL (or array of URLs) that the registration should have occurred on\n * @param expectedRPID RP ID (or array of IDs) that was specified in the registration options\n * @param expectedType (Optional) The response type expected ('webauthn.get')\n * @param authenticator An internal {@link AuthenticatorDevice} matching the credential's ID\n * @param requireUserVerification (Optional) Enforce user verification by the authenticator\n * (via PIN, fingerprint, etc...)\n * @param advancedFIDOConfig (Optional) Options for satisfying more stringent FIDO RP feature\n * requirements\n * @param advancedFIDOConfig.userVerification (Optional) Enable alternative rules for evaluating the\n * User Presence and User Verified flags in authenticator data: UV (and UP) flags are optional\n * unless this value is `\"required\"`\n */\nasync function verifyAuthenticationResponse(options) {\n    const { response, expectedChallenge, expectedOrigin, expectedRPID, expectedType, authenticator, requireUserVerification = true, advancedFIDOConfig, } = options;\n    const { id, rawId, type: credentialType, response: assertionResponse } = response;\n    // Ensure credential specified an ID\n    if (!id) {\n        throw new Error('Missing credential ID');\n    }\n    // Ensure ID is base64url-encoded\n    if (id !== rawId) {\n        throw new Error('Credential ID was not base64url-encoded');\n    }\n    // Make sure credential type is public-key\n    if (credentialType !== 'public-key') {\n        throw new Error(`Unexpected credential type ${credentialType}, expected \"public-key\"`);\n    }\n    if (!response) {\n        throw new Error('Credential missing response');\n    }\n    if (typeof assertionResponse?.clientDataJSON !== 'string') {\n        throw new Error('Credential response clientDataJSON was not a string');\n    }\n    const clientDataJSON = (0,_helpers_decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_0__.decodeClientDataJSON)(assertionResponse.clientDataJSON);\n    const { type, origin, challenge, tokenBinding } = clientDataJSON;\n    // Make sure we're handling an authentication\n    if (Array.isArray(expectedType)) {\n        if (!expectedType.includes(type)) {\n            const joinedExpectedType = expectedType.join(', ');\n            throw new Error(`Unexpected authentication response type \"${type}\", expected one of: ${joinedExpectedType}`);\n        }\n    }\n    else if (expectedType) {\n        if (type !== expectedType) {\n            throw new Error(`Unexpected authentication response type \"${type}\", expected \"${expectedType}\"`);\n        }\n    }\n    else if (type !== 'webauthn.get') {\n        throw new Error(`Unexpected authentication response type: ${type}`);\n    }\n    // Ensure the device provided the challenge we gave it\n    if (typeof expectedChallenge === 'function') {\n        if (!(await expectedChallenge(challenge))) {\n            throw new Error(`Custom challenge verifier returned false for registration response challenge \"${challenge}\"`);\n        }\n    }\n    else if (challenge !== expectedChallenge) {\n        throw new Error(`Unexpected authentication response challenge \"${challenge}\", expected \"${expectedChallenge}\"`);\n    }\n    // Check that the origin is our site\n    if (Array.isArray(expectedOrigin)) {\n        if (!expectedOrigin.includes(origin)) {\n            const joinedExpectedOrigin = expectedOrigin.join(', ');\n            throw new Error(`Unexpected authentication response origin \"${origin}\", expected one of: ${joinedExpectedOrigin}`);\n        }\n    }\n    else {\n        if (origin !== expectedOrigin) {\n            throw new Error(`Unexpected authentication response origin \"${origin}\", expected \"${expectedOrigin}\"`);\n        }\n    }\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.isBase64url(assertionResponse.authenticatorData)) {\n        throw new Error('Credential response authenticatorData was not a base64url string');\n    }\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.isBase64url(assertionResponse.signature)) {\n        throw new Error('Credential response signature was not a base64url string');\n    }\n    if (assertionResponse.userHandle &&\n        typeof assertionResponse.userHandle !== 'string') {\n        throw new Error('Credential response userHandle was not a string');\n    }\n    if (tokenBinding) {\n        if (typeof tokenBinding !== 'object') {\n            throw new Error('ClientDataJSON tokenBinding was not an object');\n        }\n        if (['present', 'supported', 'notSupported'].indexOf(tokenBinding.status) < 0) {\n            throw new Error(`Unexpected tokenBinding status ${tokenBinding.status}`);\n        }\n    }\n    const authDataBuffer = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.toBuffer(assertionResponse.authenticatorData);\n    const parsedAuthData = (0,_helpers_parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_3__.parseAuthenticatorData)(authDataBuffer);\n    const { rpIdHash, flags, counter, extensionsData } = parsedAuthData;\n    // Make sure the response's RP ID is ours\n    let expectedRPIDs = [];\n    if (typeof expectedRPID === 'string') {\n        expectedRPIDs = [expectedRPID];\n    }\n    else {\n        expectedRPIDs = expectedRPID;\n    }\n    const matchedRPID = await (0,_helpers_matchExpectedRPID_js__WEBPACK_IMPORTED_MODULE_5__.matchExpectedRPID)(rpIdHash, expectedRPIDs);\n    if (advancedFIDOConfig !== undefined) {\n        const { userVerification: fidoUserVerification } = advancedFIDOConfig;\n        /**\n         * Use FIDO Conformance-defined rules for verifying UP and UV flags\n         */\n        if (fidoUserVerification === 'required') {\n            // Require `flags.uv` be true (implies `flags.up` is true)\n            if (!flags.uv) {\n                throw new Error('User verification required, but user could not be verified');\n            }\n        }\n        else if (fidoUserVerification === 'preferred' ||\n            fidoUserVerification === 'discouraged') {\n            // Ignore `flags.uv`\n        }\n    }\n    else {\n        /**\n         * Use WebAuthn spec-defined rules for verifying UP and UV flags\n         */\n        // WebAuthn only requires the user presence flag be true\n        if (!flags.up) {\n            throw new Error('User not present during authentication');\n        }\n        // Enforce user verification if required\n        if (requireUserVerification && !flags.uv) {\n            throw new Error('User verification required, but user could not be verified');\n        }\n    }\n    const clientDataHash = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_1__.toHash)(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.toBuffer(assertionResponse.clientDataJSON));\n    const signatureBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoUint8Array.concat([authDataBuffer, clientDataHash]);\n    const signature = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoBase64URL.toBuffer(assertionResponse.signature);\n    if ((counter > 0 || authenticator.counter > 0) &&\n        counter <= authenticator.counter) {\n        // Error out when the counter in the DB is greater than or equal to the counter in the\n        // dataStruct. It's related to how the authenticator maintains the number of times its been\n        // used for this client. If this happens, then someone's somehow increased the counter\n        // on the device without going through this site\n        throw new Error(`Response counter value ${counter} was lower than expected ${authenticator.counter}`);\n    }\n    const { credentialDeviceType, credentialBackedUp } = (0,_helpers_parseBackupFlags_js__WEBPACK_IMPORTED_MODULE_4__.parseBackupFlags)(flags);\n    const toReturn = {\n        verified: await (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_2__.verifySignature)({\n            signature,\n            data: signatureBase,\n            credentialPublicKey: authenticator.credentialPublicKey,\n        }),\n        authenticationInfo: {\n            newCounter: counter,\n            credentialID: authenticator.credentialID,\n            userVerified: flags.uv,\n            credentialDeviceType,\n            credentialBackedUp,\n            authenticatorExtensionResults: extensionsData,\n            origin: clientDataJSON.origin,\n            rpID: matchedRPID,\n        },\n    };\n    return toReturn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/verifyAuthenticationResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js":
/*!*********************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/deps.js ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AsnParser: () => (/* reexport safe */ _peculiar_asn1_schema__WEBPACK_IMPORTED_MODULE_3__.AsnParser),\n/* harmony export */   AsnSerializer: () => (/* reexport safe */ _peculiar_asn1_schema__WEBPACK_IMPORTED_MODULE_3__.AsnSerializer),\n/* harmony export */   AuthorityKeyIdentifier: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.AuthorityKeyIdentifier),\n/* harmony export */   BasicConstraints: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.BasicConstraints),\n/* harmony export */   CRLDistributionPoints: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.CRLDistributionPoints),\n/* harmony export */   Certificate: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.Certificate),\n/* harmony export */   CertificateList: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.CertificateList),\n/* harmony export */   ECDSASigValue: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.ECDSASigValue),\n/* harmony export */   ECParameters: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.ECParameters),\n/* harmony export */   ExtendedKeyUsage: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.ExtendedKeyUsage),\n/* harmony export */   KeyDescription: () => (/* reexport safe */ _peculiar_asn1_android__WEBPACK_IMPORTED_MODULE_7__.KeyDescription),\n/* harmony export */   Name: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.Name),\n/* harmony export */   RSAPublicKey: () => (/* reexport safe */ _peculiar_asn1_rsa__WEBPACK_IMPORTED_MODULE_6__.RSAPublicKey),\n/* harmony export */   SubjectAlternativeName: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.SubjectAlternativeName),\n/* harmony export */   SubjectKeyIdentifier: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.SubjectKeyIdentifier),\n/* harmony export */   base64: () => (/* reexport safe */ _hexagon_base64__WEBPACK_IMPORTED_MODULE_1__[\"default\"]),\n/* harmony export */   crossFetch: () => (/* reexport safe */ cross_fetch__WEBPACK_IMPORTED_MODULE_2__.fetch),\n/* harmony export */   id_ce_authorityKeyIdentifier: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_authorityKeyIdentifier),\n/* harmony export */   id_ce_basicConstraints: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_basicConstraints),\n/* harmony export */   id_ce_cRLDistributionPoints: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_cRLDistributionPoints),\n/* harmony export */   id_ce_extKeyUsage: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_extKeyUsage),\n/* harmony export */   id_ce_keyDescription: () => (/* reexport safe */ _peculiar_asn1_android__WEBPACK_IMPORTED_MODULE_7__.id_ce_keyDescription),\n/* harmony export */   id_ce_subjectAltName: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_subjectAltName),\n/* harmony export */   id_ce_subjectKeyIdentifier: () => (/* reexport safe */ _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__.id_ce_subjectKeyIdentifier),\n/* harmony export */   id_ecPublicKey: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.id_ecPublicKey),\n/* harmony export */   id_secp256r1: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.id_secp256r1),\n/* harmony export */   id_secp384r1: () => (/* reexport safe */ _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__.id_secp384r1),\n/* harmony export */   tinyCbor: () => (/* reexport module object */ _levischuck_tiny_cbor__WEBPACK_IMPORTED_MODULE_0__)\n/* harmony export */ });\n/* harmony import */ var _levischuck_tiny_cbor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @levischuck/tiny-cbor */ \"(rsc)/./node_modules/@levischuck/tiny-cbor/esm/index.js\");\n/* harmony import */ var _hexagon_base64__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @hexagon/base64 */ \"(rsc)/./node_modules/@hexagon/base64/src/base64.js\");\n/* harmony import */ var cross_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cross-fetch */ \"(rsc)/./node_modules/cross-fetch/dist/node-ponyfill.js\");\n/* harmony import */ var _peculiar_asn1_schema__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @peculiar/asn1-schema */ \"(rsc)/./node_modules/@peculiar/asn1-schema/build/es2015/index.js\");\n/* harmony import */ var _peculiar_asn1_x509__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @peculiar/asn1-x509 */ \"(rsc)/./node_modules/@peculiar/asn1-x509/build/es2015/index.js\");\n/* harmony import */ var _peculiar_asn1_ecc__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @peculiar/asn1-ecc */ \"(rsc)/./node_modules/@peculiar/asn1-ecc/build/es2015/index.js\");\n/* harmony import */ var _peculiar_asn1_rsa__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @peculiar/asn1-rsa */ \"(rsc)/./node_modules/@peculiar/asn1-rsa/build/es2015/index.js\");\n/* harmony import */ var _peculiar_asn1_android__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @peculiar/asn1-android */ \"(rsc)/./node_modules/@peculiar/asn1-android/build/es2015/index.js\");\n// tiny_cbor (a.k.a. tiny-cbor in Node land)\n\n// b64 (a.k.a. @hexagon/base64 in Node land)\n\n// cross-fetch\n\n// @peculiar libraries\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vZGVwcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNrRDtBQUNsRDtBQUNvRDtBQUNwRDtBQUNrRDtBQUNsRDtBQUNpRTtBQUNrUztBQUNyUDtBQUM1RDtBQUM0QiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2RlcHMuanM/MjYxMSJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyB0aW55X2Nib3IgKGEuay5hLiB0aW55LWNib3IgaW4gTm9kZSBsYW5kKVxuZXhwb3J0ICogYXMgdGlueUNib3IgZnJvbSAnQGxldmlzY2h1Y2svdGlueS1jYm9yJztcbi8vIGI2NCAoYS5rLmEuIEBoZXhhZ29uL2Jhc2U2NCBpbiBOb2RlIGxhbmQpXG5leHBvcnQgeyBkZWZhdWx0IGFzIGJhc2U2NCB9IGZyb20gJ0BoZXhhZ29uL2Jhc2U2NCc7XG4vLyBjcm9zcy1mZXRjaFxuZXhwb3J0IHsgZmV0Y2ggYXMgY3Jvc3NGZXRjaCB9IGZyb20gJ2Nyb3NzLWZldGNoJztcbi8vIEBwZWN1bGlhciBsaWJyYXJpZXNcbmV4cG9ydCB7IEFzblBhcnNlciwgQXNuU2VyaWFsaXplciB9IGZyb20gJ0BwZWN1bGlhci9hc24xLXNjaGVtYSc7XG5leHBvcnQgeyBBdXRob3JpdHlLZXlJZGVudGlmaWVyLCBCYXNpY0NvbnN0cmFpbnRzLCBDZXJ0aWZpY2F0ZSwgQ2VydGlmaWNhdGVMaXN0LCBDUkxEaXN0cmlidXRpb25Qb2ludHMsIEV4dGVuZGVkS2V5VXNhZ2UsIGlkX2NlX2F1dGhvcml0eUtleUlkZW50aWZpZXIsIGlkX2NlX2Jhc2ljQ29uc3RyYWludHMsIGlkX2NlX2NSTERpc3RyaWJ1dGlvblBvaW50cywgaWRfY2VfZXh0S2V5VXNhZ2UsIGlkX2NlX3N1YmplY3RBbHROYW1lLCBpZF9jZV9zdWJqZWN0S2V5SWRlbnRpZmllciwgTmFtZSwgU3ViamVjdEFsdGVybmF0aXZlTmFtZSwgU3ViamVjdEtleUlkZW50aWZpZXIsIH0gZnJvbSAnQHBlY3VsaWFyL2FzbjEteDUwOSc7XG5leHBvcnQgeyBFQ0RTQVNpZ1ZhbHVlLCBFQ1BhcmFtZXRlcnMsIGlkX2VjUHVibGljS2V5LCBpZF9zZWNwMjU2cjEsIGlkX3NlY3AzODRyMSwgfSBmcm9tICdAcGVjdWxpYXIvYXNuMS1lY2MnO1xuZXhwb3J0IHsgUlNBUHVibGljS2V5IH0gZnJvbSAnQHBlY3VsaWFyL2FzbjEtcnNhJztcbmV4cG9ydCB7IGlkX2NlX2tleURlc2NyaXB0aW9uLCBLZXlEZXNjcmlwdGlvbiB9IGZyb20gJ0BwZWN1bGlhci9hc24xLWFuZHJvaWQnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertAAGUIDToString: () => (/* binding */ convertAAGUIDToString)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Convert the aaguid buffer in authData into a UUID string\n */\nfunction convertAAGUIDToString(aaguid) {\n    // Raw Hex: adce000235bcc60a648b0b25f1f05503\n    const hex = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.toHex(aaguid);\n    const segments = [\n        hex.slice(0, 8),\n        hex.slice(8, 12),\n        hex.slice(12, 16),\n        hex.slice(16, 20),\n        hex.slice(20, 32), // 8\n    ];\n    // Formatted: adce0002-35bc-c60a-648b-0b25f1f05503\n    return segments.join('-');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0QUFHVUlEVG9TdHJpbmcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBK0M7QUFDL0M7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGdCQUFnQiw4REFBbUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2NvbnZlcnRBQUdVSURUb1N0cmluZy5qcz8wMDQzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG4vKipcbiAqIENvbnZlcnQgdGhlIGFhZ3VpZCBidWZmZXIgaW4gYXV0aERhdGEgaW50byBhIFVVSUQgc3RyaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0QUFHVUlEVG9TdHJpbmcoYWFndWlkKSB7XG4gICAgLy8gUmF3IEhleDogYWRjZTAwMDIzNWJjYzYwYTY0OGIwYjI1ZjFmMDU1MDNcbiAgICBjb25zdCBoZXggPSBpc29VaW50OEFycmF5LnRvSGV4KGFhZ3VpZCk7XG4gICAgY29uc3Qgc2VnbWVudHMgPSBbXG4gICAgICAgIGhleC5zbGljZSgwLCA4KSxcbiAgICAgICAgaGV4LnNsaWNlKDgsIDEyKSxcbiAgICAgICAgaGV4LnNsaWNlKDEyLCAxNiksXG4gICAgICAgIGhleC5zbGljZSgxNiwgMjApLFxuICAgICAgICBoZXguc2xpY2UoMjAsIDMyKSwgLy8gOFxuICAgIF07XG4gICAgLy8gRm9ybWF0dGVkOiBhZGNlMDAwMi0zNWJjLWM2MGEtNjQ4Yi0wYjI1ZjFmMDU1MDNcbiAgICByZXR1cm4gc2VnbWVudHMuam9pbignLScpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertCOSEtoPKCS: () => (/* binding */ convertCOSEtoPKCS)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n\n/**\n * Takes COSE-encoded public key and converts it to PKCS key\n */\nfunction convertCOSEtoPKCS(cosePublicKey) {\n    // This is a little sloppy, I'm using COSEPublicKeyEC2 since it could have both x and y, but when\n    // there's no y it means it's probably better typed as COSEPublicKeyOKP. I'll leave this for now\n    // and revisit it later if it ever becomes an actual problem.\n    const struct = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCBOR.decodeFirst(cosePublicKey);\n    const tag = Uint8Array.from([0x04]);\n    const x = struct.get(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.x);\n    const y = struct.get(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.y);\n    if (!x) {\n        throw new Error('COSE public key was missing x');\n    }\n    if (y) {\n        return _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.concat([tag, x, y]);\n    }\n    return _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.concat([tag, x]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0Q09TRXRvUEtDUy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0Q7QUFDbkI7QUFDckM7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsOERBQW1CO0FBQ3RDO0FBQ0EseUJBQXlCLDhDQUFRO0FBQ2pDLHlCQUF5Qiw4Q0FBUTtBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsK0RBQW9CO0FBQ25DO0FBQ0EsV0FBVywrREFBb0I7QUFDL0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2NvbnZlcnRDT1NFdG9QS0NTLmpzPzA4MGQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNvQ0JPUiwgaXNvVWludDhBcnJheSB9IGZyb20gJy4vaXNvL2luZGV4LmpzJztcbmltcG9ydCB7IENPU0VLRVlTIH0gZnJvbSAnLi9jb3NlLmpzJztcbi8qKlxuICogVGFrZXMgQ09TRS1lbmNvZGVkIHB1YmxpYyBrZXkgYW5kIGNvbnZlcnRzIGl0IHRvIFBLQ1Mga2V5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb252ZXJ0Q09TRXRvUEtDUyhjb3NlUHVibGljS2V5KSB7XG4gICAgLy8gVGhpcyBpcyBhIGxpdHRsZSBzbG9wcHksIEknbSB1c2luZyBDT1NFUHVibGljS2V5RUMyIHNpbmNlIGl0IGNvdWxkIGhhdmUgYm90aCB4IGFuZCB5LCBidXQgd2hlblxuICAgIC8vIHRoZXJlJ3Mgbm8geSBpdCBtZWFucyBpdCdzIHByb2JhYmx5IGJldHRlciB0eXBlZCBhcyBDT1NFUHVibGljS2V5T0tQLiBJJ2xsIGxlYXZlIHRoaXMgZm9yIG5vd1xuICAgIC8vIGFuZCByZXZpc2l0IGl0IGxhdGVyIGlmIGl0IGV2ZXIgYmVjb21lcyBhbiBhY3R1YWwgcHJvYmxlbS5cbiAgICBjb25zdCBzdHJ1Y3QgPSBpc29DQk9SLmRlY29kZUZpcnN0KGNvc2VQdWJsaWNLZXkpO1xuICAgIGNvbnN0IHRhZyA9IFVpbnQ4QXJyYXkuZnJvbShbMHgwNF0pO1xuICAgIGNvbnN0IHggPSBzdHJ1Y3QuZ2V0KENPU0VLRVlTLngpO1xuICAgIGNvbnN0IHkgPSBzdHJ1Y3QuZ2V0KENPU0VLRVlTLnkpO1xuICAgIGlmICgheCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NPU0UgcHVibGljIGtleSB3YXMgbWlzc2luZyB4Jyk7XG4gICAgfVxuICAgIGlmICh5KSB7XG4gICAgICAgIHJldHVybiBpc29VaW50OEFycmF5LmNvbmNhdChbdGFnLCB4LCB5XSk7XG4gICAgfVxuICAgIHJldHVybiBpc29VaW50OEFycmF5LmNvbmNhdChbdGFnLCB4XSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertCertBufferToPEM: () => (/* binding */ convertCertBufferToPEM)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Convert buffer to an OpenSSL-compatible PEM text format.\n */\nfunction convertCertBufferToPEM(certBuffer) {\n    let b64cert;\n    /**\n     * Get certBuffer to a base64 representation\n     */\n    if (typeof certBuffer === 'string') {\n        if (_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.isBase64url(certBuffer)) {\n            b64cert = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toBase64(certBuffer);\n        }\n        else if (_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.isBase64(certBuffer)) {\n            b64cert = certBuffer;\n        }\n        else {\n            throw new Error('Certificate is not a valid base64 or base64url string');\n        }\n    }\n    else {\n        b64cert = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.fromBuffer(certBuffer, 'base64');\n    }\n    let PEMKey = '';\n    for (let i = 0; i < Math.ceil(b64cert.length / 64); i += 1) {\n        const start = 64 * i;\n        PEMKey += `${b64cert.substr(start, 64)}\\n`;\n    }\n    PEMKey = `-----BEGIN CERTIFICATE-----\\n${PEMKey}-----END CERTIFICATE-----\\n`;\n    return PEMKey;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQThDO0FBQzlDO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksbUVBQXdCO0FBQ3BDLHNCQUFzQixnRUFBcUI7QUFDM0M7QUFDQSxpQkFBaUIsZ0VBQXFCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGtFQUF1QjtBQUN6QztBQUNBO0FBQ0Esb0JBQW9CLG9DQUFvQztBQUN4RDtBQUNBLHFCQUFxQiwwQkFBMEI7QUFDL0M7QUFDQSw2Q0FBNkMsT0FBTztBQUNwRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzP2NkMTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNvQmFzZTY0VVJMIH0gZnJvbSAnLi9pc28vaW5kZXguanMnO1xuLyoqXG4gKiBDb252ZXJ0IGJ1ZmZlciB0byBhbiBPcGVuU1NMLWNvbXBhdGlibGUgUEVNIHRleHQgZm9ybWF0LlxuICovXG5leHBvcnQgZnVuY3Rpb24gY29udmVydENlcnRCdWZmZXJUb1BFTShjZXJ0QnVmZmVyKSB7XG4gICAgbGV0IGI2NGNlcnQ7XG4gICAgLyoqXG4gICAgICogR2V0IGNlcnRCdWZmZXIgdG8gYSBiYXNlNjQgcmVwcmVzZW50YXRpb25cbiAgICAgKi9cbiAgICBpZiAodHlwZW9mIGNlcnRCdWZmZXIgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgIGlmIChpc29CYXNlNjRVUkwuaXNCYXNlNjR1cmwoY2VydEJ1ZmZlcikpIHtcbiAgICAgICAgICAgIGI2NGNlcnQgPSBpc29CYXNlNjRVUkwudG9CYXNlNjQoY2VydEJ1ZmZlcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoaXNvQmFzZTY0VVJMLmlzQmFzZTY0KGNlcnRCdWZmZXIpKSB7XG4gICAgICAgICAgICBiNjRjZXJ0ID0gY2VydEJ1ZmZlcjtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2VydGlmaWNhdGUgaXMgbm90IGEgdmFsaWQgYmFzZTY0IG9yIGJhc2U2NHVybCBzdHJpbmcnKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgYjY0Y2VydCA9IGlzb0Jhc2U2NFVSTC5mcm9tQnVmZmVyKGNlcnRCdWZmZXIsICdiYXNlNjQnKTtcbiAgICB9XG4gICAgbGV0IFBFTUtleSA9ICcnO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgTWF0aC5jZWlsKGI2NGNlcnQubGVuZ3RoIC8gNjQpOyBpICs9IDEpIHtcbiAgICAgICAgY29uc3Qgc3RhcnQgPSA2NCAqIGk7XG4gICAgICAgIFBFTUtleSArPSBgJHtiNjRjZXJ0LnN1YnN0cihzdGFydCwgNjQpfVxcbmA7XG4gICAgfVxuICAgIFBFTUtleSA9IGAtLS0tLUJFR0lOIENFUlRJRklDQVRFLS0tLS1cXG4ke1BFTUtleX0tLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tXFxuYDtcbiAgICByZXR1cm4gUEVNS2V5O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertPEMToBytes: () => (/* binding */ convertPEMToBytes)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Take a certificate in PEM format and convert it to bytes\n */\nfunction convertPEMToBytes(pem) {\n    const certBase64 = pem\n        .replace('-----BEGIN CERTIFICATE-----', '')\n        .replace('-----END CERTIFICATE-----', '')\n        .replace(/[\\n ]/g, '');\n    return _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toBuffer(certBase64, 'base64');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0UEVNVG9CeXRlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUE4QztBQUM5QztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnRUFBcUI7QUFDaEMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2NvbnZlcnRQRU1Ub0J5dGVzLmpzPzExNDIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNvQmFzZTY0VVJMIH0gZnJvbSAnLi9pc28vaW5kZXguanMnO1xuLyoqXG4gKiBUYWtlIGEgY2VydGlmaWNhdGUgaW4gUEVNIGZvcm1hdCBhbmQgY29udmVydCBpdCB0byBieXRlc1xuICovXG5leHBvcnQgZnVuY3Rpb24gY29udmVydFBFTVRvQnl0ZXMocGVtKSB7XG4gICAgY29uc3QgY2VydEJhc2U2NCA9IHBlbVxuICAgICAgICAucmVwbGFjZSgnLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tJywgJycpXG4gICAgICAgIC5yZXBsYWNlKCctLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tJywgJycpXG4gICAgICAgIC5yZXBsYWNlKC9bXFxuIF0vZywgJycpO1xuICAgIHJldHVybiBpc29CYXNlNjRVUkwudG9CdWZmZXIoY2VydEJhc2U2NCwgJ2Jhc2U2NCcpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertX509PublicKeyToCOSE: () => (/* binding */ convertX509PublicKeyToCOSE)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mapX509SignatureAlgToCOSEAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js\");\n\n\n\nfunction convertX509PublicKeyToCOSE(x509Certificate) {\n    let cosePublicKey = new Map();\n    /**\n     * Time to extract the public key from an X.509 certificate\n     */\n    const x509 = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(x509Certificate, _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    const { tbsCertificate } = x509;\n    const { subjectPublicKeyInfo, signature: _tbsSignature } = tbsCertificate;\n    const signatureAlgorithm = _tbsSignature.algorithm;\n    const publicKeyAlgorithmID = subjectPublicKeyInfo.algorithm.algorithm;\n    if (publicKeyAlgorithmID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ecPublicKey) {\n        /**\n         * EC2 Public Key\n         */\n        if (!subjectPublicKeyInfo.algorithm.parameters) {\n            throw new Error('Certificate public key was missing parameters (EC2)');\n        }\n        const ecParameters = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(new Uint8Array(subjectPublicKeyInfo.algorithm.parameters), _deps_js__WEBPACK_IMPORTED_MODULE_0__.ECParameters);\n        let crv = -999;\n        const { namedCurve } = ecParameters;\n        if (namedCurve === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_secp256r1) {\n            crv = _cose_js__WEBPACK_IMPORTED_MODULE_1__.COSECRV.P256;\n        }\n        else if (namedCurve === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_secp384r1) {\n            crv = _cose_js__WEBPACK_IMPORTED_MODULE_1__.COSECRV.P384;\n        }\n        else {\n            throw new Error(`Certificate public key contained unexpected namedCurve ${namedCurve} (EC2)`);\n        }\n        const subjectPublicKey = new Uint8Array(subjectPublicKeyInfo.subjectPublicKey);\n        let x;\n        let y;\n        if (subjectPublicKey[0] === 0x04) {\n            // Public key is in \"uncompressed form\", so we can split the remaining bytes in half\n            let pointer = 1;\n            const halfLength = (subjectPublicKey.length - 1) / 2;\n            x = subjectPublicKey.slice(pointer, pointer += halfLength);\n            y = subjectPublicKey.slice(pointer);\n        }\n        else {\n            throw new Error('TODO: Figure out how to handle public keys in \"compressed form\"');\n        }\n        const coseEC2PubKey = new Map();\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.kty, _cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKTY.EC2);\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.alg, (0,_mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_2__.mapX509SignatureAlgToCOSEAlg)(signatureAlgorithm));\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.crv, crv);\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.x, x);\n        coseEC2PubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.y, y);\n        cosePublicKey = coseEC2PubKey;\n    }\n    else if (publicKeyAlgorithmID === '1.2.840.113549.1.1.1') {\n        /**\n         * RSA public key\n         */\n        const rsaPublicKey = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(subjectPublicKeyInfo.subjectPublicKey, _deps_js__WEBPACK_IMPORTED_MODULE_0__.RSAPublicKey);\n        const coseRSAPubKey = new Map();\n        coseRSAPubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.kty, _cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKTY.RSA);\n        coseRSAPubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.alg, (0,_mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_2__.mapX509SignatureAlgToCOSEAlg)(signatureAlgorithm));\n        coseRSAPubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.n, new Uint8Array(rsaPublicKey.modulus));\n        coseRSAPubKey.set(_cose_js__WEBPACK_IMPORTED_MODULE_1__.COSEKEYS.e, new Uint8Array(rsaPublicKey.publicExponent));\n        cosePublicKey = coseRSAPubKey;\n    }\n    else {\n        throw new Error(`Certificate public key contained unexpected algorithm ID ${publicKeyAlgorithmID}`);\n    }\n    return cosePublicKey;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0WDUwOVB1YmxpY0tleVRvQ09TRS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTZIO0FBQ3JFO0FBQ3lCO0FBQzFFO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsK0NBQVMsd0JBQXdCLGlEQUFXO0FBQzdELFlBQVksaUJBQWlCO0FBQzdCLFlBQVksaURBQWlEO0FBQzdEO0FBQ0E7QUFDQSxpQ0FBaUMsb0RBQWM7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLCtDQUFTLGtFQUFrRSxrREFBWTtBQUNwSDtBQUNBLGdCQUFnQixhQUFhO0FBQzdCLDJCQUEyQixrREFBWTtBQUN2QyxrQkFBa0IsNkNBQU87QUFDekI7QUFDQSxnQ0FBZ0Msa0RBQVk7QUFDNUMsa0JBQWtCLDZDQUFPO0FBQ3pCO0FBQ0E7QUFDQSxzRkFBc0YsWUFBWTtBQUNsRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsOENBQVEsTUFBTSw2Q0FBTztBQUMvQywwQkFBMEIsOENBQVEsTUFBTSw4RkFBNEI7QUFDcEUsMEJBQTBCLDhDQUFRO0FBQ2xDLDBCQUEwQiw4Q0FBUTtBQUNsQywwQkFBMEIsOENBQVE7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLCtDQUFTLDhDQUE4QyxrREFBWTtBQUNoRztBQUNBLDBCQUEwQiw4Q0FBUSxNQUFNLDZDQUFPO0FBQy9DLDBCQUEwQiw4Q0FBUSxNQUFNLDhGQUE0QjtBQUNwRSwwQkFBMEIsOENBQVE7QUFDbEMsMEJBQTBCLDhDQUFRO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLG9GQUFvRixxQkFBcUI7QUFDekc7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb252ZXJ0WDUwOVB1YmxpY0tleVRvQ09TRS5qcz9hOThhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzblBhcnNlciwgQ2VydGlmaWNhdGUsIEVDUGFyYW1ldGVycywgaWRfZWNQdWJsaWNLZXksIGlkX3NlY3AyNTZyMSwgaWRfc2VjcDM4NHIxLCBSU0FQdWJsaWNLZXksIH0gZnJvbSAnLi4vZGVwcy5qcyc7XG5pbXBvcnQgeyBDT1NFQ1JWLCBDT1NFS0VZUywgQ09TRUtUWSwgfSBmcm9tICcuL2Nvc2UuanMnO1xuaW1wb3J0IHsgbWFwWDUwOVNpZ25hdHVyZUFsZ1RvQ09TRUFsZyB9IGZyb20gJy4vbWFwWDUwOVNpZ25hdHVyZUFsZ1RvQ09TRUFsZy5qcyc7XG5leHBvcnQgZnVuY3Rpb24gY29udmVydFg1MDlQdWJsaWNLZXlUb0NPU0UoeDUwOUNlcnRpZmljYXRlKSB7XG4gICAgbGV0IGNvc2VQdWJsaWNLZXkgPSBuZXcgTWFwKCk7XG4gICAgLyoqXG4gICAgICogVGltZSB0byBleHRyYWN0IHRoZSBwdWJsaWMga2V5IGZyb20gYW4gWC41MDkgY2VydGlmaWNhdGVcbiAgICAgKi9cbiAgICBjb25zdCB4NTA5ID0gQXNuUGFyc2VyLnBhcnNlKHg1MDlDZXJ0aWZpY2F0ZSwgQ2VydGlmaWNhdGUpO1xuICAgIGNvbnN0IHsgdGJzQ2VydGlmaWNhdGUgfSA9IHg1MDk7XG4gICAgY29uc3QgeyBzdWJqZWN0UHVibGljS2V5SW5mbywgc2lnbmF0dXJlOiBfdGJzU2lnbmF0dXJlIH0gPSB0YnNDZXJ0aWZpY2F0ZTtcbiAgICBjb25zdCBzaWduYXR1cmVBbGdvcml0aG0gPSBfdGJzU2lnbmF0dXJlLmFsZ29yaXRobTtcbiAgICBjb25zdCBwdWJsaWNLZXlBbGdvcml0aG1JRCA9IHN1YmplY3RQdWJsaWNLZXlJbmZvLmFsZ29yaXRobS5hbGdvcml0aG07XG4gICAgaWYgKHB1YmxpY0tleUFsZ29yaXRobUlEID09PSBpZF9lY1B1YmxpY0tleSkge1xuICAgICAgICAvKipcbiAgICAgICAgICogRUMyIFB1YmxpYyBLZXlcbiAgICAgICAgICovXG4gICAgICAgIGlmICghc3ViamVjdFB1YmxpY0tleUluZm8uYWxnb3JpdGhtLnBhcmFtZXRlcnMpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2VydGlmaWNhdGUgcHVibGljIGtleSB3YXMgbWlzc2luZyBwYXJhbWV0ZXJzIChFQzIpJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZWNQYXJhbWV0ZXJzID0gQXNuUGFyc2VyLnBhcnNlKG5ldyBVaW50OEFycmF5KHN1YmplY3RQdWJsaWNLZXlJbmZvLmFsZ29yaXRobS5wYXJhbWV0ZXJzKSwgRUNQYXJhbWV0ZXJzKTtcbiAgICAgICAgbGV0IGNydiA9IC05OTk7XG4gICAgICAgIGNvbnN0IHsgbmFtZWRDdXJ2ZSB9ID0gZWNQYXJhbWV0ZXJzO1xuICAgICAgICBpZiAobmFtZWRDdXJ2ZSA9PT0gaWRfc2VjcDI1NnIxKSB7XG4gICAgICAgICAgICBjcnYgPSBDT1NFQ1JWLlAyNTY7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAobmFtZWRDdXJ2ZSA9PT0gaWRfc2VjcDM4NHIxKSB7XG4gICAgICAgICAgICBjcnYgPSBDT1NFQ1JWLlAzODQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENlcnRpZmljYXRlIHB1YmxpYyBrZXkgY29udGFpbmVkIHVuZXhwZWN0ZWQgbmFtZWRDdXJ2ZSAke25hbWVkQ3VydmV9IChFQzIpYCk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3Qgc3ViamVjdFB1YmxpY0tleSA9IG5ldyBVaW50OEFycmF5KHN1YmplY3RQdWJsaWNLZXlJbmZvLnN1YmplY3RQdWJsaWNLZXkpO1xuICAgICAgICBsZXQgeDtcbiAgICAgICAgbGV0IHk7XG4gICAgICAgIGlmIChzdWJqZWN0UHVibGljS2V5WzBdID09PSAweDA0KSB7XG4gICAgICAgICAgICAvLyBQdWJsaWMga2V5IGlzIGluIFwidW5jb21wcmVzc2VkIGZvcm1cIiwgc28gd2UgY2FuIHNwbGl0IHRoZSByZW1haW5pbmcgYnl0ZXMgaW4gaGFsZlxuICAgICAgICAgICAgbGV0IHBvaW50ZXIgPSAxO1xuICAgICAgICAgICAgY29uc3QgaGFsZkxlbmd0aCA9IChzdWJqZWN0UHVibGljS2V5Lmxlbmd0aCAtIDEpIC8gMjtcbiAgICAgICAgICAgIHggPSBzdWJqZWN0UHVibGljS2V5LnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gaGFsZkxlbmd0aCk7XG4gICAgICAgICAgICB5ID0gc3ViamVjdFB1YmxpY0tleS5zbGljZShwb2ludGVyKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignVE9ETzogRmlndXJlIG91dCBob3cgdG8gaGFuZGxlIHB1YmxpYyBrZXlzIGluIFwiY29tcHJlc3NlZCBmb3JtXCInKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBjb3NlRUMyUHViS2V5ID0gbmV3IE1hcCgpO1xuICAgICAgICBjb3NlRUMyUHViS2V5LnNldChDT1NFS0VZUy5rdHksIENPU0VLVFkuRUMyKTtcbiAgICAgICAgY29zZUVDMlB1YktleS5zZXQoQ09TRUtFWVMuYWxnLCBtYXBYNTA5U2lnbmF0dXJlQWxnVG9DT1NFQWxnKHNpZ25hdHVyZUFsZ29yaXRobSkpO1xuICAgICAgICBjb3NlRUMyUHViS2V5LnNldChDT1NFS0VZUy5jcnYsIGNydik7XG4gICAgICAgIGNvc2VFQzJQdWJLZXkuc2V0KENPU0VLRVlTLngsIHgpO1xuICAgICAgICBjb3NlRUMyUHViS2V5LnNldChDT1NFS0VZUy55LCB5KTtcbiAgICAgICAgY29zZVB1YmxpY0tleSA9IGNvc2VFQzJQdWJLZXk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHB1YmxpY0tleUFsZ29yaXRobUlEID09PSAnMS4yLjg0MC4xMTM1NDkuMS4xLjEnKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBSU0EgcHVibGljIGtleVxuICAgICAgICAgKi9cbiAgICAgICAgY29uc3QgcnNhUHVibGljS2V5ID0gQXNuUGFyc2VyLnBhcnNlKHN1YmplY3RQdWJsaWNLZXlJbmZvLnN1YmplY3RQdWJsaWNLZXksIFJTQVB1YmxpY0tleSk7XG4gICAgICAgIGNvbnN0IGNvc2VSU0FQdWJLZXkgPSBuZXcgTWFwKCk7XG4gICAgICAgIGNvc2VSU0FQdWJLZXkuc2V0KENPU0VLRVlTLmt0eSwgQ09TRUtUWS5SU0EpO1xuICAgICAgICBjb3NlUlNBUHViS2V5LnNldChDT1NFS0VZUy5hbGcsIG1hcFg1MDlTaWduYXR1cmVBbGdUb0NPU0VBbGcoc2lnbmF0dXJlQWxnb3JpdGhtKSk7XG4gICAgICAgIGNvc2VSU0FQdWJLZXkuc2V0KENPU0VLRVlTLm4sIG5ldyBVaW50OEFycmF5KHJzYVB1YmxpY0tleS5tb2R1bHVzKSk7XG4gICAgICAgIGNvc2VSU0FQdWJLZXkuc2V0KENPU0VLRVlTLmUsIG5ldyBVaW50OEFycmF5KHJzYVB1YmxpY0tleS5wdWJsaWNFeHBvbmVudCkpO1xuICAgICAgICBjb3NlUHVibGljS2V5ID0gY29zZVJTQVB1YktleTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2VydGlmaWNhdGUgcHVibGljIGtleSBjb250YWluZWQgdW5leHBlY3RlZCBhbGdvcml0aG0gSUQgJHtwdWJsaWNLZXlBbGdvcml0aG1JRH1gKTtcbiAgICB9XG4gICAgcmV0dXJuIGNvc2VQdWJsaWNLZXk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/cose.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COSEALG: () => (/* binding */ COSEALG),\n/* harmony export */   COSECRV: () => (/* binding */ COSECRV),\n/* harmony export */   COSEKEYS: () => (/* binding */ COSEKEYS),\n/* harmony export */   COSEKTY: () => (/* binding */ COSEKTY),\n/* harmony export */   isCOSEAlg: () => (/* binding */ isCOSEAlg),\n/* harmony export */   isCOSECrv: () => (/* binding */ isCOSECrv),\n/* harmony export */   isCOSEKty: () => (/* binding */ isCOSEKty),\n/* harmony export */   isCOSEPublicKeyEC2: () => (/* binding */ isCOSEPublicKeyEC2),\n/* harmony export */   isCOSEPublicKeyOKP: () => (/* binding */ isCOSEPublicKeyOKP),\n/* harmony export */   isCOSEPublicKeyRSA: () => (/* binding */ isCOSEPublicKeyRSA)\n/* harmony export */ });\nfunction isCOSEPublicKeyOKP(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.OKP;\n}\nfunction isCOSEPublicKeyEC2(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.EC2;\n}\nfunction isCOSEPublicKeyRSA(cosePublicKey) {\n    const kty = cosePublicKey.get(COSEKEYS.kty);\n    return isCOSEKty(kty) && kty === COSEKTY.RSA;\n}\n/**\n * COSE Keys\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#key-common-parameters\n * https://www.iana.org/assignments/cose/cose.xhtml#key-type-parameters\n */\nvar COSEKEYS;\n(function (COSEKEYS) {\n    COSEKEYS[COSEKEYS[\"kty\"] = 1] = \"kty\";\n    COSEKEYS[COSEKEYS[\"alg\"] = 3] = \"alg\";\n    COSEKEYS[COSEKEYS[\"crv\"] = -1] = \"crv\";\n    COSEKEYS[COSEKEYS[\"x\"] = -2] = \"x\";\n    COSEKEYS[COSEKEYS[\"y\"] = -3] = \"y\";\n    COSEKEYS[COSEKEYS[\"n\"] = -1] = \"n\";\n    COSEKEYS[COSEKEYS[\"e\"] = -2] = \"e\";\n})(COSEKEYS || (COSEKEYS = {}));\n/**\n * COSE Key Types\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#key-type\n */\nvar COSEKTY;\n(function (COSEKTY) {\n    COSEKTY[COSEKTY[\"OKP\"] = 1] = \"OKP\";\n    COSEKTY[COSEKTY[\"EC2\"] = 2] = \"EC2\";\n    COSEKTY[COSEKTY[\"RSA\"] = 3] = \"RSA\";\n})(COSEKTY || (COSEKTY = {}));\nfunction isCOSEKty(kty) {\n    return Object.values(COSEKTY).indexOf(kty) >= 0;\n}\n/**\n * COSE Curves\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#elliptic-curves\n */\nvar COSECRV;\n(function (COSECRV) {\n    COSECRV[COSECRV[\"P256\"] = 1] = \"P256\";\n    COSECRV[COSECRV[\"P384\"] = 2] = \"P384\";\n    COSECRV[COSECRV[\"P521\"] = 3] = \"P521\";\n    COSECRV[COSECRV[\"ED25519\"] = 6] = \"ED25519\";\n    COSECRV[COSECRV[\"SECP256K1\"] = 8] = \"SECP256K1\";\n})(COSECRV || (COSECRV = {}));\nfunction isCOSECrv(crv) {\n    return Object.values(COSECRV).indexOf(crv) >= 0;\n}\n/**\n * COSE Algorithms\n *\n * https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n */\nvar COSEALG;\n(function (COSEALG) {\n    COSEALG[COSEALG[\"ES256\"] = -7] = \"ES256\";\n    COSEALG[COSEALG[\"EdDSA\"] = -8] = \"EdDSA\";\n    COSEALG[COSEALG[\"ES384\"] = -35] = \"ES384\";\n    COSEALG[COSEALG[\"ES512\"] = -36] = \"ES512\";\n    COSEALG[COSEALG[\"PS256\"] = -37] = \"PS256\";\n    COSEALG[COSEALG[\"PS384\"] = -38] = \"PS384\";\n    COSEALG[COSEALG[\"PS512\"] = -39] = \"PS512\";\n    COSEALG[COSEALG[\"ES256K\"] = -47] = \"ES256K\";\n    COSEALG[COSEALG[\"RS256\"] = -257] = \"RS256\";\n    COSEALG[COSEALG[\"RS384\"] = -258] = \"RS384\";\n    COSEALG[COSEALG[\"RS512\"] = -259] = \"RS512\";\n    COSEALG[COSEALG[\"RS1\"] = -65535] = \"RS1\";\n})(COSEALG || (COSEALG = {}));\nfunction isCOSEAlg(alg) {\n    return Object.values(COSEALG).indexOf(alg) >= 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb3NlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDLDRCQUE0QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEJBQTBCO0FBQ3BCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsMEJBQTBCO0FBQ3BCO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQywwQkFBMEI7QUFDcEI7QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9jb3NlLmpzPzczYmIiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGZ1bmN0aW9uIGlzQ09TRVB1YmxpY0tleU9LUChjb3NlUHVibGljS2V5KSB7XG4gICAgY29uc3Qga3R5ID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMua3R5KTtcbiAgICByZXR1cm4gaXNDT1NFS3R5KGt0eSkgJiYga3R5ID09PSBDT1NFS1RZLk9LUDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc0NPU0VQdWJsaWNLZXlFQzIoY29zZVB1YmxpY0tleSkge1xuICAgIGNvbnN0IGt0eSA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmt0eSk7XG4gICAgcmV0dXJuIGlzQ09TRUt0eShrdHkpICYmIGt0eSA9PT0gQ09TRUtUWS5FQzI7XG59XG5leHBvcnQgZnVuY3Rpb24gaXNDT1NFUHVibGljS2V5UlNBKGNvc2VQdWJsaWNLZXkpIHtcbiAgICBjb25zdCBrdHkgPSBjb3NlUHVibGljS2V5LmdldChDT1NFS0VZUy5rdHkpO1xuICAgIHJldHVybiBpc0NPU0VLdHkoa3R5KSAmJiBrdHkgPT09IENPU0VLVFkuUlNBO1xufVxuLyoqXG4gKiBDT1NFIEtleXNcbiAqXG4gKiBodHRwczovL3d3dy5pYW5hLm9yZy9hc3NpZ25tZW50cy9jb3NlL2Nvc2UueGh0bWwja2V5LWNvbW1vbi1wYXJhbWV0ZXJzXG4gKiBodHRwczovL3d3dy5pYW5hLm9yZy9hc3NpZ25tZW50cy9jb3NlL2Nvc2UueGh0bWwja2V5LXR5cGUtcGFyYW1ldGVyc1xuICovXG5leHBvcnQgdmFyIENPU0VLRVlTO1xuKGZ1bmN0aW9uIChDT1NFS0VZUykge1xuICAgIENPU0VLRVlTW0NPU0VLRVlTW1wia3R5XCJdID0gMV0gPSBcImt0eVwiO1xuICAgIENPU0VLRVlTW0NPU0VLRVlTW1wiYWxnXCJdID0gM10gPSBcImFsZ1wiO1xuICAgIENPU0VLRVlTW0NPU0VLRVlTW1wiY3J2XCJdID0gLTFdID0gXCJjcnZcIjtcbiAgICBDT1NFS0VZU1tDT1NFS0VZU1tcInhcIl0gPSAtMl0gPSBcInhcIjtcbiAgICBDT1NFS0VZU1tDT1NFS0VZU1tcInlcIl0gPSAtM10gPSBcInlcIjtcbiAgICBDT1NFS0VZU1tDT1NFS0VZU1tcIm5cIl0gPSAtMV0gPSBcIm5cIjtcbiAgICBDT1NFS0VZU1tDT1NFS0VZU1tcImVcIl0gPSAtMl0gPSBcImVcIjtcbn0pKENPU0VLRVlTIHx8IChDT1NFS0VZUyA9IHt9KSk7XG4vKipcbiAqIENPU0UgS2V5IFR5cGVzXG4gKlxuICogaHR0cHM6Ly93d3cuaWFuYS5vcmcvYXNzaWdubWVudHMvY29zZS9jb3NlLnhodG1sI2tleS10eXBlXG4gKi9cbmV4cG9ydCB2YXIgQ09TRUtUWTtcbihmdW5jdGlvbiAoQ09TRUtUWSkge1xuICAgIENPU0VLVFlbQ09TRUtUWVtcIk9LUFwiXSA9IDFdID0gXCJPS1BcIjtcbiAgICBDT1NFS1RZW0NPU0VLVFlbXCJFQzJcIl0gPSAyXSA9IFwiRUMyXCI7XG4gICAgQ09TRUtUWVtDT1NFS1RZW1wiUlNBXCJdID0gM10gPSBcIlJTQVwiO1xufSkoQ09TRUtUWSB8fCAoQ09TRUtUWSA9IHt9KSk7XG5leHBvcnQgZnVuY3Rpb24gaXNDT1NFS3R5KGt0eSkge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKENPU0VLVFkpLmluZGV4T2Yoa3R5KSA+PSAwO1xufVxuLyoqXG4gKiBDT1NFIEN1cnZlc1xuICpcbiAqIGh0dHBzOi8vd3d3LmlhbmEub3JnL2Fzc2lnbm1lbnRzL2Nvc2UvY29zZS54aHRtbCNlbGxpcHRpYy1jdXJ2ZXNcbiAqL1xuZXhwb3J0IHZhciBDT1NFQ1JWO1xuKGZ1bmN0aW9uIChDT1NFQ1JWKSB7XG4gICAgQ09TRUNSVltDT1NFQ1JWW1wiUDI1NlwiXSA9IDFdID0gXCJQMjU2XCI7XG4gICAgQ09TRUNSVltDT1NFQ1JWW1wiUDM4NFwiXSA9IDJdID0gXCJQMzg0XCI7XG4gICAgQ09TRUNSVltDT1NFQ1JWW1wiUDUyMVwiXSA9IDNdID0gXCJQNTIxXCI7XG4gICAgQ09TRUNSVltDT1NFQ1JWW1wiRUQyNTUxOVwiXSA9IDZdID0gXCJFRDI1NTE5XCI7XG4gICAgQ09TRUNSVltDT1NFQ1JWW1wiU0VDUDI1NksxXCJdID0gOF0gPSBcIlNFQ1AyNTZLMVwiO1xufSkoQ09TRUNSViB8fCAoQ09TRUNSViA9IHt9KSk7XG5leHBvcnQgZnVuY3Rpb24gaXNDT1NFQ3J2KGNydikge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKENPU0VDUlYpLmluZGV4T2YoY3J2KSA+PSAwO1xufVxuLyoqXG4gKiBDT1NFIEFsZ29yaXRobXNcbiAqXG4gKiBodHRwczovL3d3dy5pYW5hLm9yZy9hc3NpZ25tZW50cy9jb3NlL2Nvc2UueGh0bWwjYWxnb3JpdGhtc1xuICovXG5leHBvcnQgdmFyIENPU0VBTEc7XG4oZnVuY3Rpb24gKENPU0VBTEcpIHtcbiAgICBDT1NFQUxHW0NPU0VBTEdbXCJFUzI1NlwiXSA9IC03XSA9IFwiRVMyNTZcIjtcbiAgICBDT1NFQUxHW0NPU0VBTEdbXCJFZERTQVwiXSA9IC04XSA9IFwiRWREU0FcIjtcbiAgICBDT1NFQUxHW0NPU0VBTEdbXCJFUzM4NFwiXSA9IC0zNV0gPSBcIkVTMzg0XCI7XG4gICAgQ09TRUFMR1tDT1NFQUxHW1wiRVM1MTJcIl0gPSAtMzZdID0gXCJFUzUxMlwiO1xuICAgIENPU0VBTEdbQ09TRUFMR1tcIlBTMjU2XCJdID0gLTM3XSA9IFwiUFMyNTZcIjtcbiAgICBDT1NFQUxHW0NPU0VBTEdbXCJQUzM4NFwiXSA9IC0zOF0gPSBcIlBTMzg0XCI7XG4gICAgQ09TRUFMR1tDT1NFQUxHW1wiUFM1MTJcIl0gPSAtMzldID0gXCJQUzUxMlwiO1xuICAgIENPU0VBTEdbQ09TRUFMR1tcIkVTMjU2S1wiXSA9IC00N10gPSBcIkVTMjU2S1wiO1xuICAgIENPU0VBTEdbQ09TRUFMR1tcIlJTMjU2XCJdID0gLTI1N10gPSBcIlJTMjU2XCI7XG4gICAgQ09TRUFMR1tDT1NFQUxHW1wiUlMzODRcIl0gPSAtMjU4XSA9IFwiUlMzODRcIjtcbiAgICBDT1NFQUxHW0NPU0VBTEdbXCJSUzUxMlwiXSA9IC0yNTldID0gXCJSUzUxMlwiO1xuICAgIENPU0VBTEdbQ09TRUFMR1tcIlJTMVwiXSA9IC02NTUzNV0gPSBcIlJTMVwiO1xufSkoQ09TRUFMRyB8fCAoQ09TRUFMRyA9IHt9KSk7XG5leHBvcnQgZnVuY3Rpb24gaXNDT1NFQWxnKGFsZykge1xuICAgIHJldHVybiBPYmplY3QudmFsdWVzKENPU0VBTEcpLmluZGV4T2YoYWxnKSA+PSAwO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _decodeAttestationObjectInternals: () => (/* binding */ _decodeAttestationObjectInternals),\n/* harmony export */   decodeAttestationObject: () => (/* binding */ decodeAttestationObject)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Convert an AttestationObject buffer to a proper object\n *\n * @param base64AttestationObject Attestation Object buffer\n */\nfunction decodeAttestationObject(attestationObject) {\n    return _decodeAttestationObjectInternals.stubThis(_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCBOR.decodeFirst(attestationObject));\n}\n// Make it possible to stub the return value during testing\nconst _decodeAttestationObjectInternals = {\n    stubThis: (value) => value,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVBdHRlc3RhdGlvbk9iamVjdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1Asc0RBQXNELDhEQUFtQjtBQUN6RTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVBdHRlc3RhdGlvbk9iamVjdC5qcz84NTUyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0NCT1IgfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG4vKipcbiAqIENvbnZlcnQgYW4gQXR0ZXN0YXRpb25PYmplY3QgYnVmZmVyIHRvIGEgcHJvcGVyIG9iamVjdFxuICpcbiAqIEBwYXJhbSBiYXNlNjRBdHRlc3RhdGlvbk9iamVjdCBBdHRlc3RhdGlvbiBPYmplY3QgYnVmZmVyXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVBdHRlc3RhdGlvbk9iamVjdChhdHRlc3RhdGlvbk9iamVjdCkge1xuICAgIHJldHVybiBfZGVjb2RlQXR0ZXN0YXRpb25PYmplY3RJbnRlcm5hbHMuc3R1YlRoaXMoaXNvQ0JPUi5kZWNvZGVGaXJzdChhdHRlc3RhdGlvbk9iamVjdCkpO1xufVxuLy8gTWFrZSBpdCBwb3NzaWJsZSB0byBzdHViIHRoZSByZXR1cm4gdmFsdWUgZHVyaW5nIHRlc3RpbmdcbmV4cG9ydCBjb25zdCBfZGVjb2RlQXR0ZXN0YXRpb25PYmplY3RJbnRlcm5hbHMgPSB7XG4gICAgc3R1YlRoaXM6ICh2YWx1ZSkgPT4gdmFsdWUsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAuthenticatorExtensions.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/decodeAuthenticatorExtensions.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeAuthenticatorExtensions: () => (/* binding */ decodeAuthenticatorExtensions)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Convert authenticator extension data buffer to a proper object\n *\n * @param extensionData Authenticator Extension Data buffer\n */\nfunction decodeAuthenticatorExtensions(extensionData) {\n    let toCBOR;\n    try {\n        toCBOR = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCBOR.decodeFirst(extensionData);\n    }\n    catch (err) {\n        const _err = err;\n        throw new Error(`Error decoding authenticator extensions: ${_err.message}`);\n    }\n    return convertMapToObjectDeep(toCBOR);\n}\n/**\n * CBOR-encoded extensions can be deeply-nested Maps, which are too deep for a simple\n * `Object.entries()`. This method will recursively make sure that all Maps are converted into\n * basic objects.\n */\nfunction convertMapToObjectDeep(input) {\n    const mapped = {};\n    for (const [key, value] of input) {\n        if (value instanceof Map) {\n            mapped[key] = convertMapToObjectDeep(value);\n        }\n        else {\n            mapped[key] = value;\n        }\n    }\n    return mapped;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVBdXRoZW50aWNhdG9yRXh0ZW5zaW9ucy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF5QztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsaUJBQWlCLDhEQUFtQjtBQUNwQztBQUNBO0FBQ0E7QUFDQSxvRUFBb0UsYUFBYTtBQUNqRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVBdXRoZW50aWNhdG9yRXh0ZW5zaW9ucy5qcz8yYzliIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0NCT1IgfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG4vKipcbiAqIENvbnZlcnQgYXV0aGVudGljYXRvciBleHRlbnNpb24gZGF0YSBidWZmZXIgdG8gYSBwcm9wZXIgb2JqZWN0XG4gKlxuICogQHBhcmFtIGV4dGVuc2lvbkRhdGEgQXV0aGVudGljYXRvciBFeHRlbnNpb24gRGF0YSBidWZmZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGRlY29kZUF1dGhlbnRpY2F0b3JFeHRlbnNpb25zKGV4dGVuc2lvbkRhdGEpIHtcbiAgICBsZXQgdG9DQk9SO1xuICAgIHRyeSB7XG4gICAgICAgIHRvQ0JPUiA9IGlzb0NCT1IuZGVjb2RlRmlyc3QoZXh0ZW5zaW9uRGF0YSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc3QgX2VyciA9IGVycjtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBFcnJvciBkZWNvZGluZyBhdXRoZW50aWNhdG9yIGV4dGVuc2lvbnM6ICR7X2Vyci5tZXNzYWdlfWApO1xuICAgIH1cbiAgICByZXR1cm4gY29udmVydE1hcFRvT2JqZWN0RGVlcCh0b0NCT1IpO1xufVxuLyoqXG4gKiBDQk9SLWVuY29kZWQgZXh0ZW5zaW9ucyBjYW4gYmUgZGVlcGx5LW5lc3RlZCBNYXBzLCB3aGljaCBhcmUgdG9vIGRlZXAgZm9yIGEgc2ltcGxlXG4gKiBgT2JqZWN0LmVudHJpZXMoKWAuIFRoaXMgbWV0aG9kIHdpbGwgcmVjdXJzaXZlbHkgbWFrZSBzdXJlIHRoYXQgYWxsIE1hcHMgYXJlIGNvbnZlcnRlZCBpbnRvXG4gKiBiYXNpYyBvYmplY3RzLlxuICovXG5mdW5jdGlvbiBjb252ZXJ0TWFwVG9PYmplY3REZWVwKGlucHV0KSB7XG4gICAgY29uc3QgbWFwcGVkID0ge307XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgaW5wdXQpIHtcbiAgICAgICAgaWYgKHZhbHVlIGluc3RhbmNlb2YgTWFwKSB7XG4gICAgICAgICAgICBtYXBwZWRba2V5XSA9IGNvbnZlcnRNYXBUb09iamVjdERlZXAodmFsdWUpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbWFwcGVkW2tleV0gPSB2YWx1ZTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWFwcGVkO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAuthenticatorExtensions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _decodeClientDataJSONInternals: () => (/* binding */ _decodeClientDataJSONInternals),\n/* harmony export */   decodeClientDataJSON: () => (/* binding */ decodeClientDataJSON)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Decode an authenticator's base64url-encoded clientDataJSON to JSON\n */\nfunction decodeClientDataJSON(data) {\n    const toString = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toString(data);\n    const clientData = JSON.parse(toString);\n    return _decodeClientDataJSONInternals.stubThis(clientData);\n}\n// Make it possible to stub the return value during testing\nconst _decodeClientDataJSONInternals = {\n    stubThis: (value) => value,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVDbGllbnREYXRhSlNPTi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBOEM7QUFDOUM7QUFDQTtBQUNBO0FBQ087QUFDUCxxQkFBcUIsZ0VBQXFCO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVDbGllbnREYXRhSlNPTi5qcz9hMjdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0Jhc2U2NFVSTCB9IGZyb20gJy4vaXNvL2luZGV4LmpzJztcbi8qKlxuICogRGVjb2RlIGFuIGF1dGhlbnRpY2F0b3IncyBiYXNlNjR1cmwtZW5jb2RlZCBjbGllbnREYXRhSlNPTiB0byBKU09OXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVDbGllbnREYXRhSlNPTihkYXRhKSB7XG4gICAgY29uc3QgdG9TdHJpbmcgPSBpc29CYXNlNjRVUkwudG9TdHJpbmcoZGF0YSk7XG4gICAgY29uc3QgY2xpZW50RGF0YSA9IEpTT04ucGFyc2UodG9TdHJpbmcpO1xuICAgIHJldHVybiBfZGVjb2RlQ2xpZW50RGF0YUpTT05JbnRlcm5hbHMuc3R1YlRoaXMoY2xpZW50RGF0YSk7XG59XG4vLyBNYWtlIGl0IHBvc3NpYmxlIHRvIHN0dWIgdGhlIHJldHVybiB2YWx1ZSBkdXJpbmcgdGVzdGluZ1xuZXhwb3J0IGNvbnN0IF9kZWNvZGVDbGllbnREYXRhSlNPTkludGVybmFscyA9IHtcbiAgICBzdHViVGhpczogKHZhbHVlKSA9PiB2YWx1ZSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js ***!
  \**************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _decodeCredentialPublicKeyInternals: () => (/* binding */ _decodeCredentialPublicKeyInternals),\n/* harmony export */   decodeCredentialPublicKey: () => (/* binding */ decodeCredentialPublicKey)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\nfunction decodeCredentialPublicKey(publicKey) {\n    return _decodeCredentialPublicKeyInternals.stubThis(_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCBOR.decodeFirst(publicKey));\n}\n// Make it possible to stub the return value during testing\nconst _decodeCredentialPublicKeyInternals = {\n    stubThis: (value) => value,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9kZWNvZGVDcmVkZW50aWFsUHVibGljS2V5LmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUF5QztBQUNsQztBQUNQLHdEQUF3RCw4REFBbUI7QUFDM0U7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvZGVjb2RlQ3JlZGVudGlhbFB1YmxpY0tleS5qcz9iMzRmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0NCT1IgfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG5leHBvcnQgZnVuY3Rpb24gZGVjb2RlQ3JlZGVudGlhbFB1YmxpY0tleShwdWJsaWNLZXkpIHtcbiAgICByZXR1cm4gX2RlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXlJbnRlcm5hbHMuc3R1YlRoaXMoaXNvQ0JPUi5kZWNvZGVGaXJzdChwdWJsaWNLZXkpKTtcbn1cbi8vIE1ha2UgaXQgcG9zc2libGUgdG8gc3R1YiB0aGUgcmV0dXJuIHZhbHVlIGR1cmluZyB0ZXN0aW5nXG5leHBvcnQgY29uc3QgX2RlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXlJbnRlcm5hbHMgPSB7XG4gICAgc3R1YlRoaXM6ICh2YWx1ZSkgPT4gdmFsdWUsXG59O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/fetch.js":
/*!******************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/fetch.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _fetchInternals: () => (/* binding */ _fetchInternals),\n/* harmony export */   fetch: () => (/* binding */ fetch)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n\n/**\n * A simple method for requesting data via standard `fetch`. Should work\n * across multiple runtimes.\n */\nfunction fetch(url) {\n    return _fetchInternals.stubThis(url);\n}\n// Make it possible to stub the return value during testing\nconst _fetchInternals = {\n    stubThis: (url) => (0,_deps_js__WEBPACK_IMPORTED_MODULE_0__.crossFetch)(url),\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9mZXRjaC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsdUJBQXVCLG9EQUFVO0FBQ2pDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9mZXRjaC5qcz8zYTllIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNyb3NzRmV0Y2ggfSBmcm9tICcuLi9kZXBzLmpzJztcbi8qKlxuICogQSBzaW1wbGUgbWV0aG9kIGZvciByZXF1ZXN0aW5nIGRhdGEgdmlhIHN0YW5kYXJkIGBmZXRjaGAuIFNob3VsZCB3b3JrXG4gKiBhY3Jvc3MgbXVsdGlwbGUgcnVudGltZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmZXRjaCh1cmwpIHtcbiAgICByZXR1cm4gX2ZldGNoSW50ZXJuYWxzLnN0dWJUaGlzKHVybCk7XG59XG4vLyBNYWtlIGl0IHBvc3NpYmxlIHRvIHN0dWIgdGhlIHJldHVybiB2YWx1ZSBkdXJpbmcgdGVzdGluZ1xuZXhwb3J0IGNvbnN0IF9mZXRjaEludGVybmFscyA9IHtcbiAgICBzdHViVGhpczogKHVybCkgPT4gY3Jvc3NGZXRjaCh1cmwpLFxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/fetch.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _generateChallengeInternals: () => (/* binding */ _generateChallengeInternals),\n/* harmony export */   generateChallenge: () => (/* binding */ generateChallenge)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Generate a suitably random value to be used as an attestation or assertion challenge\n */\nasync function generateChallenge() {\n    /**\n     * WebAuthn spec says that 16 bytes is a good minimum:\n     *\n     * \"In order to prevent replay attacks, the challenges MUST contain enough entropy to make\n     * guessing them infeasible. Challenges SHOULD therefore be at least 16 bytes long.\"\n     *\n     * Just in case, let's double it\n     */\n    const challenge = new Uint8Array(32);\n    await _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCrypto.getRandomValues(challenge);\n    return _generateChallengeInternals.stubThis(challenge);\n}\n// Make it possible to stub the return value during testing\nconst _generateChallengeInternals = {\n    stubThis: (value) => value,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9nZW5lcmF0ZUNoYWxsZW5nZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBMkM7QUFDM0M7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxVQUFVLG9FQUF5QjtBQUNuQztBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2dlbmVyYXRlQ2hhbGxlbmdlLmpzPzA5NWIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNvQ3J5cHRvIH0gZnJvbSAnLi9pc28vaW5kZXguanMnO1xuLyoqXG4gKiBHZW5lcmF0ZSBhIHN1aXRhYmx5IHJhbmRvbSB2YWx1ZSB0byBiZSB1c2VkIGFzIGFuIGF0dGVzdGF0aW9uIG9yIGFzc2VydGlvbiBjaGFsbGVuZ2VcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdlbmVyYXRlQ2hhbGxlbmdlKCkge1xuICAgIC8qKlxuICAgICAqIFdlYkF1dGhuIHNwZWMgc2F5cyB0aGF0IDE2IGJ5dGVzIGlzIGEgZ29vZCBtaW5pbXVtOlxuICAgICAqXG4gICAgICogXCJJbiBvcmRlciB0byBwcmV2ZW50IHJlcGxheSBhdHRhY2tzLCB0aGUgY2hhbGxlbmdlcyBNVVNUIGNvbnRhaW4gZW5vdWdoIGVudHJvcHkgdG8gbWFrZVxuICAgICAqIGd1ZXNzaW5nIHRoZW0gaW5mZWFzaWJsZS4gQ2hhbGxlbmdlcyBTSE9VTEQgdGhlcmVmb3JlIGJlIGF0IGxlYXN0IDE2IGJ5dGVzIGxvbmcuXCJcbiAgICAgKlxuICAgICAqIEp1c3QgaW4gY2FzZSwgbGV0J3MgZG91YmxlIGl0XG4gICAgICovXG4gICAgY29uc3QgY2hhbGxlbmdlID0gbmV3IFVpbnQ4QXJyYXkoMzIpO1xuICAgIGF3YWl0IGlzb0NyeXB0by5nZXRSYW5kb21WYWx1ZXMoY2hhbGxlbmdlKTtcbiAgICByZXR1cm4gX2dlbmVyYXRlQ2hhbGxlbmdlSW50ZXJuYWxzLnN0dWJUaGlzKGNoYWxsZW5nZSk7XG59XG4vLyBNYWtlIGl0IHBvc3NpYmxlIHRvIHN0dWIgdGhlIHJldHVybiB2YWx1ZSBkdXJpbmcgdGVzdGluZ1xuZXhwb3J0IGNvbnN0IF9nZW5lcmF0ZUNoYWxsZW5nZUludGVybmFscyA9IHtcbiAgICBzdHViVGhpczogKHZhbHVlKSA9PiB2YWx1ZSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js ***!
  \*******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getCertificateInfo: () => (/* binding */ getCertificateInfo)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n\nconst issuerSubjectIDKey = {\n    '2.5.4.6': 'C',\n    '2.5.4.10': 'O',\n    '2.5.4.11': 'OU',\n    '2.5.4.3': 'CN',\n};\n/**\n * Extract PEM certificate info\n *\n * @param pemCertificate Result from call to `convertASN1toPEM(x5c[0])`\n */\nfunction getCertificateInfo(leafCertBuffer) {\n    const x509 = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(leafCertBuffer, _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    const parsedCert = x509.tbsCertificate;\n    // Issuer\n    const issuer = { combined: '' };\n    parsedCert.issuer.forEach(([iss]) => {\n        const key = issuerSubjectIDKey[iss.type];\n        if (key) {\n            issuer[key] = iss.value.toString();\n        }\n    });\n    issuer.combined = issuerSubjectToString(issuer);\n    // Subject\n    const subject = { combined: '' };\n    parsedCert.subject.forEach(([iss]) => {\n        const key = issuerSubjectIDKey[iss.type];\n        if (key) {\n            subject[key] = iss.value.toString();\n        }\n    });\n    subject.combined = issuerSubjectToString(subject);\n    let basicConstraintsCA = false;\n    if (parsedCert.extensions) {\n        // console.log(parsedCert.extensions);\n        for (const ext of parsedCert.extensions) {\n            if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_basicConstraints) {\n                const basicConstraints = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.BasicConstraints);\n                basicConstraintsCA = basicConstraints.cA;\n            }\n        }\n    }\n    return {\n        issuer,\n        subject,\n        version: parsedCert.version,\n        basicConstraintsCA,\n        notBefore: parsedCert.validity.notBefore.getTime(),\n        notAfter: parsedCert.validity.notAfter.getTime(),\n        parsedCertificate: x509,\n    };\n}\n/**\n * Stringify the parts of Issuer or Subject info for easier comparison of subject issuers with\n * issuer subjects.\n *\n * The order might seem arbitrary, because it is. It should be enough that the two are stringified\n * in the same order.\n */\nfunction issuerSubjectToString(input) {\n    const parts = [];\n    if (input.C) {\n        parts.push(input.C);\n    }\n    if (input.O) {\n        parts.push(input.O);\n    }\n    if (input.OU) {\n        parts.push(input.OU);\n    }\n    if (input.CN) {\n        parts.push(input.CN);\n    }\n    return parts.join(' : ');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9nZXRDZXJ0aWZpY2F0ZUluZm8uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBOEY7QUFDOUY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsaUJBQWlCLCtDQUFTLHVCQUF1QixpREFBVztBQUM1RDtBQUNBO0FBQ0EscUJBQXFCO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsNERBQXNCO0FBQ3JELHlDQUF5QywrQ0FBUyxzQkFBc0Isc0RBQWdCO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9nZXRDZXJ0aWZpY2F0ZUluZm8uanM/YjU1OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc25QYXJzZXIsIEJhc2ljQ29uc3RyYWludHMsIENlcnRpZmljYXRlLCBpZF9jZV9iYXNpY0NvbnN0cmFpbnRzIH0gZnJvbSAnLi4vZGVwcy5qcyc7XG5jb25zdCBpc3N1ZXJTdWJqZWN0SURLZXkgPSB7XG4gICAgJzIuNS40LjYnOiAnQycsXG4gICAgJzIuNS40LjEwJzogJ08nLFxuICAgICcyLjUuNC4xMSc6ICdPVScsXG4gICAgJzIuNS40LjMnOiAnQ04nLFxufTtcbi8qKlxuICogRXh0cmFjdCBQRU0gY2VydGlmaWNhdGUgaW5mb1xuICpcbiAqIEBwYXJhbSBwZW1DZXJ0aWZpY2F0ZSBSZXN1bHQgZnJvbSBjYWxsIHRvIGBjb252ZXJ0QVNOMXRvUEVNKHg1Y1swXSlgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRDZXJ0aWZpY2F0ZUluZm8obGVhZkNlcnRCdWZmZXIpIHtcbiAgICBjb25zdCB4NTA5ID0gQXNuUGFyc2VyLnBhcnNlKGxlYWZDZXJ0QnVmZmVyLCBDZXJ0aWZpY2F0ZSk7XG4gICAgY29uc3QgcGFyc2VkQ2VydCA9IHg1MDkudGJzQ2VydGlmaWNhdGU7XG4gICAgLy8gSXNzdWVyXG4gICAgY29uc3QgaXNzdWVyID0geyBjb21iaW5lZDogJycgfTtcbiAgICBwYXJzZWRDZXJ0Lmlzc3Vlci5mb3JFYWNoKChbaXNzXSkgPT4ge1xuICAgICAgICBjb25zdCBrZXkgPSBpc3N1ZXJTdWJqZWN0SURLZXlbaXNzLnR5cGVdO1xuICAgICAgICBpZiAoa2V5KSB7XG4gICAgICAgICAgICBpc3N1ZXJba2V5XSA9IGlzcy52YWx1ZS50b1N0cmluZygpO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgaXNzdWVyLmNvbWJpbmVkID0gaXNzdWVyU3ViamVjdFRvU3RyaW5nKGlzc3Vlcik7XG4gICAgLy8gU3ViamVjdFxuICAgIGNvbnN0IHN1YmplY3QgPSB7IGNvbWJpbmVkOiAnJyB9O1xuICAgIHBhcnNlZENlcnQuc3ViamVjdC5mb3JFYWNoKChbaXNzXSkgPT4ge1xuICAgICAgICBjb25zdCBrZXkgPSBpc3N1ZXJTdWJqZWN0SURLZXlbaXNzLnR5cGVdO1xuICAgICAgICBpZiAoa2V5KSB7XG4gICAgICAgICAgICBzdWJqZWN0W2tleV0gPSBpc3MudmFsdWUudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHN1YmplY3QuY29tYmluZWQgPSBpc3N1ZXJTdWJqZWN0VG9TdHJpbmcoc3ViamVjdCk7XG4gICAgbGV0IGJhc2ljQ29uc3RyYWludHNDQSA9IGZhbHNlO1xuICAgIGlmIChwYXJzZWRDZXJ0LmV4dGVuc2lvbnMpIHtcbiAgICAgICAgLy8gY29uc29sZS5sb2cocGFyc2VkQ2VydC5leHRlbnNpb25zKTtcbiAgICAgICAgZm9yIChjb25zdCBleHQgb2YgcGFyc2VkQ2VydC5leHRlbnNpb25zKSB7XG4gICAgICAgICAgICBpZiAoZXh0LmV4dG5JRCA9PT0gaWRfY2VfYmFzaWNDb25zdHJhaW50cykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGJhc2ljQ29uc3RyYWludHMgPSBBc25QYXJzZXIucGFyc2UoZXh0LmV4dG5WYWx1ZSwgQmFzaWNDb25zdHJhaW50cyk7XG4gICAgICAgICAgICAgICAgYmFzaWNDb25zdHJhaW50c0NBID0gYmFzaWNDb25zdHJhaW50cy5jQTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICBpc3N1ZXIsXG4gICAgICAgIHN1YmplY3QsXG4gICAgICAgIHZlcnNpb246IHBhcnNlZENlcnQudmVyc2lvbixcbiAgICAgICAgYmFzaWNDb25zdHJhaW50c0NBLFxuICAgICAgICBub3RCZWZvcmU6IHBhcnNlZENlcnQudmFsaWRpdHkubm90QmVmb3JlLmdldFRpbWUoKSxcbiAgICAgICAgbm90QWZ0ZXI6IHBhcnNlZENlcnQudmFsaWRpdHkubm90QWZ0ZXIuZ2V0VGltZSgpLFxuICAgICAgICBwYXJzZWRDZXJ0aWZpY2F0ZTogeDUwOSxcbiAgICB9O1xufVxuLyoqXG4gKiBTdHJpbmdpZnkgdGhlIHBhcnRzIG9mIElzc3VlciBvciBTdWJqZWN0IGluZm8gZm9yIGVhc2llciBjb21wYXJpc29uIG9mIHN1YmplY3QgaXNzdWVycyB3aXRoXG4gKiBpc3N1ZXIgc3ViamVjdHMuXG4gKlxuICogVGhlIG9yZGVyIG1pZ2h0IHNlZW0gYXJiaXRyYXJ5LCBiZWNhdXNlIGl0IGlzLiBJdCBzaG91bGQgYmUgZW5vdWdoIHRoYXQgdGhlIHR3byBhcmUgc3RyaW5naWZpZWRcbiAqIGluIHRoZSBzYW1lIG9yZGVyLlxuICovXG5mdW5jdGlvbiBpc3N1ZXJTdWJqZWN0VG9TdHJpbmcoaW5wdXQpIHtcbiAgICBjb25zdCBwYXJ0cyA9IFtdO1xuICAgIGlmIChpbnB1dC5DKSB7XG4gICAgICAgIHBhcnRzLnB1c2goaW5wdXQuQyk7XG4gICAgfVxuICAgIGlmIChpbnB1dC5PKSB7XG4gICAgICAgIHBhcnRzLnB1c2goaW5wdXQuTyk7XG4gICAgfVxuICAgIGlmIChpbnB1dC5PVSkge1xuICAgICAgICBwYXJ0cy5wdXNoKGlucHV0Lk9VKTtcbiAgICB9XG4gICAgaWYgKGlucHV0LkNOKSB7XG4gICAgICAgIHBhcnRzLnB1c2goaW5wdXQuQ04pO1xuICAgIH1cbiAgICByZXR1cm4gcGFydHMuam9pbignIDogJyk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/index.js":
/*!******************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/index.js ***!
  \******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   convertAAGUIDToString: () => (/* reexport safe */ _convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_0__.convertAAGUIDToString),\n/* harmony export */   convertCOSEtoPKCS: () => (/* reexport safe */ _convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_2__.convertCOSEtoPKCS),\n/* harmony export */   convertCertBufferToPEM: () => (/* reexport safe */ _convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM),\n/* harmony export */   cose: () => (/* reexport module object */ _cose_js__WEBPACK_IMPORTED_MODULE_14__),\n/* harmony export */   decodeAttestationObject: () => (/* reexport safe */ _decodeAttestationObject_js__WEBPACK_IMPORTED_MODULE_3__.decodeAttestationObject),\n/* harmony export */   decodeClientDataJSON: () => (/* reexport safe */ _decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_4__.decodeClientDataJSON),\n/* harmony export */   decodeCredentialPublicKey: () => (/* reexport safe */ _decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_5__.decodeCredentialPublicKey),\n/* harmony export */   generateChallenge: () => (/* reexport safe */ _generateChallenge_js__WEBPACK_IMPORTED_MODULE_6__.generateChallenge),\n/* harmony export */   getCertificateInfo: () => (/* reexport safe */ _getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_7__.getCertificateInfo),\n/* harmony export */   isCertRevoked: () => (/* reexport safe */ _isCertRevoked_js__WEBPACK_IMPORTED_MODULE_8__.isCertRevoked),\n/* harmony export */   isoBase64URL: () => (/* reexport safe */ _iso_index_js__WEBPACK_IMPORTED_MODULE_13__.isoBase64URL),\n/* harmony export */   isoCBOR: () => (/* reexport safe */ _iso_index_js__WEBPACK_IMPORTED_MODULE_13__.isoCBOR),\n/* harmony export */   isoCrypto: () => (/* reexport safe */ _iso_index_js__WEBPACK_IMPORTED_MODULE_13__.isoCrypto),\n/* harmony export */   isoUint8Array: () => (/* reexport safe */ _iso_index_js__WEBPACK_IMPORTED_MODULE_13__.isoUint8Array),\n/* harmony export */   parseAuthenticatorData: () => (/* reexport safe */ _parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_9__.parseAuthenticatorData),\n/* harmony export */   toHash: () => (/* reexport safe */ _toHash_js__WEBPACK_IMPORTED_MODULE_10__.toHash),\n/* harmony export */   validateCertificatePath: () => (/* reexport safe */ _validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_11__.validateCertificatePath),\n/* harmony export */   verifySignature: () => (/* reexport safe */ _verifySignature_js__WEBPACK_IMPORTED_MODULE_12__.verifySignature)\n/* harmony export */ });\n/* harmony import */ var _convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./convertAAGUIDToString.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js\");\n/* harmony import */ var _convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./convertCOSEtoPKCS.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\");\n/* harmony import */ var _decodeAttestationObject_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./decodeAttestationObject.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js\");\n/* harmony import */ var _decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./decodeClientDataJSON.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js\");\n/* harmony import */ var _decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _generateChallenge_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./generateChallenge.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js\");\n/* harmony import */ var _getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _isCertRevoked_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./isCertRevoked.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js\");\n/* harmony import */ var _parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./parseAuthenticatorData.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js\");\n/* harmony import */ var _toHash_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _verifySignature_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBbUU7QUFDRTtBQUNWO0FBQ1k7QUFDTjtBQUNVO0FBQ2hCO0FBQ0U7QUFDVjtBQUNrQjtBQUNoQztBQUNrQztBQUNoQjtBQUMwQjtBQUMvQztBQUM0UyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaW5kZXguanM/YjZlZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb252ZXJ0QUFHVUlEVG9TdHJpbmcgfSBmcm9tICcuL2NvbnZlcnRBQUdVSURUb1N0cmluZy5qcyc7XG5pbXBvcnQgeyBjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNIH0gZnJvbSAnLi9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzJztcbmltcG9ydCB7IGNvbnZlcnRDT1NFdG9QS0NTIH0gZnJvbSAnLi9jb252ZXJ0Q09TRXRvUEtDUy5qcyc7XG5pbXBvcnQgeyBkZWNvZGVBdHRlc3RhdGlvbk9iamVjdCB9IGZyb20gJy4vZGVjb2RlQXR0ZXN0YXRpb25PYmplY3QuanMnO1xuaW1wb3J0IHsgZGVjb2RlQ2xpZW50RGF0YUpTT04gfSBmcm9tICcuL2RlY29kZUNsaWVudERhdGFKU09OLmpzJztcbmltcG9ydCB7IGRlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXkgfSBmcm9tICcuL2RlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXkuanMnO1xuaW1wb3J0IHsgZ2VuZXJhdGVDaGFsbGVuZ2UgfSBmcm9tICcuL2dlbmVyYXRlQ2hhbGxlbmdlLmpzJztcbmltcG9ydCB7IGdldENlcnRpZmljYXRlSW5mbyB9IGZyb20gJy4vZ2V0Q2VydGlmaWNhdGVJbmZvLmpzJztcbmltcG9ydCB7IGlzQ2VydFJldm9rZWQgfSBmcm9tICcuL2lzQ2VydFJldm9rZWQuanMnO1xuaW1wb3J0IHsgcGFyc2VBdXRoZW50aWNhdG9yRGF0YSB9IGZyb20gJy4vcGFyc2VBdXRoZW50aWNhdG9yRGF0YS5qcyc7XG5pbXBvcnQgeyB0b0hhc2ggfSBmcm9tICcuL3RvSGFzaC5qcyc7XG5pbXBvcnQgeyB2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aCB9IGZyb20gJy4vdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGguanMnO1xuaW1wb3J0IHsgdmVyaWZ5U2lnbmF0dXJlIH0gZnJvbSAnLi92ZXJpZnlTaWduYXR1cmUuanMnO1xuaW1wb3J0IHsgaXNvQmFzZTY0VVJMLCBpc29DQk9SLCBpc29DcnlwdG8sIGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG5pbXBvcnQgKiBhcyBjb3NlIGZyb20gJy4vY29zZS5qcyc7XG5leHBvcnQgeyBjb252ZXJ0QUFHVUlEVG9TdHJpbmcsIGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0sIGNvbnZlcnRDT1NFdG9QS0NTLCBjb3NlLCBkZWNvZGVBdHRlc3RhdGlvbk9iamVjdCwgZGVjb2RlQ2xpZW50RGF0YUpTT04sIGRlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXksIGdlbmVyYXRlQ2hhbGxlbmdlLCBnZXRDZXJ0aWZpY2F0ZUluZm8sIGlzQ2VydFJldm9rZWQsIGlzb0Jhc2U2NFVSTCwgaXNvQ0JPUiwgaXNvQ3J5cHRvLCBpc29VaW50OEFycmF5LCBwYXJzZUF1dGhlbnRpY2F0b3JEYXRhLCB0b0hhc2gsIHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoLCB2ZXJpZnlTaWduYXR1cmUsIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isCertRevoked: () => (/* binding */ isCertRevoked)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _fetch_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./fetch.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/fetch.js\");\n\n\n\nconst cacheRevokedCerts = {};\n/**\n * A method to pull a CRL from a certificate and compare its serial number to the list of revoked\n * certificate serial numbers within the CRL.\n *\n * CRL certificate structure referenced from https://tools.ietf.org/html/rfc5280#page-117\n */\nasync function isCertRevoked(cert) {\n    const { extensions } = cert.tbsCertificate;\n    if (!extensions) {\n        return false;\n    }\n    let extAuthorityKeyID;\n    let extSubjectKeyID;\n    let extCRLDistributionPoints;\n    extensions.forEach((ext) => {\n        if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_authorityKeyIdentifier) {\n            extAuthorityKeyID = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.AuthorityKeyIdentifier);\n        }\n        else if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_subjectKeyIdentifier) {\n            extSubjectKeyID = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.SubjectKeyIdentifier);\n        }\n        else if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_cRLDistributionPoints) {\n            extCRLDistributionPoints = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.CRLDistributionPoints);\n        }\n    });\n    // Check to see if we've got cached info for the cert's CA\n    let keyIdentifier = undefined;\n    if (extAuthorityKeyID && extAuthorityKeyID.keyIdentifier) {\n        keyIdentifier = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toHex(new Uint8Array(extAuthorityKeyID.keyIdentifier.buffer));\n    }\n    else if (extSubjectKeyID) {\n        /**\n         * We might be dealing with a self-signed root certificate. Check the\n         * Subject key Identifier extension next.\n         */\n        keyIdentifier = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toHex(new Uint8Array(extSubjectKeyID.buffer));\n    }\n    const certSerialHex = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toHex(new Uint8Array(cert.tbsCertificate.serialNumber));\n    if (keyIdentifier) {\n        const cached = cacheRevokedCerts[keyIdentifier];\n        if (cached) {\n            const now = new Date();\n            // If there's a nextUpdate then make sure we're before it\n            if (!cached.nextUpdate || cached.nextUpdate > now) {\n                return cached.revokedCerts.indexOf(certSerialHex) >= 0;\n            }\n        }\n    }\n    const crlURL = extCRLDistributionPoints?.[0].distributionPoint?.fullName?.[0]\n        .uniformResourceIdentifier;\n    // If no URL is provided then we have nothing to check\n    if (!crlURL) {\n        return false;\n    }\n    // Download and read the CRL\n    let certListBytes;\n    try {\n        const respCRL = await (0,_fetch_js__WEBPACK_IMPORTED_MODULE_2__.fetch)(crlURL);\n        certListBytes = await respCRL.arrayBuffer();\n    }\n    catch (_err) {\n        return false;\n    }\n    let data;\n    try {\n        data = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(certListBytes, _deps_js__WEBPACK_IMPORTED_MODULE_0__.CertificateList);\n    }\n    catch (_err) {\n        // Something was malformed with the CRL, so pass\n        return false;\n    }\n    const newCached = {\n        revokedCerts: [],\n        nextUpdate: undefined,\n    };\n    // nextUpdate\n    if (data.tbsCertList.nextUpdate) {\n        newCached.nextUpdate = data.tbsCertList.nextUpdate.getTime();\n    }\n    // revokedCertificates\n    const revokedCerts = data.tbsCertList.revokedCertificates;\n    if (revokedCerts) {\n        for (const cert of revokedCerts) {\n            const revokedHex = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toHex(new Uint8Array(cert.userCertificate));\n            newCached.revokedCerts.push(revokedHex);\n        }\n        // Cache the results\n        if (keyIdentifier) {\n            cacheRevokedCerts[keyIdentifier] = newCached;\n        }\n        return newCached.revokedCerts.indexOf(certSerialHex) >= 0;\n    }\n    return false;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc0NlcnRSZXZva2VkLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBcU47QUFDdEs7QUFDWjtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxhQUFhO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGtFQUE0QjtBQUN2RCxnQ0FBZ0MsK0NBQVMsc0JBQXNCLDREQUFzQjtBQUNyRjtBQUNBLGdDQUFnQyxnRUFBMEI7QUFDMUQsOEJBQThCLCtDQUFTLHNCQUFzQiwwREFBb0I7QUFDakY7QUFDQSxnQ0FBZ0MsaUVBQTJCO0FBQzNELHVDQUF1QywrQ0FBUyxzQkFBc0IsMkRBQXFCO0FBQzNGO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw4REFBbUI7QUFDM0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLDhEQUFtQjtBQUMzQztBQUNBLDBCQUEwQiw4REFBbUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsZ0RBQUs7QUFDbkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLCtDQUFTLHNCQUFzQixxREFBZTtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLDhEQUFtQjtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNDZXJ0UmV2b2tlZC5qcz84NDdmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzblBhcnNlciwgQXV0aG9yaXR5S2V5SWRlbnRpZmllciwgQ2VydGlmaWNhdGVMaXN0LCBDUkxEaXN0cmlidXRpb25Qb2ludHMsIGlkX2NlX2F1dGhvcml0eUtleUlkZW50aWZpZXIsIGlkX2NlX2NSTERpc3RyaWJ1dGlvblBvaW50cywgaWRfY2Vfc3ViamVjdEtleUlkZW50aWZpZXIsIFN1YmplY3RLZXlJZGVudGlmaWVyLCB9IGZyb20gJy4uL2RlcHMuanMnO1xuaW1wb3J0IHsgaXNvVWludDhBcnJheSB9IGZyb20gJy4vaXNvL2luZGV4LmpzJztcbmltcG9ydCB7IGZldGNoIH0gZnJvbSAnLi9mZXRjaC5qcyc7XG5jb25zdCBjYWNoZVJldm9rZWRDZXJ0cyA9IHt9O1xuLyoqXG4gKiBBIG1ldGhvZCB0byBwdWxsIGEgQ1JMIGZyb20gYSBjZXJ0aWZpY2F0ZSBhbmQgY29tcGFyZSBpdHMgc2VyaWFsIG51bWJlciB0byB0aGUgbGlzdCBvZiByZXZva2VkXG4gKiBjZXJ0aWZpY2F0ZSBzZXJpYWwgbnVtYmVycyB3aXRoaW4gdGhlIENSTC5cbiAqXG4gKiBDUkwgY2VydGlmaWNhdGUgc3RydWN0dXJlIHJlZmVyZW5jZWQgZnJvbSBodHRwczovL3Rvb2xzLmlldGYub3JnL2h0bWwvcmZjNTI4MCNwYWdlLTExN1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaXNDZXJ0UmV2b2tlZChjZXJ0KSB7XG4gICAgY29uc3QgeyBleHRlbnNpb25zIH0gPSBjZXJ0LnRic0NlcnRpZmljYXRlO1xuICAgIGlmICghZXh0ZW5zaW9ucykge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGxldCBleHRBdXRob3JpdHlLZXlJRDtcbiAgICBsZXQgZXh0U3ViamVjdEtleUlEO1xuICAgIGxldCBleHRDUkxEaXN0cmlidXRpb25Qb2ludHM7XG4gICAgZXh0ZW5zaW9ucy5mb3JFYWNoKChleHQpID0+IHtcbiAgICAgICAgaWYgKGV4dC5leHRuSUQgPT09IGlkX2NlX2F1dGhvcml0eUtleUlkZW50aWZpZXIpIHtcbiAgICAgICAgICAgIGV4dEF1dGhvcml0eUtleUlEID0gQXNuUGFyc2VyLnBhcnNlKGV4dC5leHRuVmFsdWUsIEF1dGhvcml0eUtleUlkZW50aWZpZXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGV4dC5leHRuSUQgPT09IGlkX2NlX3N1YmplY3RLZXlJZGVudGlmaWVyKSB7XG4gICAgICAgICAgICBleHRTdWJqZWN0S2V5SUQgPSBBc25QYXJzZXIucGFyc2UoZXh0LmV4dG5WYWx1ZSwgU3ViamVjdEtleUlkZW50aWZpZXIpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGV4dC5leHRuSUQgPT09IGlkX2NlX2NSTERpc3RyaWJ1dGlvblBvaW50cykge1xuICAgICAgICAgICAgZXh0Q1JMRGlzdHJpYnV0aW9uUG9pbnRzID0gQXNuUGFyc2VyLnBhcnNlKGV4dC5leHRuVmFsdWUsIENSTERpc3RyaWJ1dGlvblBvaW50cyk7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICAvLyBDaGVjayB0byBzZWUgaWYgd2UndmUgZ290IGNhY2hlZCBpbmZvIGZvciB0aGUgY2VydCdzIENBXG4gICAgbGV0IGtleUlkZW50aWZpZXIgPSB1bmRlZmluZWQ7XG4gICAgaWYgKGV4dEF1dGhvcml0eUtleUlEICYmIGV4dEF1dGhvcml0eUtleUlELmtleUlkZW50aWZpZXIpIHtcbiAgICAgICAga2V5SWRlbnRpZmllciA9IGlzb1VpbnQ4QXJyYXkudG9IZXgobmV3IFVpbnQ4QXJyYXkoZXh0QXV0aG9yaXR5S2V5SUQua2V5SWRlbnRpZmllci5idWZmZXIpKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZXh0U3ViamVjdEtleUlEKSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBXZSBtaWdodCBiZSBkZWFsaW5nIHdpdGggYSBzZWxmLXNpZ25lZCByb290IGNlcnRpZmljYXRlLiBDaGVjayB0aGVcbiAgICAgICAgICogU3ViamVjdCBrZXkgSWRlbnRpZmllciBleHRlbnNpb24gbmV4dC5cbiAgICAgICAgICovXG4gICAgICAgIGtleUlkZW50aWZpZXIgPSBpc29VaW50OEFycmF5LnRvSGV4KG5ldyBVaW50OEFycmF5KGV4dFN1YmplY3RLZXlJRC5idWZmZXIpKTtcbiAgICB9XG4gICAgY29uc3QgY2VydFNlcmlhbEhleCA9IGlzb1VpbnQ4QXJyYXkudG9IZXgobmV3IFVpbnQ4QXJyYXkoY2VydC50YnNDZXJ0aWZpY2F0ZS5zZXJpYWxOdW1iZXIpKTtcbiAgICBpZiAoa2V5SWRlbnRpZmllcikge1xuICAgICAgICBjb25zdCBjYWNoZWQgPSBjYWNoZVJldm9rZWRDZXJ0c1trZXlJZGVudGlmaWVyXTtcbiAgICAgICAgaWYgKGNhY2hlZCkge1xuICAgICAgICAgICAgY29uc3Qgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgICAgICAgIC8vIElmIHRoZXJlJ3MgYSBuZXh0VXBkYXRlIHRoZW4gbWFrZSBzdXJlIHdlJ3JlIGJlZm9yZSBpdFxuICAgICAgICAgICAgaWYgKCFjYWNoZWQubmV4dFVwZGF0ZSB8fCBjYWNoZWQubmV4dFVwZGF0ZSA+IG5vdykge1xuICAgICAgICAgICAgICAgIHJldHVybiBjYWNoZWQucmV2b2tlZENlcnRzLmluZGV4T2YoY2VydFNlcmlhbEhleCkgPj0gMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBjcmxVUkwgPSBleHRDUkxEaXN0cmlidXRpb25Qb2ludHM/LlswXS5kaXN0cmlidXRpb25Qb2ludD8uZnVsbE5hbWU/LlswXVxuICAgICAgICAudW5pZm9ybVJlc291cmNlSWRlbnRpZmllcjtcbiAgICAvLyBJZiBubyBVUkwgaXMgcHJvdmlkZWQgdGhlbiB3ZSBoYXZlIG5vdGhpbmcgdG8gY2hlY2tcbiAgICBpZiAoIWNybFVSTCkge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIC8vIERvd25sb2FkIGFuZCByZWFkIHRoZSBDUkxcbiAgICBsZXQgY2VydExpc3RCeXRlcztcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXNwQ1JMID0gYXdhaXQgZmV0Y2goY3JsVVJMKTtcbiAgICAgICAgY2VydExpc3RCeXRlcyA9IGF3YWl0IHJlc3BDUkwuYXJyYXlCdWZmZXIoKTtcbiAgICB9XG4gICAgY2F0Y2ggKF9lcnIpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBsZXQgZGF0YTtcbiAgICB0cnkge1xuICAgICAgICBkYXRhID0gQXNuUGFyc2VyLnBhcnNlKGNlcnRMaXN0Qnl0ZXMsIENlcnRpZmljYXRlTGlzdCk7XG4gICAgfVxuICAgIGNhdGNoIChfZXJyKSB7XG4gICAgICAgIC8vIFNvbWV0aGluZyB3YXMgbWFsZm9ybWVkIHdpdGggdGhlIENSTCwgc28gcGFzc1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IG5ld0NhY2hlZCA9IHtcbiAgICAgICAgcmV2b2tlZENlcnRzOiBbXSxcbiAgICAgICAgbmV4dFVwZGF0ZTogdW5kZWZpbmVkLFxuICAgIH07XG4gICAgLy8gbmV4dFVwZGF0ZVxuICAgIGlmIChkYXRhLnRic0NlcnRMaXN0Lm5leHRVcGRhdGUpIHtcbiAgICAgICAgbmV3Q2FjaGVkLm5leHRVcGRhdGUgPSBkYXRhLnRic0NlcnRMaXN0Lm5leHRVcGRhdGUuZ2V0VGltZSgpO1xuICAgIH1cbiAgICAvLyByZXZva2VkQ2VydGlmaWNhdGVzXG4gICAgY29uc3QgcmV2b2tlZENlcnRzID0gZGF0YS50YnNDZXJ0TGlzdC5yZXZva2VkQ2VydGlmaWNhdGVzO1xuICAgIGlmIChyZXZva2VkQ2VydHMpIHtcbiAgICAgICAgZm9yIChjb25zdCBjZXJ0IG9mIHJldm9rZWRDZXJ0cykge1xuICAgICAgICAgICAgY29uc3QgcmV2b2tlZEhleCA9IGlzb1VpbnQ4QXJyYXkudG9IZXgobmV3IFVpbnQ4QXJyYXkoY2VydC51c2VyQ2VydGlmaWNhdGUpKTtcbiAgICAgICAgICAgIG5ld0NhY2hlZC5yZXZva2VkQ2VydHMucHVzaChyZXZva2VkSGV4KTtcbiAgICAgICAgfVxuICAgICAgICAvLyBDYWNoZSB0aGUgcmVzdWx0c1xuICAgICAgICBpZiAoa2V5SWRlbnRpZmllcikge1xuICAgICAgICAgICAgY2FjaGVSZXZva2VkQ2VydHNba2V5SWRlbnRpZmllcl0gPSBuZXdDYWNoZWQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ld0NhY2hlZC5yZXZva2VkQ2VydHMuaW5kZXhPZihjZXJ0U2VyaWFsSGV4KSA+PSAwO1xuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isoBase64URL: () => (/* reexport module object */ _isoBase64URL_js__WEBPACK_IMPORTED_MODULE_0__),\n/* harmony export */   isoCBOR: () => (/* reexport module object */ _isoCBOR_js__WEBPACK_IMPORTED_MODULE_1__),\n/* harmony export */   isoCrypto: () => (/* reexport module object */ _isoCrypto_index_js__WEBPACK_IMPORTED_MODULE_2__),\n/* harmony export */   isoUint8Array: () => (/* reexport module object */ _isoUint8Array_js__WEBPACK_IMPORTED_MODULE_3__)\n/* harmony export */ });\n/* harmony import */ var _isoBase64URL_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./isoBase64URL.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoBase64URL.js\");\n/* harmony import */ var _isoCBOR_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isoCBOR.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCBOR.js\");\n/* harmony import */ var _isoCrypto_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./isoCrypto/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/index.js\");\n/* harmony import */ var _isoUint8Array_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./isoUint8Array.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoUint8Array.js\");\n/**\n * A collection of methods for isomorphic manipulation of trickier data types\n *\n * The goal with these is to make it easier to replace dependencies later that might not play well\n * with specific server-like runtimes that expose global Web APIs (CloudFlare Workers, Deno, Bun,\n * etc...), while also supporting execution in Node.\n */\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNrRDtBQUNWO0FBQ1U7QUFDRSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2luZGV4LmpzP2JmZTAiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBIGNvbGxlY3Rpb24gb2YgbWV0aG9kcyBmb3IgaXNvbW9ycGhpYyBtYW5pcHVsYXRpb24gb2YgdHJpY2tpZXIgZGF0YSB0eXBlc1xuICpcbiAqIFRoZSBnb2FsIHdpdGggdGhlc2UgaXMgdG8gbWFrZSBpdCBlYXNpZXIgdG8gcmVwbGFjZSBkZXBlbmRlbmNpZXMgbGF0ZXIgdGhhdCBtaWdodCBub3QgcGxheSB3ZWxsXG4gKiB3aXRoIHNwZWNpZmljIHNlcnZlci1saWtlIHJ1bnRpbWVzIHRoYXQgZXhwb3NlIGdsb2JhbCBXZWIgQVBJcyAoQ2xvdWRGbGFyZSBXb3JrZXJzLCBEZW5vLCBCdW4sXG4gKiBldGMuLi4pLCB3aGlsZSBhbHNvIHN1cHBvcnRpbmcgZXhlY3V0aW9uIGluIE5vZGUuXG4gKi9cbmV4cG9ydCAqIGFzIGlzb0Jhc2U2NFVSTCBmcm9tICcuL2lzb0Jhc2U2NFVSTC5qcyc7XG5leHBvcnQgKiBhcyBpc29DQk9SIGZyb20gJy4vaXNvQ0JPUi5qcyc7XG5leHBvcnQgKiBhcyBpc29DcnlwdG8gZnJvbSAnLi9pc29DcnlwdG8vaW5kZXguanMnO1xuZXhwb3J0ICogYXMgaXNvVWludDhBcnJheSBmcm9tICcuL2lzb1VpbnQ4QXJyYXkuanMnO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoBase64URL.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoBase64URL.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   fromBuffer: () => (/* binding */ fromBuffer),\n/* harmony export */   fromString: () => (/* binding */ fromString),\n/* harmony export */   isBase64: () => (/* binding */ isBase64),\n/* harmony export */   isBase64url: () => (/* binding */ isBase64url),\n/* harmony export */   toBase64: () => (/* binding */ toBase64),\n/* harmony export */   toBuffer: () => (/* binding */ toBuffer),\n/* harmony export */   toString: () => (/* binding */ toString)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n\n/**\n * Decode from a Base64URL-encoded string to an ArrayBuffer. Best used when converting a\n * credential ID from a JSON string to an ArrayBuffer, like in allowCredentials or\n * excludeCredentials.\n *\n * @param buffer Value to decode from base64\n * @param to (optional) The decoding to use, in case it's desirable to decode from base64 instead\n */\nfunction toBuffer(base64urlString, from = 'base64url') {\n    const _buffer = _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.toArrayBuffer(base64urlString, from === 'base64url');\n    return new Uint8Array(_buffer);\n}\n/**\n * Encode the given array buffer into a Base64URL-encoded string. Ideal for converting various\n * credential response ArrayBuffers to string for sending back to the server as JSON.\n *\n * @param buffer Value to encode to base64\n * @param to (optional) The encoding to use, in case it's desirable to encode to base64 instead\n */\nfunction fromBuffer(buffer, to = 'base64url') {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.fromArrayBuffer(buffer, to === 'base64url');\n}\n/**\n * Convert a base64url string into base64\n */\nfunction toBase64(base64urlString) {\n    const fromBase64Url = _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.toArrayBuffer(base64urlString, true);\n    const toBase64 = _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.fromArrayBuffer(fromBase64Url);\n    return toBase64;\n}\n/**\n * Encode a string to base64url\n */\nfunction fromString(ascii) {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.fromString(ascii, true);\n}\n/**\n * Decode a base64url string into its original string\n */\nfunction toString(base64urlString) {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.toString(base64urlString, true);\n}\n/**\n * Confirm that the string is encoded into base64\n */\nfunction isBase64(input) {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.validate(input, false);\n}\n/**\n * Confirm that the string is encoded into base64url, with support for optional padding\n */\nfunction isBase64url(input) {\n    // Trim padding characters from the string if present\n    input = input.replace(/=/g, '');\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.base64.validate(input, true);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQmFzZTY0VVJMLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQXVDO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLG9CQUFvQiw0Q0FBTTtBQUMxQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLFdBQVcsNENBQU07QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQLDBCQUEwQiw0Q0FBTTtBQUNoQyxxQkFBcUIsNENBQU07QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyw0Q0FBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyw0Q0FBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsV0FBVyw0Q0FBTTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLFdBQVcsNENBQU07QUFDakIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29CYXNlNjRVUkwuanM/YTQ5MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBiYXNlNjQgfSBmcm9tICcuLi8uLi9kZXBzLmpzJztcbi8qKlxuICogRGVjb2RlIGZyb20gYSBCYXNlNjRVUkwtZW5jb2RlZCBzdHJpbmcgdG8gYW4gQXJyYXlCdWZmZXIuIEJlc3QgdXNlZCB3aGVuIGNvbnZlcnRpbmcgYVxuICogY3JlZGVudGlhbCBJRCBmcm9tIGEgSlNPTiBzdHJpbmcgdG8gYW4gQXJyYXlCdWZmZXIsIGxpa2UgaW4gYWxsb3dDcmVkZW50aWFscyBvclxuICogZXhjbHVkZUNyZWRlbnRpYWxzLlxuICpcbiAqIEBwYXJhbSBidWZmZXIgVmFsdWUgdG8gZGVjb2RlIGZyb20gYmFzZTY0XG4gKiBAcGFyYW0gdG8gKG9wdGlvbmFsKSBUaGUgZGVjb2RpbmcgdG8gdXNlLCBpbiBjYXNlIGl0J3MgZGVzaXJhYmxlIHRvIGRlY29kZSBmcm9tIGJhc2U2NCBpbnN0ZWFkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0J1ZmZlcihiYXNlNjR1cmxTdHJpbmcsIGZyb20gPSAnYmFzZTY0dXJsJykge1xuICAgIGNvbnN0IF9idWZmZXIgPSBiYXNlNjQudG9BcnJheUJ1ZmZlcihiYXNlNjR1cmxTdHJpbmcsIGZyb20gPT09ICdiYXNlNjR1cmwnKTtcbiAgICByZXR1cm4gbmV3IFVpbnQ4QXJyYXkoX2J1ZmZlcik7XG59XG4vKipcbiAqIEVuY29kZSB0aGUgZ2l2ZW4gYXJyYXkgYnVmZmVyIGludG8gYSBCYXNlNjRVUkwtZW5jb2RlZCBzdHJpbmcuIElkZWFsIGZvciBjb252ZXJ0aW5nIHZhcmlvdXNcbiAqIGNyZWRlbnRpYWwgcmVzcG9uc2UgQXJyYXlCdWZmZXJzIHRvIHN0cmluZyBmb3Igc2VuZGluZyBiYWNrIHRvIHRoZSBzZXJ2ZXIgYXMgSlNPTi5cbiAqXG4gKiBAcGFyYW0gYnVmZmVyIFZhbHVlIHRvIGVuY29kZSB0byBiYXNlNjRcbiAqIEBwYXJhbSB0byAob3B0aW9uYWwpIFRoZSBlbmNvZGluZyB0byB1c2UsIGluIGNhc2UgaXQncyBkZXNpcmFibGUgdG8gZW5jb2RlIHRvIGJhc2U2NCBpbnN0ZWFkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmcm9tQnVmZmVyKGJ1ZmZlciwgdG8gPSAnYmFzZTY0dXJsJykge1xuICAgIHJldHVybiBiYXNlNjQuZnJvbUFycmF5QnVmZmVyKGJ1ZmZlciwgdG8gPT09ICdiYXNlNjR1cmwnKTtcbn1cbi8qKlxuICogQ29udmVydCBhIGJhc2U2NHVybCBzdHJpbmcgaW50byBiYXNlNjRcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvQmFzZTY0KGJhc2U2NHVybFN0cmluZykge1xuICAgIGNvbnN0IGZyb21CYXNlNjRVcmwgPSBiYXNlNjQudG9BcnJheUJ1ZmZlcihiYXNlNjR1cmxTdHJpbmcsIHRydWUpO1xuICAgIGNvbnN0IHRvQmFzZTY0ID0gYmFzZTY0LmZyb21BcnJheUJ1ZmZlcihmcm9tQmFzZTY0VXJsKTtcbiAgICByZXR1cm4gdG9CYXNlNjQ7XG59XG4vKipcbiAqIEVuY29kZSBhIHN0cmluZyB0byBiYXNlNjR1cmxcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZyb21TdHJpbmcoYXNjaWkpIHtcbiAgICByZXR1cm4gYmFzZTY0LmZyb21TdHJpbmcoYXNjaWksIHRydWUpO1xufVxuLyoqXG4gKiBEZWNvZGUgYSBiYXNlNjR1cmwgc3RyaW5nIGludG8gaXRzIG9yaWdpbmFsIHN0cmluZ1xuICovXG5leHBvcnQgZnVuY3Rpb24gdG9TdHJpbmcoYmFzZTY0dXJsU3RyaW5nKSB7XG4gICAgcmV0dXJuIGJhc2U2NC50b1N0cmluZyhiYXNlNjR1cmxTdHJpbmcsIHRydWUpO1xufVxuLyoqXG4gKiBDb25maXJtIHRoYXQgdGhlIHN0cmluZyBpcyBlbmNvZGVkIGludG8gYmFzZTY0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0Jhc2U2NChpbnB1dCkge1xuICAgIHJldHVybiBiYXNlNjQudmFsaWRhdGUoaW5wdXQsIGZhbHNlKTtcbn1cbi8qKlxuICogQ29uZmlybSB0aGF0IHRoZSBzdHJpbmcgaXMgZW5jb2RlZCBpbnRvIGJhc2U2NHVybCwgd2l0aCBzdXBwb3J0IGZvciBvcHRpb25hbCBwYWRkaW5nXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0Jhc2U2NHVybChpbnB1dCkge1xuICAgIC8vIFRyaW0gcGFkZGluZyBjaGFyYWN0ZXJzIGZyb20gdGhlIHN0cmluZyBpZiBwcmVzZW50XG4gICAgaW5wdXQgPSBpbnB1dC5yZXBsYWNlKC89L2csICcnKTtcbiAgICByZXR1cm4gYmFzZTY0LnZhbGlkYXRlKGlucHV0LCB0cnVlKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoBase64URL.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCBOR.js":
/*!************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCBOR.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   decodeFirst: () => (/* binding */ decodeFirst),\n/* harmony export */   encode: () => (/* binding */ encode)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n\n/**\n * Whatever CBOR encoder is used should keep CBOR data the same length when data is re-encoded\n *\n * MOST CRITICALLY, this means the following needs to be true of whatever CBOR library we use:\n * - CBOR Map type values MUST decode to JavaScript Maps\n * - CBOR tag 64 (uint8 Typed Array) MUST NOT be used when encoding Uint8Arrays back to CBOR\n *\n * So long as these requirements are maintained, then CBOR sequences can be encoded and decoded\n * freely while maintaining their lengths for the most accurate pointer movement across them.\n */\n/**\n * Decode and return the first item in a sequence of CBOR-encoded values\n *\n * @param input The CBOR data to decode\n * @param asObject (optional) Whether to convert any CBOR Maps into JavaScript Objects. Defaults to\n * `false`\n */\nfunction decodeFirst(input) {\n    // Make a copy so we don't mutate the original\n    const _input = new Uint8Array(input);\n    const decoded = _deps_js__WEBPACK_IMPORTED_MODULE_0__.tinyCbor.decodePartialCBOR(_input, 0);\n    const [first] = decoded;\n    return first;\n}\n/**\n * Encode data to CBOR\n */\nfunction encode(input) {\n    return _deps_js__WEBPACK_IMPORTED_MODULE_0__.tinyCbor.encodeCBOR(input);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ0JPUi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUM7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLG9CQUFvQixnRUFBMEI7QUFDOUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCxXQUFXLHlEQUFtQjtBQUM5QiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb0NCT1IuanM/Zjg4ZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0aW55Q2JvciB9IGZyb20gJy4uLy4uL2RlcHMuanMnO1xuLyoqXG4gKiBXaGF0ZXZlciBDQk9SIGVuY29kZXIgaXMgdXNlZCBzaG91bGQga2VlcCBDQk9SIGRhdGEgdGhlIHNhbWUgbGVuZ3RoIHdoZW4gZGF0YSBpcyByZS1lbmNvZGVkXG4gKlxuICogTU9TVCBDUklUSUNBTExZLCB0aGlzIG1lYW5zIHRoZSBmb2xsb3dpbmcgbmVlZHMgdG8gYmUgdHJ1ZSBvZiB3aGF0ZXZlciBDQk9SIGxpYnJhcnkgd2UgdXNlOlxuICogLSBDQk9SIE1hcCB0eXBlIHZhbHVlcyBNVVNUIGRlY29kZSB0byBKYXZhU2NyaXB0IE1hcHNcbiAqIC0gQ0JPUiB0YWcgNjQgKHVpbnQ4IFR5cGVkIEFycmF5KSBNVVNUIE5PVCBiZSB1c2VkIHdoZW4gZW5jb2RpbmcgVWludDhBcnJheXMgYmFjayB0byBDQk9SXG4gKlxuICogU28gbG9uZyBhcyB0aGVzZSByZXF1aXJlbWVudHMgYXJlIG1haW50YWluZWQsIHRoZW4gQ0JPUiBzZXF1ZW5jZXMgY2FuIGJlIGVuY29kZWQgYW5kIGRlY29kZWRcbiAqIGZyZWVseSB3aGlsZSBtYWludGFpbmluZyB0aGVpciBsZW5ndGhzIGZvciB0aGUgbW9zdCBhY2N1cmF0ZSBwb2ludGVyIG1vdmVtZW50IGFjcm9zcyB0aGVtLlxuICovXG4vKipcbiAqIERlY29kZSBhbmQgcmV0dXJuIHRoZSBmaXJzdCBpdGVtIGluIGEgc2VxdWVuY2Ugb2YgQ0JPUi1lbmNvZGVkIHZhbHVlc1xuICpcbiAqIEBwYXJhbSBpbnB1dCBUaGUgQ0JPUiBkYXRhIHRvIGRlY29kZVxuICogQHBhcmFtIGFzT2JqZWN0IChvcHRpb25hbCkgV2hldGhlciB0byBjb252ZXJ0IGFueSBDQk9SIE1hcHMgaW50byBKYXZhU2NyaXB0IE9iamVjdHMuIERlZmF1bHRzIHRvXG4gKiBgZmFsc2VgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkZWNvZGVGaXJzdChpbnB1dCkge1xuICAgIC8vIE1ha2UgYSBjb3B5IHNvIHdlIGRvbid0IG11dGF0ZSB0aGUgb3JpZ2luYWxcbiAgICBjb25zdCBfaW5wdXQgPSBuZXcgVWludDhBcnJheShpbnB1dCk7XG4gICAgY29uc3QgZGVjb2RlZCA9IHRpbnlDYm9yLmRlY29kZVBhcnRpYWxDQk9SKF9pbnB1dCwgMCk7XG4gICAgY29uc3QgW2ZpcnN0XSA9IGRlY29kZWQ7XG4gICAgcmV0dXJuIGZpcnN0O1xufVxuLyoqXG4gKiBFbmNvZGUgZGF0YSB0byBDQk9SXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBlbmNvZGUoaW5wdXQpIHtcbiAgICByZXR1cm4gdGlueUNib3IuZW5jb2RlQ0JPUihpbnB1dCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCBOR.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/digest.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/digest.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   digest: () => (/* binding */ digest)\n/* harmony export */ });\n/* harmony import */ var _mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mapCoseAlgToWebCryptoAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js\");\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n\n/**\n * Generate a digest of the provided data.\n *\n * @param data The data to generate a digest of\n * @param algorithm A COSE algorithm ID that maps to a desired SHA algorithm\n */\nasync function digest(data, algorithm) {\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_1__.getWebCrypto)();\n    const subtleAlgorithm = (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_0__.mapCoseAlgToWebCryptoAlg)(algorithm);\n    const hashed = await WebCrypto.subtle.digest(subtleAlgorithm, data);\n    return new Uint8Array(hashed);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2RpZ2VzdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBeUU7QUFDeEI7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw0QkFBNEIsOERBQVk7QUFDeEMsNEJBQTRCLHNGQUF3QjtBQUNwRDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DcnlwdG8vZGlnZXN0LmpzPzQyMTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvQWxnIH0gZnJvbSAnLi9tYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcuanMnO1xuaW1wb3J0IHsgZ2V0V2ViQ3J5cHRvIH0gZnJvbSAnLi9nZXRXZWJDcnlwdG8uanMnO1xuLyoqXG4gKiBHZW5lcmF0ZSBhIGRpZ2VzdCBvZiB0aGUgcHJvdmlkZWQgZGF0YS5cbiAqXG4gKiBAcGFyYW0gZGF0YSBUaGUgZGF0YSB0byBnZW5lcmF0ZSBhIGRpZ2VzdCBvZlxuICogQHBhcmFtIGFsZ29yaXRobSBBIENPU0UgYWxnb3JpdGhtIElEIHRoYXQgbWFwcyB0byBhIGRlc2lyZWQgU0hBIGFsZ29yaXRobVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZGlnZXN0KGRhdGEsIGFsZ29yaXRobSkge1xuICAgIGNvbnN0IFdlYkNyeXB0byA9IGF3YWl0IGdldFdlYkNyeXB0bygpO1xuICAgIGNvbnN0IHN1YnRsZUFsZ29yaXRobSA9IG1hcENvc2VBbGdUb1dlYkNyeXB0b0FsZyhhbGdvcml0aG0pO1xuICAgIGNvbnN0IGhhc2hlZCA9IGF3YWl0IFdlYkNyeXB0by5zdWJ0bGUuZGlnZXN0KHN1YnRsZUFsZ29yaXRobSwgZGF0YSk7XG4gICAgcmV0dXJuIG5ldyBVaW50OEFycmF5KGhhc2hlZCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/digest.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getRandomValues.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getRandomValues.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getRandomValues: () => (/* binding */ getRandomValues)\n/* harmony export */ });\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n/**\n * Fill up the provided bytes array with random bytes equal to its length.\n *\n * @returns the same bytes array passed into the method\n */\nasync function getRandomValues(array) {\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_0__.getWebCrypto)();\n    WebCrypto.getRandomValues(array);\n    return array;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2dldFJhbmRvbVZhbHVlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUCw0QkFBNEIsOERBQVk7QUFDeEM7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2dldFJhbmRvbVZhbHVlcy5qcz8yNWU4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGdldFdlYkNyeXB0byB9IGZyb20gJy4vZ2V0V2ViQ3J5cHRvLmpzJztcbi8qKlxuICogRmlsbCB1cCB0aGUgcHJvdmlkZWQgYnl0ZXMgYXJyYXkgd2l0aCByYW5kb20gYnl0ZXMgZXF1YWwgdG8gaXRzIGxlbmd0aC5cbiAqXG4gKiBAcmV0dXJucyB0aGUgc2FtZSBieXRlcyBhcnJheSBwYXNzZWQgaW50byB0aGUgbWV0aG9kXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRSYW5kb21WYWx1ZXMoYXJyYXkpIHtcbiAgICBjb25zdCBXZWJDcnlwdG8gPSBhd2FpdCBnZXRXZWJDcnlwdG8oKTtcbiAgICBXZWJDcnlwdG8uZ2V0UmFuZG9tVmFsdWVzKGFycmF5KTtcbiAgICByZXR1cm4gYXJyYXk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getRandomValues.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js ***!
  \***************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MissingWebCrypto: () => (/* binding */ MissingWebCrypto),\n/* harmony export */   _getWebCryptoInternals: () => (/* binding */ _getWebCryptoInternals),\n/* harmony export */   getWebCrypto: () => (/* binding */ getWebCrypto)\n/* harmony export */ });\nlet webCrypto = undefined;\n/**\n * Try to get an instance of the Crypto API from the current runtime. Should support Node,\n * as well as others, like Deno, that implement Web APIs.\n */\nasync function getWebCrypto() {\n    if (webCrypto) {\n        return webCrypto;\n    }\n    /**\n     * Naively attempt to access Crypto as a global object, which popular alternative run-times\n     * support.\n     */\n    const _globalThisCrypto = _getWebCryptoInternals.stubThisGlobalThisCrypto();\n    if (_globalThisCrypto) {\n        webCrypto = _globalThisCrypto;\n        return webCrypto;\n    }\n    /**\n     * `globalThis.crypto` isn't available, so attempt a Node import...\n     */\n    const _nodeCrypto = await _getWebCryptoInternals.stubThisImportNodeCrypto();\n    if (_nodeCrypto?.webcrypto) {\n        webCrypto = _nodeCrypto.webcrypto;\n        return webCrypto;\n    }\n    // We tried to access it both in Node and globally, so bail out\n    throw new MissingWebCrypto();\n}\nclass MissingWebCrypto extends Error {\n    constructor() {\n        const message = 'An instance of the Crypto API could not be located';\n        super(message);\n        this.name = 'MissingWebCrypto';\n    }\n}\n// Make it possible to stub return values during testing\nconst _getWebCryptoInternals = {\n    stubThisImportNodeCrypto: async () => {\n        try {\n            // dnt-shim-ignore\n            /**\n             * The `webpackIgnore` here is to help support Next.js' Edge runtime.\n             * See https://github.com/MasterKale/SimpleWebAuthn/issues/517 for more info.\n             */\n            const _nodeCrypto = await import(/* webpackIgnore: true */ 'crypto');\n            return _nodeCrypto;\n        }\n        catch (_err) {\n            /**\n             * Intentionally declaring webcrypto as undefined because we're assuming the Node import\n             * failed due to either:\n             * - `import()` isn't supported\n             * - `node:crypto` is unavailable.\n             */\n            return { webcrypto: undefined };\n        }\n    },\n    stubThisGlobalThisCrypto: () => globalThis.crypto,\n    // Make it possible to reset the `webCrypto` at the top of the file\n    setCachedCrypto: (newCrypto) => {\n        webCrypto = newCrypto;\n    },\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2dldFdlYkNyeXB0by5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQjtBQUNyQjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb0NyeXB0by9nZXRXZWJDcnlwdG8uanM/ZjdhNCJdLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgd2ViQ3J5cHRvID0gdW5kZWZpbmVkO1xuLyoqXG4gKiBUcnkgdG8gZ2V0IGFuIGluc3RhbmNlIG9mIHRoZSBDcnlwdG8gQVBJIGZyb20gdGhlIGN1cnJlbnQgcnVudGltZS4gU2hvdWxkIHN1cHBvcnQgTm9kZSxcbiAqIGFzIHdlbGwgYXMgb3RoZXJzLCBsaWtlIERlbm8sIHRoYXQgaW1wbGVtZW50IFdlYiBBUElzLlxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0V2ViQ3J5cHRvKCkge1xuICAgIGlmICh3ZWJDcnlwdG8pIHtcbiAgICAgICAgcmV0dXJuIHdlYkNyeXB0bztcbiAgICB9XG4gICAgLyoqXG4gICAgICogTmFpdmVseSBhdHRlbXB0IHRvIGFjY2VzcyBDcnlwdG8gYXMgYSBnbG9iYWwgb2JqZWN0LCB3aGljaCBwb3B1bGFyIGFsdGVybmF0aXZlIHJ1bi10aW1lc1xuICAgICAqIHN1cHBvcnQuXG4gICAgICovXG4gICAgY29uc3QgX2dsb2JhbFRoaXNDcnlwdG8gPSBfZ2V0V2ViQ3J5cHRvSW50ZXJuYWxzLnN0dWJUaGlzR2xvYmFsVGhpc0NyeXB0bygpO1xuICAgIGlmIChfZ2xvYmFsVGhpc0NyeXB0bykge1xuICAgICAgICB3ZWJDcnlwdG8gPSBfZ2xvYmFsVGhpc0NyeXB0bztcbiAgICAgICAgcmV0dXJuIHdlYkNyeXB0bztcbiAgICB9XG4gICAgLyoqXG4gICAgICogYGdsb2JhbFRoaXMuY3J5cHRvYCBpc24ndCBhdmFpbGFibGUsIHNvIGF0dGVtcHQgYSBOb2RlIGltcG9ydC4uLlxuICAgICAqL1xuICAgIGNvbnN0IF9ub2RlQ3J5cHRvID0gYXdhaXQgX2dldFdlYkNyeXB0b0ludGVybmFscy5zdHViVGhpc0ltcG9ydE5vZGVDcnlwdG8oKTtcbiAgICBpZiAoX25vZGVDcnlwdG8/LndlYmNyeXB0bykge1xuICAgICAgICB3ZWJDcnlwdG8gPSBfbm9kZUNyeXB0by53ZWJjcnlwdG87XG4gICAgICAgIHJldHVybiB3ZWJDcnlwdG87XG4gICAgfVxuICAgIC8vIFdlIHRyaWVkIHRvIGFjY2VzcyBpdCBib3RoIGluIE5vZGUgYW5kIGdsb2JhbGx5LCBzbyBiYWlsIG91dFxuICAgIHRocm93IG5ldyBNaXNzaW5nV2ViQ3J5cHRvKCk7XG59XG5leHBvcnQgY2xhc3MgTWlzc2luZ1dlYkNyeXB0byBleHRlbmRzIEVycm9yIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgY29uc3QgbWVzc2FnZSA9ICdBbiBpbnN0YW5jZSBvZiB0aGUgQ3J5cHRvIEFQSSBjb3VsZCBub3QgYmUgbG9jYXRlZCc7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UpO1xuICAgICAgICB0aGlzLm5hbWUgPSAnTWlzc2luZ1dlYkNyeXB0byc7XG4gICAgfVxufVxuLy8gTWFrZSBpdCBwb3NzaWJsZSB0byBzdHViIHJldHVybiB2YWx1ZXMgZHVyaW5nIHRlc3RpbmdcbmV4cG9ydCBjb25zdCBfZ2V0V2ViQ3J5cHRvSW50ZXJuYWxzID0ge1xuICAgIHN0dWJUaGlzSW1wb3J0Tm9kZUNyeXB0bzogYXN5bmMgKCkgPT4ge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgLy8gZG50LXNoaW0taWdub3JlXG4gICAgICAgICAgICAvKipcbiAgICAgICAgICAgICAqIFRoZSBgd2VicGFja0lnbm9yZWAgaGVyZSBpcyB0byBoZWxwIHN1cHBvcnQgTmV4dC5qcycgRWRnZSBydW50aW1lLlxuICAgICAgICAgICAgICogU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9NYXN0ZXJLYWxlL1NpbXBsZVdlYkF1dGhuL2lzc3Vlcy81MTcgZm9yIG1vcmUgaW5mby5cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgY29uc3QgX25vZGVDcnlwdG8gPSBhd2FpdCBpbXBvcnQoLyogd2VicGFja0lnbm9yZTogdHJ1ZSAqLyAnY3J5cHRvJyk7XG4gICAgICAgICAgICByZXR1cm4gX25vZGVDcnlwdG87XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKF9lcnIpIHtcbiAgICAgICAgICAgIC8qKlxuICAgICAgICAgICAgICogSW50ZW50aW9uYWxseSBkZWNsYXJpbmcgd2ViY3J5cHRvIGFzIHVuZGVmaW5lZCBiZWNhdXNlIHdlJ3JlIGFzc3VtaW5nIHRoZSBOb2RlIGltcG9ydFxuICAgICAgICAgICAgICogZmFpbGVkIGR1ZSB0byBlaXRoZXI6XG4gICAgICAgICAgICAgKiAtIGBpbXBvcnQoKWAgaXNuJ3Qgc3VwcG9ydGVkXG4gICAgICAgICAgICAgKiAtIGBub2RlOmNyeXB0b2AgaXMgdW5hdmFpbGFibGUuXG4gICAgICAgICAgICAgKi9cbiAgICAgICAgICAgIHJldHVybiB7IHdlYmNyeXB0bzogdW5kZWZpbmVkIH07XG4gICAgICAgIH1cbiAgICB9LFxuICAgIHN0dWJUaGlzR2xvYmFsVGhpc0NyeXB0bzogKCkgPT4gZ2xvYmFsVGhpcy5jcnlwdG8sXG4gICAgLy8gTWFrZSBpdCBwb3NzaWJsZSB0byByZXNldCB0aGUgYHdlYkNyeXB0b2AgYXQgdGhlIHRvcCBvZiB0aGUgZmlsZVxuICAgIHNldENhY2hlZENyeXB0bzogKG5ld0NyeXB0bykgPT4ge1xuICAgICAgICB3ZWJDcnlwdG8gPSBuZXdDcnlwdG87XG4gICAgfSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   importKey: () => (/* binding */ importKey)\n/* harmony export */ });\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\nasync function importKey(opts) {\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_0__.getWebCrypto)();\n    const { keyData, algorithm } = opts;\n    return WebCrypto.subtle.importKey('jwk', keyData, algorithm, false, [\n        'verify',\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2ltcG9ydEtleS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFpRDtBQUMxQztBQUNQLDRCQUE0Qiw4REFBWTtBQUN4QyxZQUFZLHFCQUFxQjtBQUNqQztBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb0NyeXB0by9pbXBvcnRLZXkuanM/MDQxYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBnZXRXZWJDcnlwdG8gfSBmcm9tICcuL2dldFdlYkNyeXB0by5qcyc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gaW1wb3J0S2V5KG9wdHMpIHtcbiAgICBjb25zdCBXZWJDcnlwdG8gPSBhd2FpdCBnZXRXZWJDcnlwdG8oKTtcbiAgICBjb25zdCB7IGtleURhdGEsIGFsZ29yaXRobSB9ID0gb3B0cztcbiAgICByZXR1cm4gV2ViQ3J5cHRvLnN1YnRsZS5pbXBvcnRLZXkoJ2p3aycsIGtleURhdGEsIGFsZ29yaXRobSwgZmFsc2UsIFtcbiAgICAgICAgJ3ZlcmlmeScsXG4gICAgXSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/index.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/index.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   digest: () => (/* reexport safe */ _digest_js__WEBPACK_IMPORTED_MODULE_0__.digest),\n/* harmony export */   getRandomValues: () => (/* reexport safe */ _getRandomValues_js__WEBPACK_IMPORTED_MODULE_1__.getRandomValues),\n/* harmony export */   verify: () => (/* reexport safe */ _verify_js__WEBPACK_IMPORTED_MODULE_2__.verify)\n/* harmony export */ });\n/* harmony import */ var _digest_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./digest.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/digest.js\");\n/* harmony import */ var _getRandomValues_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./getRandomValues.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getRandomValues.js\");\n/* harmony import */ var _verify_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./verify.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verify.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFxQztBQUNrQjtBQUNsQiIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb0NyeXB0by9pbmRleC5qcz8xZTJiIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IGRpZ2VzdCB9IGZyb20gJy4vZGlnZXN0LmpzJztcbmV4cG9ydCB7IGdldFJhbmRvbVZhbHVlcyB9IGZyb20gJy4vZ2V0UmFuZG9tVmFsdWVzLmpzJztcbmV4cG9ydCB7IHZlcmlmeSB9IGZyb20gJy4vdmVyaWZ5LmpzJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapCoseAlgToWebCryptoAlg: () => (/* binding */ mapCoseAlgToWebCryptoAlg)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n/**\n * Convert a COSE alg ID into a corresponding string value that WebCrypto APIs expect\n */\nfunction mapCoseAlgToWebCryptoAlg(alg) {\n    if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS1].indexOf(alg) >= 0) {\n        return 'SHA-1';\n    }\n    else if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES256, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS256, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS256].indexOf(alg) >= 0) {\n        return 'SHA-256';\n    }\n    else if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES384, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS384, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS384].indexOf(alg) >= 0) {\n        return 'SHA-384';\n    }\n    else if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES512, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS512, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS512, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.EdDSA].indexOf(alg) >=\n        0) {\n        return 'SHA-512';\n    }\n    throw new Error(`Could not map COSE alg value of ${alg} to a WebCrypto alg`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL21hcENvc2VBbGdUb1dlYkNyeXB0b0FsZy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUF3QztBQUN4QztBQUNBO0FBQ0E7QUFDTztBQUNQLFNBQVMsNkNBQU87QUFDaEI7QUFDQTtBQUNBLGNBQWMsNkNBQU8sUUFBUSw2Q0FBTyxRQUFRLDZDQUFPO0FBQ25EO0FBQ0E7QUFDQSxjQUFjLDZDQUFPLFFBQVEsNkNBQU8sUUFBUSw2Q0FBTztBQUNuRDtBQUNBO0FBQ0EsY0FBYyw2Q0FBTyxRQUFRLDZDQUFPLFFBQVEsNkNBQU8sUUFBUSw2Q0FBTztBQUNsRTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsS0FBSztBQUM1RCIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb0NyeXB0by9tYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcuanM/NDRmMiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT1NFQUxHIH0gZnJvbSAnLi4vLi4vY29zZS5qcyc7XG4vKipcbiAqIENvbnZlcnQgYSBDT1NFIGFsZyBJRCBpbnRvIGEgY29ycmVzcG9uZGluZyBzdHJpbmcgdmFsdWUgdGhhdCBXZWJDcnlwdG8gQVBJcyBleHBlY3RcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIG1hcENvc2VBbGdUb1dlYkNyeXB0b0FsZyhhbGcpIHtcbiAgICBpZiAoW0NPU0VBTEcuUlMxXS5pbmRleE9mKGFsZykgPj0gMCkge1xuICAgICAgICByZXR1cm4gJ1NIQS0xJztcbiAgICB9XG4gICAgZWxzZSBpZiAoW0NPU0VBTEcuRVMyNTYsIENPU0VBTEcuUFMyNTYsIENPU0VBTEcuUlMyNTZdLmluZGV4T2YoYWxnKSA+PSAwKSB7XG4gICAgICAgIHJldHVybiAnU0hBLTI1Nic7XG4gICAgfVxuICAgIGVsc2UgaWYgKFtDT1NFQUxHLkVTMzg0LCBDT1NFQUxHLlBTMzg0LCBDT1NFQUxHLlJTMzg0XS5pbmRleE9mKGFsZykgPj0gMCkge1xuICAgICAgICByZXR1cm4gJ1NIQS0zODQnO1xuICAgIH1cbiAgICBlbHNlIGlmIChbQ09TRUFMRy5FUzUxMiwgQ09TRUFMRy5QUzUxMiwgQ09TRUFMRy5SUzUxMiwgQ09TRUFMRy5FZERTQV0uaW5kZXhPZihhbGcpID49XG4gICAgICAgIDApIHtcbiAgICAgICAgcmV0dXJuICdTSEEtNTEyJztcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKGBDb3VsZCBub3QgbWFwIENPU0UgYWxnIHZhbHVlIG9mICR7YWxnfSB0byBhIFdlYkNyeXB0byBhbGdgKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoKeyAlgName.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoKeyAlgName.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapCoseAlgToWebCryptoKeyAlgName: () => (/* binding */ mapCoseAlgToWebCryptoKeyAlgName)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n/**\n * Convert a COSE alg ID into a corresponding key algorithm string value that WebCrypto APIs expect\n */\nfunction mapCoseAlgToWebCryptoKeyAlgName(alg) {\n    if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.EdDSA].indexOf(alg) >= 0) {\n        return 'Ed25519';\n    }\n    else if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES256, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES384, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES512, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES256K].indexOf(alg) >= 0) {\n        return 'ECDSA';\n    }\n    else if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS256, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS384, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS512, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS1].indexOf(alg) >= 0) {\n        return 'RSASSA-PKCS1-v1_5';\n    }\n    else if ([_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS256, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS384, _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.PS512].indexOf(alg) >= 0) {\n        return 'RSA-PSS';\n    }\n    throw new Error(`Could not map COSE alg value of ${alg} to a WebCrypto key alg name`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL21hcENvc2VBbGdUb1dlYkNyeXB0b0tleUFsZ05hbWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBd0M7QUFDeEM7QUFDQTtBQUNBO0FBQ087QUFDUCxTQUFTLDZDQUFPO0FBQ2hCO0FBQ0E7QUFDQSxjQUFjLDZDQUFPLFFBQVEsNkNBQU8sUUFBUSw2Q0FBTyxRQUFRLDZDQUFPO0FBQ2xFO0FBQ0E7QUFDQSxjQUFjLDZDQUFPLFFBQVEsNkNBQU8sUUFBUSw2Q0FBTyxRQUFRLDZDQUFPO0FBQ2xFO0FBQ0E7QUFDQSxjQUFjLDZDQUFPLFFBQVEsNkNBQU8sUUFBUSw2Q0FBTztBQUNuRDtBQUNBO0FBQ0EsdURBQXVELEtBQUs7QUFDNUQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DcnlwdG8vbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvS2V5QWxnTmFtZS5qcz84OTU0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENPU0VBTEcgfSBmcm9tICcuLi8uLi9jb3NlLmpzJztcbi8qKlxuICogQ29udmVydCBhIENPU0UgYWxnIElEIGludG8gYSBjb3JyZXNwb25kaW5nIGtleSBhbGdvcml0aG0gc3RyaW5nIHZhbHVlIHRoYXQgV2ViQ3J5cHRvIEFQSXMgZXhwZWN0XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYXBDb3NlQWxnVG9XZWJDcnlwdG9LZXlBbGdOYW1lKGFsZykge1xuICAgIGlmIChbQ09TRUFMRy5FZERTQV0uaW5kZXhPZihhbGcpID49IDApIHtcbiAgICAgICAgcmV0dXJuICdFZDI1NTE5JztcbiAgICB9XG4gICAgZWxzZSBpZiAoW0NPU0VBTEcuRVMyNTYsIENPU0VBTEcuRVMzODQsIENPU0VBTEcuRVM1MTIsIENPU0VBTEcuRVMyNTZLXS5pbmRleE9mKGFsZykgPj0gMCkge1xuICAgICAgICByZXR1cm4gJ0VDRFNBJztcbiAgICB9XG4gICAgZWxzZSBpZiAoW0NPU0VBTEcuUlMyNTYsIENPU0VBTEcuUlMzODQsIENPU0VBTEcuUlM1MTIsIENPU0VBTEcuUlMxXS5pbmRleE9mKGFsZykgPj0gMCkge1xuICAgICAgICByZXR1cm4gJ1JTQVNTQS1QS0NTMS12MV81JztcbiAgICB9XG4gICAgZWxzZSBpZiAoW0NPU0VBTEcuUFMyNTYsIENPU0VBTEcuUFMzODQsIENPU0VBTEcuUFM1MTJdLmluZGV4T2YoYWxnKSA+PSAwKSB7XG4gICAgICAgIHJldHVybiAnUlNBLVBTUyc7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihgQ291bGQgbm90IG1hcCBDT1NFIGFsZyB2YWx1ZSBvZiAke2FsZ30gdG8gYSBXZWJDcnlwdG8ga2V5IGFsZyBuYW1lYCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoKeyAlgName.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/unwrapEC2Signature.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/unwrapEC2Signature.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   unwrapEC2Signature: () => (/* binding */ unwrapEC2Signature)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * In WebAuthn, EC2 signatures are wrapped in ASN.1 structure so we need to peel r and s apart.\n *\n * See https://www.w3.org/TR/webauthn-2/#sctn-signature-attestation-types\n */\nfunction unwrapEC2Signature(signature) {\n    const parsedSignature = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(signature, _deps_js__WEBPACK_IMPORTED_MODULE_0__.ECDSASigValue);\n    let rBytes = new Uint8Array(parsedSignature.r);\n    let sBytes = new Uint8Array(parsedSignature.s);\n    if (shouldRemoveLeadingZero(rBytes)) {\n        rBytes = rBytes.slice(1);\n    }\n    if (shouldRemoveLeadingZero(sBytes)) {\n        sBytes = sBytes.slice(1);\n    }\n    const finalSignature = _index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.concat([rBytes, sBytes]);\n    return finalSignature;\n}\n/**\n * Determine if the DER-specific `00` byte at the start of an ECDSA signature byte sequence\n * should be removed based on the following logic:\n *\n * \"If the leading byte is 0x0, and the the high order bit on the second byte is not set to 0,\n * then remove the leading 0x0 byte\"\n */\nfunction shouldRemoveLeadingZero(bytes) {\n    return bytes[0] === 0x0 && (bytes[1] & (1 << 7)) !== 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3Vud3JhcEVDMlNpZ25hdHVyZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNEQ7QUFDaEI7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsNEJBQTRCLCtDQUFTLGtCQUFrQixtREFBYTtBQUNwRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDJEQUFvQjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DcnlwdG8vdW53cmFwRUMyU2lnbmF0dXJlLmpzP2QzZTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXNuUGFyc2VyLCBFQ0RTQVNpZ1ZhbHVlIH0gZnJvbSAnLi4vLi4vLi4vZGVwcy5qcyc7XG5pbXBvcnQgeyBpc29VaW50OEFycmF5IH0gZnJvbSAnLi4vaW5kZXguanMnO1xuLyoqXG4gKiBJbiBXZWJBdXRobiwgRUMyIHNpZ25hdHVyZXMgYXJlIHdyYXBwZWQgaW4gQVNOLjEgc3RydWN0dXJlIHNvIHdlIG5lZWQgdG8gcGVlbCByIGFuZCBzIGFwYXJ0LlxuICpcbiAqIFNlZSBodHRwczovL3d3dy53My5vcmcvVFIvd2ViYXV0aG4tMi8jc2N0bi1zaWduYXR1cmUtYXR0ZXN0YXRpb24tdHlwZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHVud3JhcEVDMlNpZ25hdHVyZShzaWduYXR1cmUpIHtcbiAgICBjb25zdCBwYXJzZWRTaWduYXR1cmUgPSBBc25QYXJzZXIucGFyc2Uoc2lnbmF0dXJlLCBFQ0RTQVNpZ1ZhbHVlKTtcbiAgICBsZXQgckJ5dGVzID0gbmV3IFVpbnQ4QXJyYXkocGFyc2VkU2lnbmF0dXJlLnIpO1xuICAgIGxldCBzQnl0ZXMgPSBuZXcgVWludDhBcnJheShwYXJzZWRTaWduYXR1cmUucyk7XG4gICAgaWYgKHNob3VsZFJlbW92ZUxlYWRpbmdaZXJvKHJCeXRlcykpIHtcbiAgICAgICAgckJ5dGVzID0gckJ5dGVzLnNsaWNlKDEpO1xuICAgIH1cbiAgICBpZiAoc2hvdWxkUmVtb3ZlTGVhZGluZ1plcm8oc0J5dGVzKSkge1xuICAgICAgICBzQnl0ZXMgPSBzQnl0ZXMuc2xpY2UoMSk7XG4gICAgfVxuICAgIGNvbnN0IGZpbmFsU2lnbmF0dXJlID0gaXNvVWludDhBcnJheS5jb25jYXQoW3JCeXRlcywgc0J5dGVzXSk7XG4gICAgcmV0dXJuIGZpbmFsU2lnbmF0dXJlO1xufVxuLyoqXG4gKiBEZXRlcm1pbmUgaWYgdGhlIERFUi1zcGVjaWZpYyBgMDBgIGJ5dGUgYXQgdGhlIHN0YXJ0IG9mIGFuIEVDRFNBIHNpZ25hdHVyZSBieXRlIHNlcXVlbmNlXG4gKiBzaG91bGQgYmUgcmVtb3ZlZCBiYXNlZCBvbiB0aGUgZm9sbG93aW5nIGxvZ2ljOlxuICpcbiAqIFwiSWYgdGhlIGxlYWRpbmcgYnl0ZSBpcyAweDAsIGFuZCB0aGUgdGhlIGhpZ2ggb3JkZXIgYml0IG9uIHRoZSBzZWNvbmQgYnl0ZSBpcyBub3Qgc2V0IHRvIDAsXG4gKiB0aGVuIHJlbW92ZSB0aGUgbGVhZGluZyAweDAgYnl0ZVwiXG4gKi9cbmZ1bmN0aW9uIHNob3VsZFJlbW92ZUxlYWRpbmdaZXJvKGJ5dGVzKSB7XG4gICAgcmV0dXJuIGJ5dGVzWzBdID09PSAweDAgJiYgKGJ5dGVzWzFdICYgKDEgPDwgNykpICE9PSAwO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/unwrapEC2Signature.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verify.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verify.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verify: () => (/* binding */ verify)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _verifyEC2_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./verifyEC2.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js\");\n/* harmony import */ var _verifyRSA_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./verifyRSA.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js\");\n/* harmony import */ var _verifyOKP_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./verifyOKP.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyOKP.js\");\n/* harmony import */ var _unwrapEC2Signature_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./unwrapEC2Signature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/unwrapEC2Signature.js\");\n\n\n\n\n\n/**\n * Verify signatures with their public key. Supports EC2 and RSA public keys.\n */\nfunction verify(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    if ((0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEPublicKeyEC2)(cosePublicKey)) {\n        const unwrappedSignature = (0,_unwrapEC2Signature_js__WEBPACK_IMPORTED_MODULE_4__.unwrapEC2Signature)(signature);\n        return (0,_verifyEC2_js__WEBPACK_IMPORTED_MODULE_1__.verifyEC2)({\n            cosePublicKey,\n            signature: unwrappedSignature,\n            data,\n            shaHashOverride,\n        });\n    }\n    else if ((0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEPublicKeyRSA)(cosePublicKey)) {\n        return (0,_verifyRSA_js__WEBPACK_IMPORTED_MODULE_2__.verifyRSA)({ cosePublicKey, signature, data, shaHashOverride });\n    }\n    else if ((0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEPublicKeyOKP)(cosePublicKey)) {\n        return (0,_verifyOKP_js__WEBPACK_IMPORTED_MODULE_3__.verifyOKP)({ cosePublicKey, signature, data });\n    }\n    const kty = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.kty);\n    throw new Error(`Signature verification with public key of kty ${kty} is not supported by this method`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBc0c7QUFDM0Q7QUFDQTtBQUNBO0FBQ2tCO0FBQzdEO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxrREFBa0Q7QUFDOUQsUUFBUSw0REFBa0I7QUFDMUIsbUNBQW1DLDBFQUFrQjtBQUNyRCxlQUFlLHdEQUFTO0FBQ3hCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsYUFBYSw0REFBa0I7QUFDL0IsZUFBZSx3REFBUyxHQUFHLGlEQUFpRDtBQUM1RTtBQUNBLGFBQWEsNERBQWtCO0FBQy9CLGVBQWUsd0RBQVMsR0FBRyxnQ0FBZ0M7QUFDM0Q7QUFDQSxrQ0FBa0MsOENBQVE7QUFDMUMscUVBQXFFLEtBQUs7QUFDMUUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DcnlwdG8vdmVyaWZ5LmpzPzU1ZDEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ09TRUtFWVMsIGlzQ09TRVB1YmxpY0tleUVDMiwgaXNDT1NFUHVibGljS2V5T0tQLCBpc0NPU0VQdWJsaWNLZXlSU0EsIH0gZnJvbSAnLi4vLi4vY29zZS5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlFQzIgfSBmcm9tICcuL3ZlcmlmeUVDMi5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlSU0EgfSBmcm9tICcuL3ZlcmlmeVJTQS5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlPS1AgfSBmcm9tICcuL3ZlcmlmeU9LUC5qcyc7XG5pbXBvcnQgeyB1bndyYXBFQzJTaWduYXR1cmUgfSBmcm9tICcuL3Vud3JhcEVDMlNpZ25hdHVyZS5qcyc7XG4vKipcbiAqIFZlcmlmeSBzaWduYXR1cmVzIHdpdGggdGhlaXIgcHVibGljIGtleS4gU3VwcG9ydHMgRUMyIGFuZCBSU0EgcHVibGljIGtleXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB2ZXJpZnkob3B0cykge1xuICAgIGNvbnN0IHsgY29zZVB1YmxpY0tleSwgc2lnbmF0dXJlLCBkYXRhLCBzaGFIYXNoT3ZlcnJpZGUgfSA9IG9wdHM7XG4gICAgaWYgKGlzQ09TRVB1YmxpY0tleUVDMihjb3NlUHVibGljS2V5KSkge1xuICAgICAgICBjb25zdCB1bndyYXBwZWRTaWduYXR1cmUgPSB1bndyYXBFQzJTaWduYXR1cmUoc2lnbmF0dXJlKTtcbiAgICAgICAgcmV0dXJuIHZlcmlmeUVDMih7XG4gICAgICAgICAgICBjb3NlUHVibGljS2V5LFxuICAgICAgICAgICAgc2lnbmF0dXJlOiB1bndyYXBwZWRTaWduYXR1cmUsXG4gICAgICAgICAgICBkYXRhLFxuICAgICAgICAgICAgc2hhSGFzaE92ZXJyaWRlLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNDT1NFUHVibGljS2V5UlNBKGNvc2VQdWJsaWNLZXkpKSB7XG4gICAgICAgIHJldHVybiB2ZXJpZnlSU0EoeyBjb3NlUHVibGljS2V5LCBzaWduYXR1cmUsIGRhdGEsIHNoYUhhc2hPdmVycmlkZSB9KTtcbiAgICB9XG4gICAgZWxzZSBpZiAoaXNDT1NFUHVibGljS2V5T0tQKGNvc2VQdWJsaWNLZXkpKSB7XG4gICAgICAgIHJldHVybiB2ZXJpZnlPS1AoeyBjb3NlUHVibGljS2V5LCBzaWduYXR1cmUsIGRhdGEgfSk7XG4gICAgfVxuICAgIGNvbnN0IGt0eSA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmt0eSk7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBTaWduYXR1cmUgdmVyaWZpY2F0aW9uIHdpdGggcHVibGljIGtleSBvZiBrdHkgJHtrdHl9IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhpcyBtZXRob2RgKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verify.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyEC2: () => (/* binding */ verifyEC2)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mapCoseAlgToWebCryptoAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js\");\n/* harmony import */ var _importKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./importKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n\n\n\n\n/**\n * Verify a signature using an EC2 public key\n */\nasync function verifyEC2(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_4__.getWebCrypto)();\n    // Import the public key\n    const alg = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.alg);\n    const crv = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.crv);\n    const x = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.x);\n    const y = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.y);\n    if (!alg) {\n        throw new Error('Public key was missing alg (EC2)');\n    }\n    if (!crv) {\n        throw new Error('Public key was missing crv (EC2)');\n    }\n    if (!x) {\n        throw new Error('Public key was missing x (EC2)');\n    }\n    if (!y) {\n        throw new Error('Public key was missing y (EC2)');\n    }\n    let _crv;\n    if (crv === _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSECRV.P256) {\n        _crv = 'P-256';\n    }\n    else if (crv === _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSECRV.P384) {\n        _crv = 'P-384';\n    }\n    else if (crv === _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSECRV.P521) {\n        _crv = 'P-521';\n    }\n    else {\n        throw new Error(`Unexpected COSE crv value of ${crv} (EC2)`);\n    }\n    const keyData = {\n        kty: 'EC',\n        crv: _crv,\n        x: _index_js__WEBPACK_IMPORTED_MODULE_3__.isoBase64URL.fromBuffer(x),\n        y: _index_js__WEBPACK_IMPORTED_MODULE_3__.isoBase64URL.fromBuffer(y),\n        ext: false,\n    };\n    const keyAlgorithm = {\n        /**\n         * Note to future self: you can't use `mapCoseAlgToWebCryptoKeyAlgName()` here because some\n         * leaf certs from actual devices specified an RSA SHA value for `alg` (e.g. `-257`) which\n         * would then map here to `'RSASSA-PKCS1-v1_5'`. We always want `'ECDSA'` here so we'll\n         * hard-code this.\n         */\n        name: 'ECDSA',\n        namedCurve: _crv,\n    };\n    const key = await (0,_importKey_js__WEBPACK_IMPORTED_MODULE_2__.importKey)({\n        keyData,\n        algorithm: keyAlgorithm,\n    });\n    // Determine which SHA algorithm to use for signature verification\n    let subtleAlg = (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__.mapCoseAlgToWebCryptoAlg)(alg);\n    if (shaHashOverride) {\n        subtleAlg = (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__.mapCoseAlgToWebCryptoAlg)(shaHashOverride);\n    }\n    const verifyAlgorithm = {\n        name: 'ECDSA',\n        hash: { name: subtleAlg },\n    };\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeUVDMi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBa0Q7QUFDdUI7QUFDOUI7QUFDQTtBQUNNO0FBQ2pEO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxrREFBa0Q7QUFDOUQsNEJBQTRCLDhEQUFZO0FBQ3hDO0FBQ0Esa0NBQWtDLDhDQUFRO0FBQzFDLGtDQUFrQyw4Q0FBUTtBQUMxQyxnQ0FBZ0MsOENBQVE7QUFDeEMsZ0NBQWdDLDhDQUFRO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZDQUFPO0FBQ3ZCO0FBQ0E7QUFDQSxxQkFBcUIsNkNBQU87QUFDNUI7QUFDQTtBQUNBLHFCQUFxQiw2Q0FBTztBQUM1QjtBQUNBO0FBQ0E7QUFDQSx3REFBd0QsS0FBSztBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsOERBQXVCO0FBQ2xDLFdBQVcsOERBQXVCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix3REFBUztBQUMvQjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0Esb0JBQW9CLHNGQUF3QjtBQUM1QztBQUNBLG9CQUFvQixzRkFBd0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGlCQUFpQjtBQUNqQztBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL2lzby9pc29DcnlwdG8vdmVyaWZ5RUMyLmpzPzk0YTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ09TRUNSViwgQ09TRUtFWVMgfSBmcm9tICcuLi8uLi9jb3NlLmpzJztcbmltcG9ydCB7IG1hcENvc2VBbGdUb1dlYkNyeXB0b0FsZyB9IGZyb20gJy4vbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvQWxnLmpzJztcbmltcG9ydCB7IGltcG9ydEtleSB9IGZyb20gJy4vaW1wb3J0S2V5LmpzJztcbmltcG9ydCB7IGlzb0Jhc2U2NFVSTCB9IGZyb20gJy4uL2luZGV4LmpzJztcbmltcG9ydCB7IGdldFdlYkNyeXB0byB9IGZyb20gJy4vZ2V0V2ViQ3J5cHRvLmpzJztcbi8qKlxuICogVmVyaWZ5IGEgc2lnbmF0dXJlIHVzaW5nIGFuIEVDMiBwdWJsaWMga2V5XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlFQzIob3B0cykge1xuICAgIGNvbnN0IHsgY29zZVB1YmxpY0tleSwgc2lnbmF0dXJlLCBkYXRhLCBzaGFIYXNoT3ZlcnJpZGUgfSA9IG9wdHM7XG4gICAgY29uc3QgV2ViQ3J5cHRvID0gYXdhaXQgZ2V0V2ViQ3J5cHRvKCk7XG4gICAgLy8gSW1wb3J0IHRoZSBwdWJsaWMga2V5XG4gICAgY29uc3QgYWxnID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMuYWxnKTtcbiAgICBjb25zdCBjcnYgPSBjb3NlUHVibGljS2V5LmdldChDT1NFS0VZUy5jcnYpO1xuICAgIGNvbnN0IHggPSBjb3NlUHVibGljS2V5LmdldChDT1NFS0VZUy54KTtcbiAgICBjb25zdCB5ID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMueSk7XG4gICAgaWYgKCFhbGcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQdWJsaWMga2V5IHdhcyBtaXNzaW5nIGFsZyAoRUMyKScpO1xuICAgIH1cbiAgICBpZiAoIWNydikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1B1YmxpYyBrZXkgd2FzIG1pc3NpbmcgY3J2IChFQzIpJyk7XG4gICAgfVxuICAgIGlmICgheCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ1B1YmxpYyBrZXkgd2FzIG1pc3NpbmcgeCAoRUMyKScpO1xuICAgIH1cbiAgICBpZiAoIXkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQdWJsaWMga2V5IHdhcyBtaXNzaW5nIHkgKEVDMiknKTtcbiAgICB9XG4gICAgbGV0IF9jcnY7XG4gICAgaWYgKGNydiA9PT0gQ09TRUNSVi5QMjU2KSB7XG4gICAgICAgIF9jcnYgPSAnUC0yNTYnO1xuICAgIH1cbiAgICBlbHNlIGlmIChjcnYgPT09IENPU0VDUlYuUDM4NCkge1xuICAgICAgICBfY3J2ID0gJ1AtMzg0JztcbiAgICB9XG4gICAgZWxzZSBpZiAoY3J2ID09PSBDT1NFQ1JWLlA1MjEpIHtcbiAgICAgICAgX2NydiA9ICdQLTUyMSc7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgQ09TRSBjcnYgdmFsdWUgb2YgJHtjcnZ9IChFQzIpYCk7XG4gICAgfVxuICAgIGNvbnN0IGtleURhdGEgPSB7XG4gICAgICAgIGt0eTogJ0VDJyxcbiAgICAgICAgY3J2OiBfY3J2LFxuICAgICAgICB4OiBpc29CYXNlNjRVUkwuZnJvbUJ1ZmZlcih4KSxcbiAgICAgICAgeTogaXNvQmFzZTY0VVJMLmZyb21CdWZmZXIoeSksXG4gICAgICAgIGV4dDogZmFsc2UsXG4gICAgfTtcbiAgICBjb25zdCBrZXlBbGdvcml0aG0gPSB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBOb3RlIHRvIGZ1dHVyZSBzZWxmOiB5b3UgY2FuJ3QgdXNlIGBtYXBDb3NlQWxnVG9XZWJDcnlwdG9LZXlBbGdOYW1lKClgIGhlcmUgYmVjYXVzZSBzb21lXG4gICAgICAgICAqIGxlYWYgY2VydHMgZnJvbSBhY3R1YWwgZGV2aWNlcyBzcGVjaWZpZWQgYW4gUlNBIFNIQSB2YWx1ZSBmb3IgYGFsZ2AgKGUuZy4gYC0yNTdgKSB3aGljaFxuICAgICAgICAgKiB3b3VsZCB0aGVuIG1hcCBoZXJlIHRvIGAnUlNBU1NBLVBLQ1MxLXYxXzUnYC4gV2UgYWx3YXlzIHdhbnQgYCdFQ0RTQSdgIGhlcmUgc28gd2UnbGxcbiAgICAgICAgICogaGFyZC1jb2RlIHRoaXMuXG4gICAgICAgICAqL1xuICAgICAgICBuYW1lOiAnRUNEU0EnLFxuICAgICAgICBuYW1lZEN1cnZlOiBfY3J2LFxuICAgIH07XG4gICAgY29uc3Qga2V5ID0gYXdhaXQgaW1wb3J0S2V5KHtcbiAgICAgICAga2V5RGF0YSxcbiAgICAgICAgYWxnb3JpdGhtOiBrZXlBbGdvcml0aG0sXG4gICAgfSk7XG4gICAgLy8gRGV0ZXJtaW5lIHdoaWNoIFNIQSBhbGdvcml0aG0gdG8gdXNlIGZvciBzaWduYXR1cmUgdmVyaWZpY2F0aW9uXG4gICAgbGV0IHN1YnRsZUFsZyA9IG1hcENvc2VBbGdUb1dlYkNyeXB0b0FsZyhhbGcpO1xuICAgIGlmIChzaGFIYXNoT3ZlcnJpZGUpIHtcbiAgICAgICAgc3VidGxlQWxnID0gbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvQWxnKHNoYUhhc2hPdmVycmlkZSk7XG4gICAgfVxuICAgIGNvbnN0IHZlcmlmeUFsZ29yaXRobSA9IHtcbiAgICAgICAgbmFtZTogJ0VDRFNBJyxcbiAgICAgICAgaGFzaDogeyBuYW1lOiBzdWJ0bGVBbGcgfSxcbiAgICB9O1xuICAgIHJldHVybiBXZWJDcnlwdG8uc3VidGxlLnZlcmlmeSh2ZXJpZnlBbGdvcml0aG0sIGtleSwgc2lnbmF0dXJlLCBkYXRhKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyOKP.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyOKP.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyOKP: () => (/* binding */ verifyOKP)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/index.js\");\n/* harmony import */ var _importKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./importKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js\");\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n\n\n\nasync function verifyOKP(opts) {\n    const { cosePublicKey, signature, data } = opts;\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_3__.getWebCrypto)();\n    const alg = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.alg);\n    const crv = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.crv);\n    const x = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.x);\n    if (!alg) {\n        throw new Error('Public key was missing alg (OKP)');\n    }\n    if (!(0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEAlg)(alg)) {\n        throw new Error(`Public key had invalid alg ${alg} (OKP)`);\n    }\n    if (!crv) {\n        throw new Error('Public key was missing crv (OKP)');\n    }\n    if (!x) {\n        throw new Error('Public key was missing x (OKP)');\n    }\n    // Pulled key import steps from here:\n    // https://wicg.github.io/webcrypto-secure-curves/#ed25519-operations\n    let _crv;\n    if (crv === _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSECRV.ED25519) {\n        _crv = 'Ed25519';\n    }\n    else {\n        throw new Error(`Unexpected COSE crv value of ${crv} (OKP)`);\n    }\n    const keyData = {\n        kty: 'OKP',\n        crv: _crv,\n        alg: 'EdDSA',\n        x: _index_js__WEBPACK_IMPORTED_MODULE_1__.isoBase64URL.fromBuffer(x),\n        ext: false,\n    };\n    const keyAlgorithm = {\n        name: _crv,\n        namedCurve: _crv,\n    };\n    const key = await (0,_importKey_js__WEBPACK_IMPORTED_MODULE_2__.importKey)({\n        keyData,\n        algorithm: keyAlgorithm,\n    });\n    const verifyAlgorithm = {\n        name: _crv,\n    };\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeU9LUC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE2RDtBQUNmO0FBQ0g7QUFDTTtBQUMxQztBQUNQLFlBQVksaUNBQWlDO0FBQzdDLDRCQUE0Qiw4REFBWTtBQUN4QyxrQ0FBa0MsOENBQVE7QUFDMUMsa0NBQWtDLDhDQUFRO0FBQzFDLGdDQUFnQyw4Q0FBUTtBQUN4QztBQUNBO0FBQ0E7QUFDQSxTQUFTLG1EQUFTO0FBQ2xCLHNEQUFzRCxLQUFLO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLDZDQUFPO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxLQUFLO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLDhEQUF1QjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0Isd0RBQVM7QUFDL0I7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeU9LUC5qcz8xN2UxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENPU0VDUlYsIENPU0VLRVlTLCBpc0NPU0VBbGcgfSBmcm9tICcuLi8uLi9jb3NlLmpzJztcbmltcG9ydCB7IGlzb0Jhc2U2NFVSTCB9IGZyb20gJy4uLy4uL2luZGV4LmpzJztcbmltcG9ydCB7IGltcG9ydEtleSB9IGZyb20gJy4vaW1wb3J0S2V5LmpzJztcbmltcG9ydCB7IGdldFdlYkNyeXB0byB9IGZyb20gJy4vZ2V0V2ViQ3J5cHRvLmpzJztcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlPS1Aob3B0cykge1xuICAgIGNvbnN0IHsgY29zZVB1YmxpY0tleSwgc2lnbmF0dXJlLCBkYXRhIH0gPSBvcHRzO1xuICAgIGNvbnN0IFdlYkNyeXB0byA9IGF3YWl0IGdldFdlYkNyeXB0bygpO1xuICAgIGNvbnN0IGFsZyA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmFsZyk7XG4gICAgY29uc3QgY3J2ID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMuY3J2KTtcbiAgICBjb25zdCB4ID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMueCk7XG4gICAgaWYgKCFhbGcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQdWJsaWMga2V5IHdhcyBtaXNzaW5nIGFsZyAoT0tQKScpO1xuICAgIH1cbiAgICBpZiAoIWlzQ09TRUFsZyhhbGcpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgUHVibGljIGtleSBoYWQgaW52YWxpZCBhbGcgJHthbGd9IChPS1ApYCk7XG4gICAgfVxuICAgIGlmICghY3J2KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHVibGljIGtleSB3YXMgbWlzc2luZyBjcnYgKE9LUCknKTtcbiAgICB9XG4gICAgaWYgKCF4KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHVibGljIGtleSB3YXMgbWlzc2luZyB4IChPS1ApJyk7XG4gICAgfVxuICAgIC8vIFB1bGxlZCBrZXkgaW1wb3J0IHN0ZXBzIGZyb20gaGVyZTpcbiAgICAvLyBodHRwczovL3dpY2cuZ2l0aHViLmlvL3dlYmNyeXB0by1zZWN1cmUtY3VydmVzLyNlZDI1NTE5LW9wZXJhdGlvbnNcbiAgICBsZXQgX2NydjtcbiAgICBpZiAoY3J2ID09PSBDT1NFQ1JWLkVEMjU1MTkpIHtcbiAgICAgICAgX2NydiA9ICdFZDI1NTE5JztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5leHBlY3RlZCBDT1NFIGNydiB2YWx1ZSBvZiAke2Nydn0gKE9LUClgKTtcbiAgICB9XG4gICAgY29uc3Qga2V5RGF0YSA9IHtcbiAgICAgICAga3R5OiAnT0tQJyxcbiAgICAgICAgY3J2OiBfY3J2LFxuICAgICAgICBhbGc6ICdFZERTQScsXG4gICAgICAgIHg6IGlzb0Jhc2U2NFVSTC5mcm9tQnVmZmVyKHgpLFxuICAgICAgICBleHQ6IGZhbHNlLFxuICAgIH07XG4gICAgY29uc3Qga2V5QWxnb3JpdGhtID0ge1xuICAgICAgICBuYW1lOiBfY3J2LFxuICAgICAgICBuYW1lZEN1cnZlOiBfY3J2LFxuICAgIH07XG4gICAgY29uc3Qga2V5ID0gYXdhaXQgaW1wb3J0S2V5KHtcbiAgICAgICAga2V5RGF0YSxcbiAgICAgICAgYWxnb3JpdGhtOiBrZXlBbGdvcml0aG0sXG4gICAgfSk7XG4gICAgY29uc3QgdmVyaWZ5QWxnb3JpdGhtID0ge1xuICAgICAgICBuYW1lOiBfY3J2LFxuICAgIH07XG4gICAgcmV0dXJuIFdlYkNyeXB0by5zdWJ0bGUudmVyaWZ5KHZlcmlmeUFsZ29yaXRobSwga2V5LCBzaWduYXR1cmUsIGRhdGEpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyOKP.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyRSA: () => (/* binding */ verifyRSA)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mapCoseAlgToWebCryptoAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoAlg.js\");\n/* harmony import */ var _importKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./importKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/importKey.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _mapCoseAlgToWebCryptoKeyAlgName_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./mapCoseAlgToWebCryptoKeyAlgName.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/mapCoseAlgToWebCryptoKeyAlgName.js\");\n/* harmony import */ var _getWebCrypto_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./getWebCrypto.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/getWebCrypto.js\");\n\n\n\n\n\n\n/**\n * Verify a signature using an RSA public key\n */\nasync function verifyRSA(opts) {\n    const { cosePublicKey, signature, data, shaHashOverride } = opts;\n    const WebCrypto = await (0,_getWebCrypto_js__WEBPACK_IMPORTED_MODULE_5__.getWebCrypto)();\n    const alg = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.alg);\n    const n = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.n);\n    const e = cosePublicKey.get(_cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEKEYS.e);\n    if (!alg) {\n        throw new Error('Public key was missing alg (RSA)');\n    }\n    if (!(0,_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEAlg)(alg)) {\n        throw new Error(`Public key had invalid alg ${alg} (RSA)`);\n    }\n    if (!n) {\n        throw new Error('Public key was missing n (RSA)');\n    }\n    if (!e) {\n        throw new Error('Public key was missing e (RSA)');\n    }\n    const keyData = {\n        kty: 'RSA',\n        alg: '',\n        n: _index_js__WEBPACK_IMPORTED_MODULE_3__.isoBase64URL.fromBuffer(n),\n        e: _index_js__WEBPACK_IMPORTED_MODULE_3__.isoBase64URL.fromBuffer(e),\n        ext: false,\n    };\n    const keyAlgorithm = {\n        name: (0,_mapCoseAlgToWebCryptoKeyAlgName_js__WEBPACK_IMPORTED_MODULE_4__.mapCoseAlgToWebCryptoKeyAlgName)(alg),\n        hash: { name: (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__.mapCoseAlgToWebCryptoAlg)(alg) },\n    };\n    const verifyAlgorithm = {\n        name: (0,_mapCoseAlgToWebCryptoKeyAlgName_js__WEBPACK_IMPORTED_MODULE_4__.mapCoseAlgToWebCryptoKeyAlgName)(alg),\n    };\n    if (shaHashOverride) {\n        keyAlgorithm.hash.name = (0,_mapCoseAlgToWebCryptoAlg_js__WEBPACK_IMPORTED_MODULE_1__.mapCoseAlgToWebCryptoAlg)(shaHashOverride);\n    }\n    if (keyAlgorithm.name === 'RSASSA-PKCS1-v1_5') {\n        if (keyAlgorithm.hash.name === 'SHA-256') {\n            keyData.alg = 'RS256';\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-384') {\n            keyData.alg = 'RS384';\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-512') {\n            keyData.alg = 'RS512';\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-1') {\n            keyData.alg = 'RS1';\n        }\n    }\n    else if (keyAlgorithm.name === 'RSA-PSS') {\n        /**\n         * salt length. The default value is 20 but the convention is to use hLen, the length of the\n         * output of the hash function in bytes. A salt length of zero is permitted and will result in\n         * a deterministic signature value. The actual salt length used can be determined from the\n         * signature value.\n         *\n         * From https://www.cryptosys.net/pki/manpki/pki_rsaschemes.html\n         */\n        let saltLength = 0;\n        if (keyAlgorithm.hash.name === 'SHA-256') {\n            keyData.alg = 'PS256';\n            saltLength = 32; // 256 bits => 32 bytes\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-384') {\n            keyData.alg = 'PS384';\n            saltLength = 48; // 384 bits => 48 bytes\n        }\n        else if (keyAlgorithm.hash.name === 'SHA-512') {\n            keyData.alg = 'PS512';\n            saltLength = 64; // 512 bits => 64 bytes\n        }\n        verifyAlgorithm.saltLength = saltLength;\n    }\n    else {\n        throw new Error(`Unexpected RSA key algorithm ${alg} (${keyAlgorithm.name})`);\n    }\n    const key = await (0,_importKey_js__WEBPACK_IMPORTED_MODULE_2__.importKey)({\n        keyData,\n        algorithm: keyAlgorithm,\n    });\n    return WebCrypto.subtle.verify(verifyAlgorithm, key, signature, data);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvQ3J5cHRvL3ZlcmlmeVJTQS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQW9EO0FBQ3FCO0FBQzlCO0FBQ0E7QUFDNEM7QUFDdEM7QUFDakQ7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLGtEQUFrRDtBQUM5RCw0QkFBNEIsOERBQVk7QUFDeEMsa0NBQWtDLDhDQUFRO0FBQzFDLGdDQUFnQyw4Q0FBUTtBQUN4QyxnQ0FBZ0MsOENBQVE7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsU0FBUyxtREFBUztBQUNsQixzREFBc0QsS0FBSztBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsOERBQXVCO0FBQ2xDLFdBQVcsOERBQXVCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLGNBQWMsb0dBQStCO0FBQzdDLGdCQUFnQixNQUFNLHNGQUF3QixPQUFPO0FBQ3JEO0FBQ0E7QUFDQSxjQUFjLG9HQUErQjtBQUM3QztBQUNBO0FBQ0EsaUNBQWlDLHNGQUF3QjtBQUN6RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkI7QUFDN0I7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBLDZCQUE2QjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdEQUF3RCxLQUFLLEdBQUcsa0JBQWtCO0FBQ2xGO0FBQ0Esc0JBQXNCLHdEQUFTO0FBQy9CO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb0NyeXB0by92ZXJpZnlSU0EuanM/YzhiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT1NFS0VZUywgaXNDT1NFQWxnIH0gZnJvbSAnLi4vLi4vY29zZS5qcyc7XG5pbXBvcnQgeyBtYXBDb3NlQWxnVG9XZWJDcnlwdG9BbGcgfSBmcm9tICcuL21hcENvc2VBbGdUb1dlYkNyeXB0b0FsZy5qcyc7XG5pbXBvcnQgeyBpbXBvcnRLZXkgfSBmcm9tICcuL2ltcG9ydEtleS5qcyc7XG5pbXBvcnQgeyBpc29CYXNlNjRVUkwgfSBmcm9tICcuLi9pbmRleC5qcyc7XG5pbXBvcnQgeyBtYXBDb3NlQWxnVG9XZWJDcnlwdG9LZXlBbGdOYW1lIH0gZnJvbSAnLi9tYXBDb3NlQWxnVG9XZWJDcnlwdG9LZXlBbGdOYW1lLmpzJztcbmltcG9ydCB7IGdldFdlYkNyeXB0byB9IGZyb20gJy4vZ2V0V2ViQ3J5cHRvLmpzJztcbi8qKlxuICogVmVyaWZ5IGEgc2lnbmF0dXJlIHVzaW5nIGFuIFJTQSBwdWJsaWMga2V5XG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlSU0Eob3B0cykge1xuICAgIGNvbnN0IHsgY29zZVB1YmxpY0tleSwgc2lnbmF0dXJlLCBkYXRhLCBzaGFIYXNoT3ZlcnJpZGUgfSA9IG9wdHM7XG4gICAgY29uc3QgV2ViQ3J5cHRvID0gYXdhaXQgZ2V0V2ViQ3J5cHRvKCk7XG4gICAgY29uc3QgYWxnID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMuYWxnKTtcbiAgICBjb25zdCBuID0gY29zZVB1YmxpY0tleS5nZXQoQ09TRUtFWVMubik7XG4gICAgY29uc3QgZSA9IGNvc2VQdWJsaWNLZXkuZ2V0KENPU0VLRVlTLmUpO1xuICAgIGlmICghYWxnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHVibGljIGtleSB3YXMgbWlzc2luZyBhbGcgKFJTQSknKTtcbiAgICB9XG4gICAgaWYgKCFpc0NPU0VBbGcoYWxnKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFB1YmxpYyBrZXkgaGFkIGludmFsaWQgYWxnICR7YWxnfSAoUlNBKWApO1xuICAgIH1cbiAgICBpZiAoIW4pIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQdWJsaWMga2V5IHdhcyBtaXNzaW5nIG4gKFJTQSknKTtcbiAgICB9XG4gICAgaWYgKCFlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUHVibGljIGtleSB3YXMgbWlzc2luZyBlIChSU0EpJyk7XG4gICAgfVxuICAgIGNvbnN0IGtleURhdGEgPSB7XG4gICAgICAgIGt0eTogJ1JTQScsXG4gICAgICAgIGFsZzogJycsXG4gICAgICAgIG46IGlzb0Jhc2U2NFVSTC5mcm9tQnVmZmVyKG4pLFxuICAgICAgICBlOiBpc29CYXNlNjRVUkwuZnJvbUJ1ZmZlcihlKSxcbiAgICAgICAgZXh0OiBmYWxzZSxcbiAgICB9O1xuICAgIGNvbnN0IGtleUFsZ29yaXRobSA9IHtcbiAgICAgICAgbmFtZTogbWFwQ29zZUFsZ1RvV2ViQ3J5cHRvS2V5QWxnTmFtZShhbGcpLFxuICAgICAgICBoYXNoOiB7IG5hbWU6IG1hcENvc2VBbGdUb1dlYkNyeXB0b0FsZyhhbGcpIH0sXG4gICAgfTtcbiAgICBjb25zdCB2ZXJpZnlBbGdvcml0aG0gPSB7XG4gICAgICAgIG5hbWU6IG1hcENvc2VBbGdUb1dlYkNyeXB0b0tleUFsZ05hbWUoYWxnKSxcbiAgICB9O1xuICAgIGlmIChzaGFIYXNoT3ZlcnJpZGUpIHtcbiAgICAgICAga2V5QWxnb3JpdGhtLmhhc2gubmFtZSA9IG1hcENvc2VBbGdUb1dlYkNyeXB0b0FsZyhzaGFIYXNoT3ZlcnJpZGUpO1xuICAgIH1cbiAgICBpZiAoa2V5QWxnb3JpdGhtLm5hbWUgPT09ICdSU0FTU0EtUEtDUzEtdjFfNScpIHtcbiAgICAgICAgaWYgKGtleUFsZ29yaXRobS5oYXNoLm5hbWUgPT09ICdTSEEtMjU2Jykge1xuICAgICAgICAgICAga2V5RGF0YS5hbGcgPSAnUlMyNTYnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGtleUFsZ29yaXRobS5oYXNoLm5hbWUgPT09ICdTSEEtMzg0Jykge1xuICAgICAgICAgICAga2V5RGF0YS5hbGcgPSAnUlMzODQnO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGtleUFsZ29yaXRobS5oYXNoLm5hbWUgPT09ICdTSEEtNTEyJykge1xuICAgICAgICAgICAga2V5RGF0YS5hbGcgPSAnUlM1MTInO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGtleUFsZ29yaXRobS5oYXNoLm5hbWUgPT09ICdTSEEtMScpIHtcbiAgICAgICAgICAgIGtleURhdGEuYWxnID0gJ1JTMSc7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSBpZiAoa2V5QWxnb3JpdGhtLm5hbWUgPT09ICdSU0EtUFNTJykge1xuICAgICAgICAvKipcbiAgICAgICAgICogc2FsdCBsZW5ndGguIFRoZSBkZWZhdWx0IHZhbHVlIGlzIDIwIGJ1dCB0aGUgY29udmVudGlvbiBpcyB0byB1c2UgaExlbiwgdGhlIGxlbmd0aCBvZiB0aGVcbiAgICAgICAgICogb3V0cHV0IG9mIHRoZSBoYXNoIGZ1bmN0aW9uIGluIGJ5dGVzLiBBIHNhbHQgbGVuZ3RoIG9mIHplcm8gaXMgcGVybWl0dGVkIGFuZCB3aWxsIHJlc3VsdCBpblxuICAgICAgICAgKiBhIGRldGVybWluaXN0aWMgc2lnbmF0dXJlIHZhbHVlLiBUaGUgYWN0dWFsIHNhbHQgbGVuZ3RoIHVzZWQgY2FuIGJlIGRldGVybWluZWQgZnJvbSB0aGVcbiAgICAgICAgICogc2lnbmF0dXJlIHZhbHVlLlxuICAgICAgICAgKlxuICAgICAgICAgKiBGcm9tIGh0dHBzOi8vd3d3LmNyeXB0b3N5cy5uZXQvcGtpL21hbnBraS9wa2lfcnNhc2NoZW1lcy5odG1sXG4gICAgICAgICAqL1xuICAgICAgICBsZXQgc2FsdExlbmd0aCA9IDA7XG4gICAgICAgIGlmIChrZXlBbGdvcml0aG0uaGFzaC5uYW1lID09PSAnU0hBLTI1NicpIHtcbiAgICAgICAgICAgIGtleURhdGEuYWxnID0gJ1BTMjU2JztcbiAgICAgICAgICAgIHNhbHRMZW5ndGggPSAzMjsgLy8gMjU2IGJpdHMgPT4gMzIgYnl0ZXNcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChrZXlBbGdvcml0aG0uaGFzaC5uYW1lID09PSAnU0hBLTM4NCcpIHtcbiAgICAgICAgICAgIGtleURhdGEuYWxnID0gJ1BTMzg0JztcbiAgICAgICAgICAgIHNhbHRMZW5ndGggPSA0ODsgLy8gMzg0IGJpdHMgPT4gNDggYnl0ZXNcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChrZXlBbGdvcml0aG0uaGFzaC5uYW1lID09PSAnU0hBLTUxMicpIHtcbiAgICAgICAgICAgIGtleURhdGEuYWxnID0gJ1BTNTEyJztcbiAgICAgICAgICAgIHNhbHRMZW5ndGggPSA2NDsgLy8gNTEyIGJpdHMgPT4gNjQgYnl0ZXNcbiAgICAgICAgfVxuICAgICAgICB2ZXJpZnlBbGdvcml0aG0uc2FsdExlbmd0aCA9IHNhbHRMZW5ndGg7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgUlNBIGtleSBhbGdvcml0aG0gJHthbGd9ICgke2tleUFsZ29yaXRobS5uYW1lfSlgKTtcbiAgICB9XG4gICAgY29uc3Qga2V5ID0gYXdhaXQgaW1wb3J0S2V5KHtcbiAgICAgICAga2V5RGF0YSxcbiAgICAgICAgYWxnb3JpdGhtOiBrZXlBbGdvcml0aG0sXG4gICAgfSk7XG4gICAgcmV0dXJuIFdlYkNyeXB0by5zdWJ0bGUudmVyaWZ5KHZlcmlmeUFsZ29yaXRobSwga2V5LCBzaWduYXR1cmUsIGRhdGEpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoUint8Array.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/iso/isoUint8Array.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   areEqual: () => (/* binding */ areEqual),\n/* harmony export */   concat: () => (/* binding */ concat),\n/* harmony export */   fromASCIIString: () => (/* binding */ fromASCIIString),\n/* harmony export */   fromHex: () => (/* binding */ fromHex),\n/* harmony export */   fromUTF8String: () => (/* binding */ fromUTF8String),\n/* harmony export */   toDataView: () => (/* binding */ toDataView),\n/* harmony export */   toHex: () => (/* binding */ toHex),\n/* harmony export */   toUTF8String: () => (/* binding */ toUTF8String)\n/* harmony export */ });\n/**\n * Make sure two Uint8Arrays are deeply equivalent\n */\nfunction areEqual(array1, array2) {\n    if (array1.length != array2.length) {\n        return false;\n    }\n    return array1.every((val, i) => val === array2[i]);\n}\n/**\n * Convert a Uint8Array to Hexadecimal.\n *\n * A replacement for `Buffer.toString('hex')`\n */\nfunction toHex(array) {\n    const hexParts = Array.from(array, (i) => i.toString(16).padStart(2, '0'));\n    // adce000235bcc60a648b0b25f1f05503\n    return hexParts.join('');\n}\n/**\n * Convert a hexadecimal string to isoUint8Array.\n *\n * A replacement for `Buffer.from('...', 'hex')`\n */\nfunction fromHex(hex) {\n    if (!hex) {\n        return Uint8Array.from([]);\n    }\n    const isValid = hex.length !== 0 && hex.length % 2 === 0 &&\n        !/[^a-fA-F0-9]/u.test(hex);\n    if (!isValid) {\n        throw new Error('Invalid hex string');\n    }\n    const byteStrings = hex.match(/.{1,2}/g) ?? [];\n    return Uint8Array.from(byteStrings.map((byte) => parseInt(byte, 16)));\n}\n/**\n * Combine multiple Uint8Arrays into a single Uint8Array\n */\nfunction concat(arrays) {\n    let pointer = 0;\n    const totalLength = arrays.reduce((prev, curr) => prev + curr.length, 0);\n    const toReturn = new Uint8Array(totalLength);\n    arrays.forEach((arr) => {\n        toReturn.set(arr, pointer);\n        pointer += arr.length;\n    });\n    return toReturn;\n}\n/**\n * Convert bytes into a UTF-8 string\n */\nfunction toUTF8String(array) {\n    const decoder = new globalThis.TextDecoder('utf-8');\n    return decoder.decode(array);\n}\n/**\n * Convert a UTF-8 string back into bytes\n */\nfunction fromUTF8String(utf8String) {\n    const encoder = new globalThis.TextEncoder();\n    return encoder.encode(utf8String);\n}\n/**\n * Convert an ASCII string to Uint8Array\n */\nfunction fromASCIIString(value) {\n    return Uint8Array.from(value.split('').map((x) => x.charCodeAt(0)));\n}\n/**\n * Prepare a DataView we can slice our way around in as we parse the bytes in a Uint8Array\n */\nfunction toDataView(array) {\n    return new DataView(array.buffer, array.byteOffset, array.length);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9pc28vaXNvVWludDhBcnJheS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFDQUFxQyxJQUFJO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvaXNvL2lzb1VpbnQ4QXJyYXkuanM/M2IxOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE1ha2Ugc3VyZSB0d28gVWludDhBcnJheXMgYXJlIGRlZXBseSBlcXVpdmFsZW50XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBhcmVFcXVhbChhcnJheTEsIGFycmF5Mikge1xuICAgIGlmIChhcnJheTEubGVuZ3RoICE9IGFycmF5Mi5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICByZXR1cm4gYXJyYXkxLmV2ZXJ5KCh2YWwsIGkpID0+IHZhbCA9PT0gYXJyYXkyW2ldKTtcbn1cbi8qKlxuICogQ29udmVydCBhIFVpbnQ4QXJyYXkgdG8gSGV4YWRlY2ltYWwuXG4gKlxuICogQSByZXBsYWNlbWVudCBmb3IgYEJ1ZmZlci50b1N0cmluZygnaGV4JylgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0hleChhcnJheSkge1xuICAgIGNvbnN0IGhleFBhcnRzID0gQXJyYXkuZnJvbShhcnJheSwgKGkpID0+IGkudG9TdHJpbmcoMTYpLnBhZFN0YXJ0KDIsICcwJykpO1xuICAgIC8vIGFkY2UwMDAyMzViY2M2MGE2NDhiMGIyNWYxZjA1NTAzXG4gICAgcmV0dXJuIGhleFBhcnRzLmpvaW4oJycpO1xufVxuLyoqXG4gKiBDb252ZXJ0IGEgaGV4YWRlY2ltYWwgc3RyaW5nIHRvIGlzb1VpbnQ4QXJyYXkuXG4gKlxuICogQSByZXBsYWNlbWVudCBmb3IgYEJ1ZmZlci5mcm9tKCcuLi4nLCAnaGV4JylgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmcm9tSGV4KGhleCkge1xuICAgIGlmICghaGV4KSB7XG4gICAgICAgIHJldHVybiBVaW50OEFycmF5LmZyb20oW10pO1xuICAgIH1cbiAgICBjb25zdCBpc1ZhbGlkID0gaGV4Lmxlbmd0aCAhPT0gMCAmJiBoZXgubGVuZ3RoICUgMiA9PT0gMCAmJlxuICAgICAgICAhL1teYS1mQS1GMC05XS91LnRlc3QoaGV4KTtcbiAgICBpZiAoIWlzVmFsaWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJbnZhbGlkIGhleCBzdHJpbmcnKTtcbiAgICB9XG4gICAgY29uc3QgYnl0ZVN0cmluZ3MgPSBoZXgubWF0Y2goLy57MSwyfS9nKSA/PyBbXTtcbiAgICByZXR1cm4gVWludDhBcnJheS5mcm9tKGJ5dGVTdHJpbmdzLm1hcCgoYnl0ZSkgPT4gcGFyc2VJbnQoYnl0ZSwgMTYpKSk7XG59XG4vKipcbiAqIENvbWJpbmUgbXVsdGlwbGUgVWludDhBcnJheXMgaW50byBhIHNpbmdsZSBVaW50OEFycmF5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBjb25jYXQoYXJyYXlzKSB7XG4gICAgbGV0IHBvaW50ZXIgPSAwO1xuICAgIGNvbnN0IHRvdGFsTGVuZ3RoID0gYXJyYXlzLnJlZHVjZSgocHJldiwgY3VycikgPT4gcHJldiArIGN1cnIubGVuZ3RoLCAwKTtcbiAgICBjb25zdCB0b1JldHVybiA9IG5ldyBVaW50OEFycmF5KHRvdGFsTGVuZ3RoKTtcbiAgICBhcnJheXMuZm9yRWFjaCgoYXJyKSA9PiB7XG4gICAgICAgIHRvUmV0dXJuLnNldChhcnIsIHBvaW50ZXIpO1xuICAgICAgICBwb2ludGVyICs9IGFyci5sZW5ndGg7XG4gICAgfSk7XG4gICAgcmV0dXJuIHRvUmV0dXJuO1xufVxuLyoqXG4gKiBDb252ZXJ0IGJ5dGVzIGludG8gYSBVVEYtOCBzdHJpbmdcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvVVRGOFN0cmluZyhhcnJheSkge1xuICAgIGNvbnN0IGRlY29kZXIgPSBuZXcgZ2xvYmFsVGhpcy5UZXh0RGVjb2RlcigndXRmLTgnKTtcbiAgICByZXR1cm4gZGVjb2Rlci5kZWNvZGUoYXJyYXkpO1xufVxuLyoqXG4gKiBDb252ZXJ0IGEgVVRGLTggc3RyaW5nIGJhY2sgaW50byBieXRlc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbVVURjhTdHJpbmcodXRmOFN0cmluZykge1xuICAgIGNvbnN0IGVuY29kZXIgPSBuZXcgZ2xvYmFsVGhpcy5UZXh0RW5jb2RlcigpO1xuICAgIHJldHVybiBlbmNvZGVyLmVuY29kZSh1dGY4U3RyaW5nKTtcbn1cbi8qKlxuICogQ29udmVydCBhbiBBU0NJSSBzdHJpbmcgdG8gVWludDhBcnJheVxuICovXG5leHBvcnQgZnVuY3Rpb24gZnJvbUFTQ0lJU3RyaW5nKHZhbHVlKSB7XG4gICAgcmV0dXJuIFVpbnQ4QXJyYXkuZnJvbSh2YWx1ZS5zcGxpdCgnJykubWFwKCh4KSA9PiB4LmNoYXJDb2RlQXQoMCkpKTtcbn1cbi8qKlxuICogUHJlcGFyZSBhIERhdGFWaWV3IHdlIGNhbiBzbGljZSBvdXIgd2F5IGFyb3VuZCBpbiBhcyB3ZSBwYXJzZSB0aGUgYnl0ZXMgaW4gYSBVaW50OEFycmF5XG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB0b0RhdGFWaWV3KGFycmF5KSB7XG4gICAgcmV0dXJuIG5ldyBEYXRhVmlldyhhcnJheS5idWZmZXIsIGFycmF5LmJ5dGVPZmZzZXQsIGFycmF5Lmxlbmd0aCk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoUint8Array.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/logging.js":
/*!********************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/logging.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getLogger: () => (/* binding */ getLogger)\n/* harmony export */ });\n// import { debug, Debugger } from '../deps.ts';\n// const defaultLogger = debug('SimpleWebAuthn');\n/**\n * Generate an instance of a `debug` logger that extends off of the \"simplewebauthn\" namespace for\n * consistent naming.\n *\n * See https://www.npmjs.com/package/debug for information on how to control logging output when\n * using @simplewebauthn/server\n *\n * Example:\n *\n * ```\n * const log = getLogger('mds');\n * log('hello'); // simplewebauthn:mds hello +0ms\n * ```\n */\nfunction getLogger(_name) {\n    // This is a noop for now while I search for a better debug logger technique\n    return (_message, ..._rest) => { };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9sb2dnaW5nLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBQSxZQUFZLGtCQUFrQjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9sb2dnaW5nLmpzPzExMGEiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0IHsgZGVidWcsIERlYnVnZ2VyIH0gZnJvbSAnLi4vZGVwcy50cyc7XG4vLyBjb25zdCBkZWZhdWx0TG9nZ2VyID0gZGVidWcoJ1NpbXBsZVdlYkF1dGhuJyk7XG4vKipcbiAqIEdlbmVyYXRlIGFuIGluc3RhbmNlIG9mIGEgYGRlYnVnYCBsb2dnZXIgdGhhdCBleHRlbmRzIG9mZiBvZiB0aGUgXCJzaW1wbGV3ZWJhdXRoblwiIG5hbWVzcGFjZSBmb3JcbiAqIGNvbnNpc3RlbnQgbmFtaW5nLlxuICpcbiAqIFNlZSBodHRwczovL3d3dy5ucG1qcy5jb20vcGFja2FnZS9kZWJ1ZyBmb3IgaW5mb3JtYXRpb24gb24gaG93IHRvIGNvbnRyb2wgbG9nZ2luZyBvdXRwdXQgd2hlblxuICogdXNpbmcgQHNpbXBsZXdlYmF1dGhuL3NlcnZlclxuICpcbiAqIEV4YW1wbGU6XG4gKlxuICogYGBgXG4gKiBjb25zdCBsb2cgPSBnZXRMb2dnZXIoJ21kcycpO1xuICogbG9nKCdoZWxsbycpOyAvLyBzaW1wbGV3ZWJhdXRobjptZHMgaGVsbG8gKzBtc1xuICogYGBgXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRMb2dnZXIoX25hbWUpIHtcbiAgICAvLyBUaGlzIGlzIGEgbm9vcCBmb3Igbm93IHdoaWxlIEkgc2VhcmNoIGZvciBhIGJldHRlciBkZWJ1ZyBsb2dnZXIgdGVjaG5pcXVlXG4gICAgcmV0dXJuIChfbWVzc2FnZSwgLi4uX3Jlc3QpID0+IHsgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/logging.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js ***!
  \*****************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapX509SignatureAlgToCOSEAlg: () => (/* binding */ mapX509SignatureAlgToCOSEAlg)\n/* harmony export */ });\n/* harmony import */ var _cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n/**\n * Map X.509 signature algorithm OIDs to COSE algorithm IDs\n *\n * - EC2 OIDs: https://oidref.com/1.2.840.10045.4.3\n * - RSA OIDs: https://oidref.com/1.2.840.113549.1.1\n */\nfunction mapX509SignatureAlgToCOSEAlg(signatureAlgorithm) {\n    let alg;\n    if (signatureAlgorithm === '1.2.840.10045.4.3.2') {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES256;\n    }\n    else if (signatureAlgorithm === '1.2.840.10045.4.3.3') {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES384;\n    }\n    else if (signatureAlgorithm === '1.2.840.10045.4.3.4') {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.ES512;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.11') {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS256;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.12') {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS384;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.13') {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS512;\n    }\n    else if (signatureAlgorithm === '1.2.840.113549.1.1.5') {\n        alg = _cose_js__WEBPACK_IMPORTED_MODULE_0__.COSEALG.RS1;\n    }\n    else {\n        throw new Error(`Unable to map X.509 signature algorithm ${signatureAlgorithm} to a COSE algorithm`);\n    }\n    return alg;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9tYXBYNTA5U2lnbmF0dXJlQWxnVG9DT1NFQWxnLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBQ3BDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBLGNBQWMsNkNBQU87QUFDckI7QUFDQTtBQUNBLGNBQWMsNkNBQU87QUFDckI7QUFDQTtBQUNBLGNBQWMsNkNBQU87QUFDckI7QUFDQTtBQUNBLGNBQWMsNkNBQU87QUFDckI7QUFDQTtBQUNBLGNBQWMsNkNBQU87QUFDckI7QUFDQTtBQUNBLGNBQWMsNkNBQU87QUFDckI7QUFDQTtBQUNBLGNBQWMsNkNBQU87QUFDckI7QUFDQTtBQUNBLG1FQUFtRSxvQkFBb0I7QUFDdkY7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9tYXBYNTA5U2lnbmF0dXJlQWxnVG9DT1NFQWxnLmpzPzYxMzQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ09TRUFMRyB9IGZyb20gJy4vY29zZS5qcyc7XG4vKipcbiAqIE1hcCBYLjUwOSBzaWduYXR1cmUgYWxnb3JpdGhtIE9JRHMgdG8gQ09TRSBhbGdvcml0aG0gSURzXG4gKlxuICogLSBFQzIgT0lEczogaHR0cHM6Ly9vaWRyZWYuY29tLzEuMi44NDAuMTAwNDUuNC4zXG4gKiAtIFJTQSBPSURzOiBodHRwczovL29pZHJlZi5jb20vMS4yLjg0MC4xMTM1NDkuMS4xXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtYXBYNTA5U2lnbmF0dXJlQWxnVG9DT1NFQWxnKHNpZ25hdHVyZUFsZ29yaXRobSkge1xuICAgIGxldCBhbGc7XG4gICAgaWYgKHNpZ25hdHVyZUFsZ29yaXRobSA9PT0gJzEuMi44NDAuMTAwNDUuNC4zLjInKSB7XG4gICAgICAgIGFsZyA9IENPU0VBTEcuRVMyNTY7XG4gICAgfVxuICAgIGVsc2UgaWYgKHNpZ25hdHVyZUFsZ29yaXRobSA9PT0gJzEuMi44NDAuMTAwNDUuNC4zLjMnKSB7XG4gICAgICAgIGFsZyA9IENPU0VBTEcuRVMzODQ7XG4gICAgfVxuICAgIGVsc2UgaWYgKHNpZ25hdHVyZUFsZ29yaXRobSA9PT0gJzEuMi44NDAuMTAwNDUuNC4zLjQnKSB7XG4gICAgICAgIGFsZyA9IENPU0VBTEcuRVM1MTI7XG4gICAgfVxuICAgIGVsc2UgaWYgKHNpZ25hdHVyZUFsZ29yaXRobSA9PT0gJzEuMi44NDAuMTEzNTQ5LjEuMS4xMScpIHtcbiAgICAgICAgYWxnID0gQ09TRUFMRy5SUzI1NjtcbiAgICB9XG4gICAgZWxzZSBpZiAoc2lnbmF0dXJlQWxnb3JpdGhtID09PSAnMS4yLjg0MC4xMTM1NDkuMS4xLjEyJykge1xuICAgICAgICBhbGcgPSBDT1NFQUxHLlJTMzg0O1xuICAgIH1cbiAgICBlbHNlIGlmIChzaWduYXR1cmVBbGdvcml0aG0gPT09ICcxLjIuODQwLjExMzU0OS4xLjEuMTMnKSB7XG4gICAgICAgIGFsZyA9IENPU0VBTEcuUlM1MTI7XG4gICAgfVxuICAgIGVsc2UgaWYgKHNpZ25hdHVyZUFsZ29yaXRobSA9PT0gJzEuMi44NDAuMTEzNTQ5LjEuMS41Jykge1xuICAgICAgICBhbGcgPSBDT1NFQUxHLlJTMTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgVW5hYmxlIHRvIG1hcCBYLjUwOSBzaWduYXR1cmUgYWxnb3JpdGhtICR7c2lnbmF0dXJlQWxnb3JpdGhtfSB0byBhIENPU0UgYWxnb3JpdGhtYCk7XG4gICAgfVxuICAgIHJldHVybiBhbGc7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js ***!
  \******************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   matchExpectedRPID: () => (/* binding */ matchExpectedRPID)\n/* harmony export */ });\n/* harmony import */ var _toHash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * Go through each expected RP ID and try to find one that matches. Returns the unhashed RP ID\n * that matched the hash in the response.\n *\n * Raises an `UnexpectedRPIDHash` error if no match is found\n */\nasync function matchExpectedRPID(rpIDHash, expectedRPIDs) {\n    try {\n        const matchedRPID = await Promise.any(expectedRPIDs.map((expected) => {\n            return new Promise((resolve, reject) => {\n                (0,_toHash_js__WEBPACK_IMPORTED_MODULE_0__.toHash)(_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.fromASCIIString(expected)).then((expectedRPIDHash) => {\n                    if (_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.areEqual(rpIDHash, expectedRPIDHash)) {\n                        resolve(expected);\n                    }\n                    else {\n                        reject();\n                    }\n                });\n            });\n        }));\n        return matchedRPID;\n    }\n    catch (err) {\n        const _err = err;\n        // This means no matches were found\n        if (_err.name === 'AggregateError') {\n            throw new UnexpectedRPIDHash();\n        }\n        // An unexpected error occurred\n        throw err;\n    }\n}\nclass UnexpectedRPIDHash extends Error {\n    constructor() {\n        const message = 'Unexpected RP ID hash';\n        super(message);\n        this.name = 'UnexpectedRPIDHash';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9tYXRjaEV4cGVjdGVkUlBJRC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUM7QUFDVTtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixrREFBTSxDQUFDLHdFQUE2QjtBQUNwRCx3QkFBd0IsaUVBQXNCO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2hlbHBlcnMvbWF0Y2hFeHBlY3RlZFJQSUQuanM/MzU1YyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB0b0hhc2ggfSBmcm9tICcuL3RvSGFzaC5qcyc7XG5pbXBvcnQgeyBpc29VaW50OEFycmF5IH0gZnJvbSAnLi9pc28vaW5kZXguanMnO1xuLyoqXG4gKiBHbyB0aHJvdWdoIGVhY2ggZXhwZWN0ZWQgUlAgSUQgYW5kIHRyeSB0byBmaW5kIG9uZSB0aGF0IG1hdGNoZXMuIFJldHVybnMgdGhlIHVuaGFzaGVkIFJQIElEXG4gKiB0aGF0IG1hdGNoZWQgdGhlIGhhc2ggaW4gdGhlIHJlc3BvbnNlLlxuICpcbiAqIFJhaXNlcyBhbiBgVW5leHBlY3RlZFJQSURIYXNoYCBlcnJvciBpZiBubyBtYXRjaCBpcyBmb3VuZFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gbWF0Y2hFeHBlY3RlZFJQSUQocnBJREhhc2gsIGV4cGVjdGVkUlBJRHMpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCBtYXRjaGVkUlBJRCA9IGF3YWl0IFByb21pc2UuYW55KGV4cGVjdGVkUlBJRHMubWFwKChleHBlY3RlZCkgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgICAgICAgICB0b0hhc2goaXNvVWludDhBcnJheS5mcm9tQVNDSUlTdHJpbmcoZXhwZWN0ZWQpKS50aGVuKChleHBlY3RlZFJQSURIYXNoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc29VaW50OEFycmF5LmFyZUVxdWFsKHJwSURIYXNoLCBleHBlY3RlZFJQSURIYXNoKSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZShleHBlY3RlZCk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZWplY3QoKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIG1hdGNoZWRSUElEO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgIGNvbnN0IF9lcnIgPSBlcnI7XG4gICAgICAgIC8vIFRoaXMgbWVhbnMgbm8gbWF0Y2hlcyB3ZXJlIGZvdW5kXG4gICAgICAgIGlmIChfZXJyLm5hbWUgPT09ICdBZ2dyZWdhdGVFcnJvcicpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBVbmV4cGVjdGVkUlBJREhhc2goKTtcbiAgICAgICAgfVxuICAgICAgICAvLyBBbiB1bmV4cGVjdGVkIGVycm9yIG9jY3VycmVkXG4gICAgICAgIHRocm93IGVycjtcbiAgICB9XG59XG5jbGFzcyBVbmV4cGVjdGVkUlBJREhhc2ggZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIGNvbnN0IG1lc3NhZ2UgPSAnVW5leHBlY3RlZCBSUCBJRCBoYXNoJztcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdVbmV4cGVjdGVkUlBJREhhc2gnO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js ***!
  \***********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _parseAuthenticatorDataInternals: () => (/* binding */ _parseAuthenticatorDataInternals),\n/* harmony export */   parseAuthenticatorData: () => (/* binding */ parseAuthenticatorData)\n/* harmony export */ });\n/* harmony import */ var _decodeAuthenticatorExtensions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./decodeAuthenticatorExtensions.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAuthenticatorExtensions.js\");\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * Make sense of the authData buffer contained in an Attestation\n */\nfunction parseAuthenticatorData(authData) {\n    if (authData.byteLength < 37) {\n        throw new Error(`Authenticator data was ${authData.byteLength} bytes, expected at least 37 bytes`);\n    }\n    let pointer = 0;\n    const dataView = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toDataView(authData);\n    const rpIdHash = authData.slice(pointer, pointer += 32);\n    const flagsBuf = authData.slice(pointer, pointer += 1);\n    const flagsInt = flagsBuf[0];\n    // Bit positions can be referenced here:\n    // https://www.w3.org/TR/webauthn-2/#flags\n    const flags = {\n        up: !!(flagsInt & (1 << 0)),\n        uv: !!(flagsInt & (1 << 2)),\n        be: !!(flagsInt & (1 << 3)),\n        bs: !!(flagsInt & (1 << 4)),\n        at: !!(flagsInt & (1 << 6)),\n        ed: !!(flagsInt & (1 << 7)),\n        flagsInt,\n    };\n    const counterBuf = authData.slice(pointer, pointer + 4);\n    const counter = dataView.getUint32(pointer, false);\n    pointer += 4;\n    let aaguid = undefined;\n    let credentialID = undefined;\n    let credentialPublicKey = undefined;\n    if (flags.at) {\n        aaguid = authData.slice(pointer, pointer += 16);\n        const credIDLen = dataView.getUint16(pointer);\n        pointer += 2;\n        credentialID = authData.slice(pointer, pointer += credIDLen);\n        /**\n         * Firefox 117 incorrectly CBOR-encodes authData when EdDSA (-8) is used for the public key.\n         * A CBOR \"Map of 3 items\" (0xa3) should be \"Map of 4 items\" (0xa4), and if we manually adjust\n         * the single byte there's a good chance the authData can be correctly parsed.\n         *\n         * This browser release also incorrectly uses the string labels \"OKP\" and \"Ed25519\" instead of\n         * their integer representations for kty and crv respectively. That's why the COSE public key\n         * in the hex below looks so odd.\n         */\n        // Bytes decode to `{ 1: \"OKP\", 3: -8, -1: \"Ed25519\" }` (it's missing key -2 a.k.a. COSEKEYS.x)\n        const badEdDSACBOR = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.fromHex('a301634f4b500327206745643235353139');\n        const bytesAtCurrentPosition = authData.slice(pointer, pointer + badEdDSACBOR.byteLength);\n        let foundBadCBOR = false;\n        if (_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.areEqual(badEdDSACBOR, bytesAtCurrentPosition)) {\n            // Change the bad CBOR 0xa3 to 0xa4 so that the credential public key can be recognized\n            foundBadCBOR = true;\n            authData[pointer] = 0xa4;\n        }\n        // Decode the next CBOR item in the buffer, then re-encode it back to a Buffer\n        const firstDecoded = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoCBOR.decodeFirst(authData.slice(pointer));\n        const firstEncoded = Uint8Array.from(\n        /**\n         * Casting to `Map` via `as unknown` here because TS doesn't make it possible to define Maps\n         * with discrete keys and properties with known types per pair, and CBOR libs typically parse\n         * CBOR Major Type 5 to `Map` because you can have numbers for keys. A `COSEPublicKey` can be\n         * generalized as \"a Map with numbers for keys and either numbers or bytes for values\" though.\n         * If this presumption falls apart then other parts of verification later on will fail so we\n         * should be safe doing this here.\n         */\n        _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoCBOR.encode(firstDecoded));\n        if (foundBadCBOR) {\n            // Restore the bit we changed so that `authData` is the same as it came in and won't break\n            // signature verification.\n            authData[pointer] = 0xa3;\n        }\n        credentialPublicKey = firstEncoded;\n        pointer += firstEncoded.byteLength;\n    }\n    let extensionsData = undefined;\n    let extensionsDataBuffer = undefined;\n    if (flags.ed) {\n        const firstDecoded = _iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoCBOR.decodeFirst(authData.slice(pointer));\n        extensionsDataBuffer = Uint8Array.from(_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoCBOR.encode(firstDecoded));\n        extensionsData = (0,_decodeAuthenticatorExtensions_js__WEBPACK_IMPORTED_MODULE_0__.decodeAuthenticatorExtensions)(extensionsDataBuffer);\n        pointer += extensionsDataBuffer.byteLength;\n    }\n    // Pointer should be at the end of the authenticator data, otherwise too much data was sent\n    if (authData.byteLength > pointer) {\n        throw new Error('Leftover bytes detected while parsing authenticator data');\n    }\n    return _parseAuthenticatorDataInternals.stubThis({\n        rpIdHash,\n        flagsBuf,\n        flags,\n        counter,\n        counterBuf,\n        aaguid,\n        credentialID,\n        credentialPublicKey,\n        extensionsData,\n        extensionsDataBuffer,\n    });\n}\n// Make it possible to stub the return value during testing\nconst _parseAuthenticatorDataInternals = {\n    stubThis: (value) => value,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9wYXJzZUF1dGhlbnRpY2F0b3JEYXRhLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBb0Y7QUFDNUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLGtEQUFrRCxxQkFBcUI7QUFDdkU7QUFDQTtBQUNBLHFCQUFxQixtRUFBd0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEIsZ0NBQWdDO0FBQzlELDZCQUE2QixnRUFBcUI7QUFDbEQ7QUFDQTtBQUNBLFlBQVksaUVBQXNCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw2QkFBNkIsOERBQW1CO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEseURBQWM7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDZCQUE2Qiw4REFBbUI7QUFDaEQsK0NBQStDLHlEQUFjO0FBQzdELHlCQUF5QixnR0FBNkI7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9wYXJzZUF1dGhlbnRpY2F0b3JEYXRhLmpzPzU4ZWUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVjb2RlQXV0aGVudGljYXRvckV4dGVuc2lvbnMsIH0gZnJvbSAnLi9kZWNvZGVBdXRoZW50aWNhdG9yRXh0ZW5zaW9ucy5qcyc7XG5pbXBvcnQgeyBpc29DQk9SLCBpc29VaW50OEFycmF5IH0gZnJvbSAnLi9pc28vaW5kZXguanMnO1xuLyoqXG4gKiBNYWtlIHNlbnNlIG9mIHRoZSBhdXRoRGF0YSBidWZmZXIgY29udGFpbmVkIGluIGFuIEF0dGVzdGF0aW9uXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUF1dGhlbnRpY2F0b3JEYXRhKGF1dGhEYXRhKSB7XG4gICAgaWYgKGF1dGhEYXRhLmJ5dGVMZW5ndGggPCAzNykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEF1dGhlbnRpY2F0b3IgZGF0YSB3YXMgJHthdXRoRGF0YS5ieXRlTGVuZ3RofSBieXRlcywgZXhwZWN0ZWQgYXQgbGVhc3QgMzcgYnl0ZXNgKTtcbiAgICB9XG4gICAgbGV0IHBvaW50ZXIgPSAwO1xuICAgIGNvbnN0IGRhdGFWaWV3ID0gaXNvVWludDhBcnJheS50b0RhdGFWaWV3KGF1dGhEYXRhKTtcbiAgICBjb25zdCBycElkSGFzaCA9IGF1dGhEYXRhLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gMzIpO1xuICAgIGNvbnN0IGZsYWdzQnVmID0gYXV0aERhdGEuc2xpY2UocG9pbnRlciwgcG9pbnRlciArPSAxKTtcbiAgICBjb25zdCBmbGFnc0ludCA9IGZsYWdzQnVmWzBdO1xuICAgIC8vIEJpdCBwb3NpdGlvbnMgY2FuIGJlIHJlZmVyZW5jZWQgaGVyZTpcbiAgICAvLyBodHRwczovL3d3dy53My5vcmcvVFIvd2ViYXV0aG4tMi8jZmxhZ3NcbiAgICBjb25zdCBmbGFncyA9IHtcbiAgICAgICAgdXA6ICEhKGZsYWdzSW50ICYgKDEgPDwgMCkpLFxuICAgICAgICB1djogISEoZmxhZ3NJbnQgJiAoMSA8PCAyKSksXG4gICAgICAgIGJlOiAhIShmbGFnc0ludCAmICgxIDw8IDMpKSxcbiAgICAgICAgYnM6ICEhKGZsYWdzSW50ICYgKDEgPDwgNCkpLFxuICAgICAgICBhdDogISEoZmxhZ3NJbnQgJiAoMSA8PCA2KSksXG4gICAgICAgIGVkOiAhIShmbGFnc0ludCAmICgxIDw8IDcpKSxcbiAgICAgICAgZmxhZ3NJbnQsXG4gICAgfTtcbiAgICBjb25zdCBjb3VudGVyQnVmID0gYXV0aERhdGEuc2xpY2UocG9pbnRlciwgcG9pbnRlciArIDQpO1xuICAgIGNvbnN0IGNvdW50ZXIgPSBkYXRhVmlldy5nZXRVaW50MzIocG9pbnRlciwgZmFsc2UpO1xuICAgIHBvaW50ZXIgKz0gNDtcbiAgICBsZXQgYWFndWlkID0gdW5kZWZpbmVkO1xuICAgIGxldCBjcmVkZW50aWFsSUQgPSB1bmRlZmluZWQ7XG4gICAgbGV0IGNyZWRlbnRpYWxQdWJsaWNLZXkgPSB1bmRlZmluZWQ7XG4gICAgaWYgKGZsYWdzLmF0KSB7XG4gICAgICAgIGFhZ3VpZCA9IGF1dGhEYXRhLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gMTYpO1xuICAgICAgICBjb25zdCBjcmVkSURMZW4gPSBkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcik7XG4gICAgICAgIHBvaW50ZXIgKz0gMjtcbiAgICAgICAgY3JlZGVudGlhbElEID0gYXV0aERhdGEuc2xpY2UocG9pbnRlciwgcG9pbnRlciArPSBjcmVkSURMZW4pO1xuICAgICAgICAvKipcbiAgICAgICAgICogRmlyZWZveCAxMTcgaW5jb3JyZWN0bHkgQ0JPUi1lbmNvZGVzIGF1dGhEYXRhIHdoZW4gRWREU0EgKC04KSBpcyB1c2VkIGZvciB0aGUgcHVibGljIGtleS5cbiAgICAgICAgICogQSBDQk9SIFwiTWFwIG9mIDMgaXRlbXNcIiAoMHhhMykgc2hvdWxkIGJlIFwiTWFwIG9mIDQgaXRlbXNcIiAoMHhhNCksIGFuZCBpZiB3ZSBtYW51YWxseSBhZGp1c3RcbiAgICAgICAgICogdGhlIHNpbmdsZSBieXRlIHRoZXJlJ3MgYSBnb29kIGNoYW5jZSB0aGUgYXV0aERhdGEgY2FuIGJlIGNvcnJlY3RseSBwYXJzZWQuXG4gICAgICAgICAqXG4gICAgICAgICAqIFRoaXMgYnJvd3NlciByZWxlYXNlIGFsc28gaW5jb3JyZWN0bHkgdXNlcyB0aGUgc3RyaW5nIGxhYmVscyBcIk9LUFwiIGFuZCBcIkVkMjU1MTlcIiBpbnN0ZWFkIG9mXG4gICAgICAgICAqIHRoZWlyIGludGVnZXIgcmVwcmVzZW50YXRpb25zIGZvciBrdHkgYW5kIGNydiByZXNwZWN0aXZlbHkuIFRoYXQncyB3aHkgdGhlIENPU0UgcHVibGljIGtleVxuICAgICAgICAgKiBpbiB0aGUgaGV4IGJlbG93IGxvb2tzIHNvIG9kZC5cbiAgICAgICAgICovXG4gICAgICAgIC8vIEJ5dGVzIGRlY29kZSB0byBgeyAxOiBcIk9LUFwiLCAzOiAtOCwgLTE6IFwiRWQyNTUxOVwiIH1gIChpdCdzIG1pc3Npbmcga2V5IC0yIGEuay5hLiBDT1NFS0VZUy54KVxuICAgICAgICBjb25zdCBiYWRFZERTQUNCT1IgPSBpc29VaW50OEFycmF5LmZyb21IZXgoJ2EzMDE2MzRmNGI1MDAzMjcyMDY3NDU2NDMyMzUzNTMxMzknKTtcbiAgICAgICAgY29uc3QgYnl0ZXNBdEN1cnJlbnRQb3NpdGlvbiA9IGF1dGhEYXRhLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKyBiYWRFZERTQUNCT1IuYnl0ZUxlbmd0aCk7XG4gICAgICAgIGxldCBmb3VuZEJhZENCT1IgPSBmYWxzZTtcbiAgICAgICAgaWYgKGlzb1VpbnQ4QXJyYXkuYXJlRXF1YWwoYmFkRWREU0FDQk9SLCBieXRlc0F0Q3VycmVudFBvc2l0aW9uKSkge1xuICAgICAgICAgICAgLy8gQ2hhbmdlIHRoZSBiYWQgQ0JPUiAweGEzIHRvIDB4YTQgc28gdGhhdCB0aGUgY3JlZGVudGlhbCBwdWJsaWMga2V5IGNhbiBiZSByZWNvZ25pemVkXG4gICAgICAgICAgICBmb3VuZEJhZENCT1IgPSB0cnVlO1xuICAgICAgICAgICAgYXV0aERhdGFbcG9pbnRlcl0gPSAweGE0O1xuICAgICAgICB9XG4gICAgICAgIC8vIERlY29kZSB0aGUgbmV4dCBDQk9SIGl0ZW0gaW4gdGhlIGJ1ZmZlciwgdGhlbiByZS1lbmNvZGUgaXQgYmFjayB0byBhIEJ1ZmZlclxuICAgICAgICBjb25zdCBmaXJzdERlY29kZWQgPSBpc29DQk9SLmRlY29kZUZpcnN0KGF1dGhEYXRhLnNsaWNlKHBvaW50ZXIpKTtcbiAgICAgICAgY29uc3QgZmlyc3RFbmNvZGVkID0gVWludDhBcnJheS5mcm9tKFxuICAgICAgICAvKipcbiAgICAgICAgICogQ2FzdGluZyB0byBgTWFwYCB2aWEgYGFzIHVua25vd25gIGhlcmUgYmVjYXVzZSBUUyBkb2Vzbid0IG1ha2UgaXQgcG9zc2libGUgdG8gZGVmaW5lIE1hcHNcbiAgICAgICAgICogd2l0aCBkaXNjcmV0ZSBrZXlzIGFuZCBwcm9wZXJ0aWVzIHdpdGgga25vd24gdHlwZXMgcGVyIHBhaXIsIGFuZCBDQk9SIGxpYnMgdHlwaWNhbGx5IHBhcnNlXG4gICAgICAgICAqIENCT1IgTWFqb3IgVHlwZSA1IHRvIGBNYXBgIGJlY2F1c2UgeW91IGNhbiBoYXZlIG51bWJlcnMgZm9yIGtleXMuIEEgYENPU0VQdWJsaWNLZXlgIGNhbiBiZVxuICAgICAgICAgKiBnZW5lcmFsaXplZCBhcyBcImEgTWFwIHdpdGggbnVtYmVycyBmb3Iga2V5cyBhbmQgZWl0aGVyIG51bWJlcnMgb3IgYnl0ZXMgZm9yIHZhbHVlc1wiIHRob3VnaC5cbiAgICAgICAgICogSWYgdGhpcyBwcmVzdW1wdGlvbiBmYWxscyBhcGFydCB0aGVuIG90aGVyIHBhcnRzIG9mIHZlcmlmaWNhdGlvbiBsYXRlciBvbiB3aWxsIGZhaWwgc28gd2VcbiAgICAgICAgICogc2hvdWxkIGJlIHNhZmUgZG9pbmcgdGhpcyBoZXJlLlxuICAgICAgICAgKi9cbiAgICAgICAgaXNvQ0JPUi5lbmNvZGUoZmlyc3REZWNvZGVkKSk7XG4gICAgICAgIGlmIChmb3VuZEJhZENCT1IpIHtcbiAgICAgICAgICAgIC8vIFJlc3RvcmUgdGhlIGJpdCB3ZSBjaGFuZ2VkIHNvIHRoYXQgYGF1dGhEYXRhYCBpcyB0aGUgc2FtZSBhcyBpdCBjYW1lIGluIGFuZCB3b24ndCBicmVha1xuICAgICAgICAgICAgLy8gc2lnbmF0dXJlIHZlcmlmaWNhdGlvbi5cbiAgICAgICAgICAgIGF1dGhEYXRhW3BvaW50ZXJdID0gMHhhMztcbiAgICAgICAgfVxuICAgICAgICBjcmVkZW50aWFsUHVibGljS2V5ID0gZmlyc3RFbmNvZGVkO1xuICAgICAgICBwb2ludGVyICs9IGZpcnN0RW5jb2RlZC5ieXRlTGVuZ3RoO1xuICAgIH1cbiAgICBsZXQgZXh0ZW5zaW9uc0RhdGEgPSB1bmRlZmluZWQ7XG4gICAgbGV0IGV4dGVuc2lvbnNEYXRhQnVmZmVyID0gdW5kZWZpbmVkO1xuICAgIGlmIChmbGFncy5lZCkge1xuICAgICAgICBjb25zdCBmaXJzdERlY29kZWQgPSBpc29DQk9SLmRlY29kZUZpcnN0KGF1dGhEYXRhLnNsaWNlKHBvaW50ZXIpKTtcbiAgICAgICAgZXh0ZW5zaW9uc0RhdGFCdWZmZXIgPSBVaW50OEFycmF5LmZyb20oaXNvQ0JPUi5lbmNvZGUoZmlyc3REZWNvZGVkKSk7XG4gICAgICAgIGV4dGVuc2lvbnNEYXRhID0gZGVjb2RlQXV0aGVudGljYXRvckV4dGVuc2lvbnMoZXh0ZW5zaW9uc0RhdGFCdWZmZXIpO1xuICAgICAgICBwb2ludGVyICs9IGV4dGVuc2lvbnNEYXRhQnVmZmVyLmJ5dGVMZW5ndGg7XG4gICAgfVxuICAgIC8vIFBvaW50ZXIgc2hvdWxkIGJlIGF0IHRoZSBlbmQgb2YgdGhlIGF1dGhlbnRpY2F0b3IgZGF0YSwgb3RoZXJ3aXNlIHRvbyBtdWNoIGRhdGEgd2FzIHNlbnRcbiAgICBpZiAoYXV0aERhdGEuYnl0ZUxlbmd0aCA+IHBvaW50ZXIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdMZWZ0b3ZlciBieXRlcyBkZXRlY3RlZCB3aGlsZSBwYXJzaW5nIGF1dGhlbnRpY2F0b3IgZGF0YScpO1xuICAgIH1cbiAgICByZXR1cm4gX3BhcnNlQXV0aGVudGljYXRvckRhdGFJbnRlcm5hbHMuc3R1YlRoaXMoe1xuICAgICAgICBycElkSGFzaCxcbiAgICAgICAgZmxhZ3NCdWYsXG4gICAgICAgIGZsYWdzLFxuICAgICAgICBjb3VudGVyLFxuICAgICAgICBjb3VudGVyQnVmLFxuICAgICAgICBhYWd1aWQsXG4gICAgICAgIGNyZWRlbnRpYWxJRCxcbiAgICAgICAgY3JlZGVudGlhbFB1YmxpY0tleSxcbiAgICAgICAgZXh0ZW5zaW9uc0RhdGEsXG4gICAgICAgIGV4dGVuc2lvbnNEYXRhQnVmZmVyLFxuICAgIH0pO1xufVxuLy8gTWFrZSBpdCBwb3NzaWJsZSB0byBzdHViIHRoZSByZXR1cm4gdmFsdWUgZHVyaW5nIHRlc3RpbmdcbmV4cG9ydCBjb25zdCBfcGFyc2VBdXRoZW50aWNhdG9yRGF0YUludGVybmFscyA9IHtcbiAgICBzdHViVGhpczogKHZhbHVlKSA9PiB2YWx1ZSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   InvalidBackupFlags: () => (/* binding */ InvalidBackupFlags),\n/* harmony export */   parseBackupFlags: () => (/* binding */ parseBackupFlags)\n/* harmony export */ });\n/**\n * Make sense of Bits 3 and 4 in authenticator indicating:\n *\n * - Whether the credential can be used on multiple devices\n * - Whether the credential is backed up or not\n *\n * Invalid configurations will raise an `Error`\n */\nfunction parseBackupFlags({ be, bs }) {\n    const credentialBackedUp = bs;\n    let credentialDeviceType = 'singleDevice';\n    if (be) {\n        credentialDeviceType = 'multiDevice';\n    }\n    if (credentialDeviceType === 'singleDevice' && credentialBackedUp) {\n        throw new InvalidBackupFlags('Single-device credential indicated that it was backed up, which should be impossible.');\n    }\n    return { credentialDeviceType, credentialBackedUp };\n}\nclass InvalidBackupFlags extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'InvalidBackupFlags';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy9wYXJzZUJhY2t1cEZsYWdzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDRCQUE0QixRQUFRO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL3BhcnNlQmFja3VwRmxhZ3MuanM/YTliNCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIE1ha2Ugc2Vuc2Ugb2YgQml0cyAzIGFuZCA0IGluIGF1dGhlbnRpY2F0b3IgaW5kaWNhdGluZzpcbiAqXG4gKiAtIFdoZXRoZXIgdGhlIGNyZWRlbnRpYWwgY2FuIGJlIHVzZWQgb24gbXVsdGlwbGUgZGV2aWNlc1xuICogLSBXaGV0aGVyIHRoZSBjcmVkZW50aWFsIGlzIGJhY2tlZCB1cCBvciBub3RcbiAqXG4gKiBJbnZhbGlkIGNvbmZpZ3VyYXRpb25zIHdpbGwgcmFpc2UgYW4gYEVycm9yYFxuICovXG5leHBvcnQgZnVuY3Rpb24gcGFyc2VCYWNrdXBGbGFncyh7IGJlLCBicyB9KSB7XG4gICAgY29uc3QgY3JlZGVudGlhbEJhY2tlZFVwID0gYnM7XG4gICAgbGV0IGNyZWRlbnRpYWxEZXZpY2VUeXBlID0gJ3NpbmdsZURldmljZSc7XG4gICAgaWYgKGJlKSB7XG4gICAgICAgIGNyZWRlbnRpYWxEZXZpY2VUeXBlID0gJ211bHRpRGV2aWNlJztcbiAgICB9XG4gICAgaWYgKGNyZWRlbnRpYWxEZXZpY2VUeXBlID09PSAnc2luZ2xlRGV2aWNlJyAmJiBjcmVkZW50aWFsQmFja2VkVXApIHtcbiAgICAgICAgdGhyb3cgbmV3IEludmFsaWRCYWNrdXBGbGFncygnU2luZ2xlLWRldmljZSBjcmVkZW50aWFsIGluZGljYXRlZCB0aGF0IGl0IHdhcyBiYWNrZWQgdXAsIHdoaWNoIHNob3VsZCBiZSBpbXBvc3NpYmxlLicpO1xuICAgIH1cbiAgICByZXR1cm4geyBjcmVkZW50aWFsRGV2aWNlVHlwZSwgY3JlZGVudGlhbEJhY2tlZFVwIH07XG59XG5leHBvcnQgY2xhc3MgSW52YWxpZEJhY2t1cEZsYWdzIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9ICdJbnZhbGlkQmFja3VwRmxhZ3MnO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/toHash.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   toHash: () => (/* binding */ toHash)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Returns hash digest of the given data, using the given algorithm when provided. Defaults to using\n * SHA-256.\n */\nfunction toHash(data, algorithm = -7) {\n    if (typeof data === 'string') {\n        data = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoUint8Array.fromUTF8String(data);\n    }\n    const digest = _iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCrypto.digest(data, algorithm);\n    return digest;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy90b0hhc2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMEQ7QUFDMUQ7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EsZUFBZSx1RUFBNEI7QUFDM0M7QUFDQSxtQkFBbUIsMkRBQWdCO0FBQ25DO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9oZWxwZXJzL3RvSGFzaC5qcz85ZDE0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzb0NyeXB0bywgaXNvVWludDhBcnJheSB9IGZyb20gJy4vaXNvL2luZGV4LmpzJztcbi8qKlxuICogUmV0dXJucyBoYXNoIGRpZ2VzdCBvZiB0aGUgZ2l2ZW4gZGF0YSwgdXNpbmcgdGhlIGdpdmVuIGFsZ29yaXRobSB3aGVuIHByb3ZpZGVkLiBEZWZhdWx0cyB0byB1c2luZ1xuICogU0hBLTI1Ni5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHRvSGFzaChkYXRhLCBhbGdvcml0aG0gPSAtNykge1xuICAgIGlmICh0eXBlb2YgZGF0YSA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgZGF0YSA9IGlzb1VpbnQ4QXJyYXkuZnJvbVVURjhTdHJpbmcoZGF0YSk7XG4gICAgfVxuICAgIGNvbnN0IGRpZ2VzdCA9IGlzb0NyeXB0by5kaWdlc3QoZGF0YSwgYWxnb3JpdGhtKTtcbiAgICByZXR1cm4gZGlnZXN0O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   validateCertificatePath: () => (/* binding */ validateCertificatePath)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _isCertRevoked_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./isCertRevoked.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/isCertRevoked.js\");\n/* harmony import */ var _verifySignature_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./mapX509SignatureAlgToCOSEAlg.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/mapX509SignatureAlgToCOSEAlg.js\");\n/* harmony import */ var _getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./convertPEMToBytes.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js\");\n\n\n\n\n\n\n/**\n * Traverse an array of PEM certificates and ensure they form a proper chain\n * @param certificates Typically the result of `x5c.map(convertASN1toPEM)`\n * @param rootCertificates Possible root certificates to complete the path\n */\nasync function validateCertificatePath(certificates, rootCertificates = []) {\n    if (rootCertificates.length === 0) {\n        // We have no root certs with which to create a full path, so skip path validation\n        // TODO: Is this going to be acceptable default behavior??\n        return true;\n    }\n    let invalidSubjectAndIssuerError = false;\n    let certificateNotYetValidOrExpiredErrorMessage = undefined;\n    for (const rootCert of rootCertificates) {\n        try {\n            const certsWithRoot = certificates.concat([rootCert]);\n            await _validatePath(certsWithRoot);\n            // If we successfully validated a path then there's no need to continue. Reset any existing\n            // errors that were thrown by earlier root certificates\n            invalidSubjectAndIssuerError = false;\n            certificateNotYetValidOrExpiredErrorMessage = undefined;\n            break;\n        }\n        catch (err) {\n            if (err instanceof InvalidSubjectAndIssuer) {\n                invalidSubjectAndIssuerError = true;\n            }\n            else if (err instanceof CertificateNotYetValidOrExpired) {\n                certificateNotYetValidOrExpiredErrorMessage = err.message;\n            }\n            else {\n                throw err;\n            }\n        }\n    }\n    // We tried multiple root certs and none of them worked\n    if (invalidSubjectAndIssuerError) {\n        throw new InvalidSubjectAndIssuer();\n    }\n    else if (certificateNotYetValidOrExpiredErrorMessage) {\n        throw new CertificateNotYetValidOrExpired(certificateNotYetValidOrExpiredErrorMessage);\n    }\n    return true;\n}\nasync function _validatePath(certificates) {\n    if (new Set(certificates).size !== certificates.length) {\n        throw new Error('Invalid certificate path: found duplicate certificates');\n    }\n    // From leaf to root, make sure each cert is issued by the next certificate in the chain\n    for (let i = 0; i < certificates.length; i += 1) {\n        const subjectPem = certificates[i];\n        const isLeafCert = i === 0;\n        const isRootCert = i + 1 >= certificates.length;\n        let issuerPem = '';\n        if (isRootCert) {\n            issuerPem = subjectPem;\n        }\n        else {\n            issuerPem = certificates[i + 1];\n        }\n        const subjectInfo = (0,_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_4__.getCertificateInfo)((0,_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__.convertPEMToBytes)(subjectPem));\n        const issuerInfo = (0,_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_4__.getCertificateInfo)((0,_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__.convertPEMToBytes)(issuerPem));\n        const x509Subject = subjectInfo.parsedCertificate;\n        // Check for certificate revocation\n        const subjectCertRevoked = await (0,_isCertRevoked_js__WEBPACK_IMPORTED_MODULE_1__.isCertRevoked)(x509Subject);\n        if (subjectCertRevoked) {\n            throw new Error(`Found revoked certificate in certificate path`);\n        }\n        // Check that intermediate certificate is within its valid time window\n        const { notBefore, notAfter } = issuerInfo;\n        const now = new Date(Date.now());\n        if (notBefore > now || notAfter < now) {\n            if (isLeafCert) {\n                throw new CertificateNotYetValidOrExpired(`Leaf certificate is not yet valid or expired: ${issuerPem}`);\n            }\n            else if (isRootCert) {\n                throw new CertificateNotYetValidOrExpired(`Root certificate is not yet valid or expired: ${issuerPem}`);\n            }\n            else {\n                throw new CertificateNotYetValidOrExpired(`Intermediate certificate is not yet valid or expired: ${issuerPem}`);\n            }\n        }\n        if (subjectInfo.issuer.combined !== issuerInfo.subject.combined) {\n            throw new InvalidSubjectAndIssuer();\n        }\n        // Verify the subject certificate's signature with the issuer cert's public key\n        const data = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnSerializer.serialize(x509Subject.tbsCertificate);\n        const signature = x509Subject.signatureValue;\n        const signatureAlgorithm = (0,_mapX509SignatureAlgToCOSEAlg_js__WEBPACK_IMPORTED_MODULE_3__.mapX509SignatureAlgToCOSEAlg)(x509Subject.signatureAlgorithm.algorithm);\n        const issuerCertBytes = (0,_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__.convertPEMToBytes)(issuerPem);\n        const verified = await (0,_verifySignature_js__WEBPACK_IMPORTED_MODULE_2__.verifySignature)({\n            data: new Uint8Array(data),\n            signature: new Uint8Array(signature),\n            x509Certificate: issuerCertBytes,\n            hashAlgorithm: signatureAlgorithm,\n        });\n        if (!verified) {\n            throw new Error('Invalid certificate path: invalid signature');\n        }\n    }\n    return true;\n}\n// Custom errors to help pass on certain errors\nclass InvalidSubjectAndIssuer extends Error {\n    constructor() {\n        const message = 'Subject issuer did not match issuer subject';\n        super(message);\n        this.name = 'InvalidSubjectAndIssuer';\n    }\n}\nclass CertificateNotYetValidOrExpired extends Error {\n    constructor(message) {\n        super(message);\n        this.name = 'CertificateNotYetValidOrExpired';\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _verifySignatureInternals: () => (/* binding */ _verifySignatureInternals),\n/* harmony export */   verifySignature: () => (/* binding */ verifySignature)\n/* harmony export */ });\n/* harmony import */ var _iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _convertX509PublicKeyToCOSE_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./convertX509PublicKeyToCOSE.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js\");\n\n\n\n/**\n * Verify an authenticator's signature\n */\nfunction verifySignature(opts) {\n    const { signature, data, credentialPublicKey, x509Certificate, hashAlgorithm, } = opts;\n    if (!x509Certificate && !credentialPublicKey) {\n        throw new Error('Must declare either \"leafCert\" or \"credentialPublicKey\"');\n    }\n    if (x509Certificate && credentialPublicKey) {\n        throw new Error('Must not declare both \"leafCert\" and \"credentialPublicKey\"');\n    }\n    let cosePublicKey = new Map();\n    if (credentialPublicKey) {\n        cosePublicKey = (0,_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_1__.decodeCredentialPublicKey)(credentialPublicKey);\n    }\n    else if (x509Certificate) {\n        cosePublicKey = (0,_convertX509PublicKeyToCOSE_js__WEBPACK_IMPORTED_MODULE_2__.convertX509PublicKeyToCOSE)(x509Certificate);\n    }\n    return _verifySignatureInternals.stubThis(_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoCrypto.verify({\n        cosePublicKey,\n        signature,\n        data,\n        shaHashOverride: hashAlgorithm,\n    }));\n}\n// Make it possible to stub the return value during testing\nconst _verifySignatureInternals = {\n    stubThis: (value) => value,\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy92ZXJpZnlTaWduYXR1cmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMkM7QUFDZ0M7QUFDRTtBQUM3RTtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksd0VBQXdFO0FBQ3BGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0Isd0ZBQXlCO0FBQ2pEO0FBQ0E7QUFDQSx3QkFBd0IsMEZBQTBCO0FBQ2xEO0FBQ0EsOENBQThDLDJEQUFnQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ087QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaGVscGVycy92ZXJpZnlTaWduYXR1cmUuanM/MDEyNiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc29DcnlwdG8gfSBmcm9tICcuL2lzby9pbmRleC5qcyc7XG5pbXBvcnQgeyBkZWNvZGVDcmVkZW50aWFsUHVibGljS2V5IH0gZnJvbSAnLi9kZWNvZGVDcmVkZW50aWFsUHVibGljS2V5LmpzJztcbmltcG9ydCB7IGNvbnZlcnRYNTA5UHVibGljS2V5VG9DT1NFIH0gZnJvbSAnLi9jb252ZXJ0WDUwOVB1YmxpY0tleVRvQ09TRS5qcyc7XG4vKipcbiAqIFZlcmlmeSBhbiBhdXRoZW50aWNhdG9yJ3Mgc2lnbmF0dXJlXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB2ZXJpZnlTaWduYXR1cmUob3B0cykge1xuICAgIGNvbnN0IHsgc2lnbmF0dXJlLCBkYXRhLCBjcmVkZW50aWFsUHVibGljS2V5LCB4NTA5Q2VydGlmaWNhdGUsIGhhc2hBbGdvcml0aG0sIH0gPSBvcHRzO1xuICAgIGlmICgheDUwOUNlcnRpZmljYXRlICYmICFjcmVkZW50aWFsUHVibGljS2V5KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTXVzdCBkZWNsYXJlIGVpdGhlciBcImxlYWZDZXJ0XCIgb3IgXCJjcmVkZW50aWFsUHVibGljS2V5XCInKTtcbiAgICB9XG4gICAgaWYgKHg1MDlDZXJ0aWZpY2F0ZSAmJiBjcmVkZW50aWFsUHVibGljS2V5KSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTXVzdCBub3QgZGVjbGFyZSBib3RoIFwibGVhZkNlcnRcIiBhbmQgXCJjcmVkZW50aWFsUHVibGljS2V5XCInKTtcbiAgICB9XG4gICAgbGV0IGNvc2VQdWJsaWNLZXkgPSBuZXcgTWFwKCk7XG4gICAgaWYgKGNyZWRlbnRpYWxQdWJsaWNLZXkpIHtcbiAgICAgICAgY29zZVB1YmxpY0tleSA9IGRlY29kZUNyZWRlbnRpYWxQdWJsaWNLZXkoY3JlZGVudGlhbFB1YmxpY0tleSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHg1MDlDZXJ0aWZpY2F0ZSkge1xuICAgICAgICBjb3NlUHVibGljS2V5ID0gY29udmVydFg1MDlQdWJsaWNLZXlUb0NPU0UoeDUwOUNlcnRpZmljYXRlKTtcbiAgICB9XG4gICAgcmV0dXJuIF92ZXJpZnlTaWduYXR1cmVJbnRlcm5hbHMuc3R1YlRoaXMoaXNvQ3J5cHRvLnZlcmlmeSh7XG4gICAgICAgIGNvc2VQdWJsaWNLZXksXG4gICAgICAgIHNpZ25hdHVyZSxcbiAgICAgICAgZGF0YSxcbiAgICAgICAgc2hhSGFzaE92ZXJyaWRlOiBoYXNoQWxnb3JpdGhtLFxuICAgIH0pKTtcbn1cbi8vIE1ha2UgaXQgcG9zc2libGUgdG8gc3R1YiB0aGUgcmV0dXJuIHZhbHVlIGR1cmluZyB0ZXN0aW5nXG5leHBvcnQgY29uc3QgX3ZlcmlmeVNpZ25hdHVyZUludGVybmFscyA9IHtcbiAgICBzdHViVGhpczogKHZhbHVlKSA9PiB2YWx1ZSxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/index.js ***!
  \**********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MetadataService: () => (/* reexport safe */ _services_metadataService_js__WEBPACK_IMPORTED_MODULE_4__.MetadataService),\n/* harmony export */   SettingsService: () => (/* reexport safe */ _services_settingsService_js__WEBPACK_IMPORTED_MODULE_5__.SettingsService),\n/* harmony export */   generateAuthenticationOptions: () => (/* reexport safe */ _authentication_generateAuthenticationOptions_js__WEBPACK_IMPORTED_MODULE_2__.generateAuthenticationOptions),\n/* harmony export */   generateRegistrationOptions: () => (/* reexport safe */ _registration_generateRegistrationOptions_js__WEBPACK_IMPORTED_MODULE_0__.generateRegistrationOptions),\n/* harmony export */   verifyAuthenticationResponse: () => (/* reexport safe */ _authentication_verifyAuthenticationResponse_js__WEBPACK_IMPORTED_MODULE_3__.verifyAuthenticationResponse),\n/* harmony export */   verifyRegistrationResponse: () => (/* reexport safe */ _registration_verifyRegistrationResponse_js__WEBPACK_IMPORTED_MODULE_1__.verifyRegistrationResponse)\n/* harmony export */ });\n/* harmony import */ var _registration_generateRegistrationOptions_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./registration/generateRegistrationOptions.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js\");\n/* harmony import */ var _registration_verifyRegistrationResponse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./registration/verifyRegistrationResponse.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifyRegistrationResponse.js\");\n/* harmony import */ var _authentication_generateAuthenticationOptions_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./authentication/generateAuthenticationOptions.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/generateAuthenticationOptions.js\");\n/* harmony import */ var _authentication_verifyAuthenticationResponse_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./authentication/verifyAuthenticationResponse.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/authentication/verifyAuthenticationResponse.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _services_settingsService_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./services/settingsService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js\");\n/**\n * @packageDocumentation\n * @module @simplewebauthn/server\n */\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDNEY7QUFDRjtBQUNRO0FBQ0Y7QUFDaEM7QUFDQTtBQUNtRyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL2luZGV4LmpzP2I2N2UiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAcGFja2FnZURvY3VtZW50YXRpb25cbiAqIEBtb2R1bGUgQHNpbXBsZXdlYmF1dGhuL3NlcnZlclxuICovXG5pbXBvcnQgeyBnZW5lcmF0ZVJlZ2lzdHJhdGlvbk9wdGlvbnMgfSBmcm9tICcuL3JlZ2lzdHJhdGlvbi9nZW5lcmF0ZVJlZ2lzdHJhdGlvbk9wdGlvbnMuanMnO1xuaW1wb3J0IHsgdmVyaWZ5UmVnaXN0cmF0aW9uUmVzcG9uc2UgfSBmcm9tICcuL3JlZ2lzdHJhdGlvbi92ZXJpZnlSZWdpc3RyYXRpb25SZXNwb25zZS5qcyc7XG5pbXBvcnQgeyBnZW5lcmF0ZUF1dGhlbnRpY2F0aW9uT3B0aW9ucyB9IGZyb20gJy4vYXV0aGVudGljYXRpb24vZ2VuZXJhdGVBdXRoZW50aWNhdGlvbk9wdGlvbnMuanMnO1xuaW1wb3J0IHsgdmVyaWZ5QXV0aGVudGljYXRpb25SZXNwb25zZSB9IGZyb20gJy4vYXV0aGVudGljYXRpb24vdmVyaWZ5QXV0aGVudGljYXRpb25SZXNwb25zZS5qcyc7XG5pbXBvcnQgeyBNZXRhZGF0YVNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL21ldGFkYXRhU2VydmljZS5qcyc7XG5pbXBvcnQgeyBTZXR0aW5nc1NlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL3NldHRpbmdzU2VydmljZS5qcyc7XG5leHBvcnQgeyBnZW5lcmF0ZUF1dGhlbnRpY2F0aW9uT3B0aW9ucywgZ2VuZXJhdGVSZWdpc3RyYXRpb25PcHRpb25zLCBNZXRhZGF0YVNlcnZpY2UsIFNldHRpbmdzU2VydmljZSwgdmVyaWZ5QXV0aGVudGljYXRpb25SZXNwb25zZSwgdmVyaWZ5UmVnaXN0cmF0aW9uUmVzcG9uc2UsIH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/parseJWT.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/metadata/parseJWT.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseJWT: () => (/* binding */ parseJWT)\n/* harmony export */ });\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n/**\n * Process a JWT into Javascript-friendly data structures\n */\nfunction parseJWT(jwt) {\n    const parts = jwt.split('.');\n    return [\n        JSON.parse(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toString(parts[0])),\n        JSON.parse(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_0__.isoBase64URL.toString(parts[1])),\n        parts[2],\n    ];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vbWV0YWRhdGEvcGFyc2VKV1QuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBdUQ7QUFDdkQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0EsbUJBQW1CLHdFQUFxQjtBQUN4QyxtQkFBbUIsd0VBQXFCO0FBQ3hDO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL21ldGFkYXRhL3BhcnNlSldULmpzP2FjM2EiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgaXNvQmFzZTY0VVJMIH0gZnJvbSAnLi4vaGVscGVycy9pc28vaW5kZXguanMnO1xuLyoqXG4gKiBQcm9jZXNzIGEgSldUIGludG8gSmF2YXNjcmlwdC1mcmllbmRseSBkYXRhIHN0cnVjdHVyZXNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIHBhcnNlSldUKGp3dCkge1xuICAgIGNvbnN0IHBhcnRzID0gand0LnNwbGl0KCcuJyk7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgSlNPTi5wYXJzZShpc29CYXNlNjRVUkwudG9TdHJpbmcocGFydHNbMF0pKSxcbiAgICAgICAgSlNPTi5wYXJzZShpc29CYXNlNjRVUkwudG9TdHJpbmcocGFydHNbMV0pKSxcbiAgICAgICAgcGFydHNbMl0sXG4gICAgXTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/parseJWT.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js ***!
  \*******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   algSignToCOSEInfoMap: () => (/* binding */ algSignToCOSEInfoMap),\n/* harmony export */   verifyAttestationWithMetadata: () => (/* binding */ verifyAttestationWithMetadata)\n/* harmony export */ });\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n\n\n\n/**\n * Match properties of the authenticator's attestation statement against expected values as\n * registered with the FIDO Alliance Metadata Service\n */\nasync function verifyAttestationWithMetadata({ statement, credentialPublicKey, x5c, attestationStatementAlg, }) {\n    const { authenticationAlgorithms, authenticatorGetInfo, attestationRootCertificates, } = statement;\n    // Make sure the alg in the attestation statement matches one of the ones specified in metadata\n    const keypairCOSEAlgs = new Set();\n    authenticationAlgorithms.forEach((algSign) => {\n        // Map algSign string to { kty, alg, crv }\n        const algSignCOSEINFO = algSignToCOSEInfoMap[algSign];\n        // Keeping this statement here just in case MDS returns something unexpected\n        if (algSignCOSEINFO) {\n            keypairCOSEAlgs.add(algSignCOSEINFO);\n        }\n    });\n    // Extract the public key's COSE info for comparison\n    const decodedPublicKey = (0,_helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_2__.decodeCredentialPublicKey)(credentialPublicKey);\n    const kty = decodedPublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKEYS.kty);\n    const alg = decodedPublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKEYS.alg);\n    if (!kty) {\n        throw new Error('Credential public key was missing kty');\n    }\n    if (!alg) {\n        throw new Error('Credential public key was missing alg');\n    }\n    if (!kty) {\n        throw new Error('Credential public key was missing kty');\n    }\n    // Assume everything is a number because these values should be\n    const publicKeyCOSEInfo = { kty, alg };\n    if ((0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.isCOSEPublicKeyEC2)(decodedPublicKey)) {\n        const crv = decodedPublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKEYS.crv);\n        publicKeyCOSEInfo.crv = crv;\n    }\n    /**\n     * Attempt to match the credential public key's algorithm to one specified in the device's\n     * metadata\n     */\n    let foundMatch = false;\n    for (const keypairAlg of keypairCOSEAlgs) {\n        // Make sure algorithm and key type match\n        if (keypairAlg.alg === publicKeyCOSEInfo.alg &&\n            keypairAlg.kty === publicKeyCOSEInfo.kty) {\n            // If not an RSA keypair then make sure curve numbers match too\n            if ((keypairAlg.kty === _helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKTY.EC2 || keypairAlg.kty === _helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKTY.OKP) &&\n                keypairAlg.crv === publicKeyCOSEInfo.crv) {\n                foundMatch = true;\n            }\n            else {\n                // We've matched an RSA public key's properties\n                foundMatch = true;\n            }\n        }\n        if (foundMatch) {\n            break;\n        }\n    }\n    // Make sure the public key is one of the allowed algorithms\n    if (!foundMatch) {\n        /**\n         * Craft some useful error output from the MDS algorithms\n         *\n         * Example:\n         *\n         * ```\n         * [\n         *   'rsassa_pss_sha256_raw' (COSE info: { kty: 3, alg: -37 }),\n         *   'secp256k1_ecdsa_sha256_raw' (COSE info: { kty: 2, alg: -47, crv: 8 })\n         * ]\n         * ```\n         */\n        const debugMDSAlgs = authenticationAlgorithms.map((algSign) => `'${algSign}' (COSE info: ${stringifyCOSEInfo(algSignToCOSEInfoMap[algSign])})`);\n        const strMDSAlgs = JSON.stringify(debugMDSAlgs, null, 2).replace(/\"/g, '');\n        /**\n         * Construct useful error output about the public key\n         */\n        const strPubKeyAlg = stringifyCOSEInfo(publicKeyCOSEInfo);\n        throw new Error(`Public key parameters ${strPubKeyAlg} did not match any of the following metadata algorithms:\\n${strMDSAlgs}`);\n    }\n    /**\n     * Confirm the attestation statement's algorithm is one supported according to metadata\n     */\n    if (attestationStatementAlg !== undefined &&\n        authenticatorGetInfo?.algorithms !== undefined) {\n        const getInfoAlgs = authenticatorGetInfo.algorithms.map((_alg) => _alg.alg);\n        if (getInfoAlgs.indexOf(attestationStatementAlg) < 0) {\n            throw new Error(`Attestation statement alg ${attestationStatementAlg} did not match one of ${getInfoAlgs}`);\n        }\n    }\n    // Prepare to check the certificate chain\n    const authenticatorCerts = x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__.convertCertBufferToPEM);\n    const statementRootCerts = attestationRootCertificates.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__.convertCertBufferToPEM);\n    /**\n     * If an authenticator returns exactly one certificate in its x5c, and that cert is found in the\n     * metadata statement then the authenticator is \"self-referencing\". In this case we forego\n     * certificate chain validation.\n     */\n    let authenticatorIsSelfReferencing = false;\n    if (authenticatorCerts.length === 1 &&\n        statementRootCerts.indexOf(authenticatorCerts[0]) >= 0) {\n        authenticatorIsSelfReferencing = true;\n    }\n    if (!authenticatorIsSelfReferencing) {\n        try {\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_1__.validateCertificatePath)(authenticatorCerts, statementRootCerts);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`Could not validate certificate path with any metadata root certificates: ${_err.message}`);\n        }\n    }\n    return true;\n}\n/**\n * Convert ALG_SIGN values to COSE info\n *\n * Values pulled from `ALG_KEY_COSE` definitions in the FIDO Registry of Predefined Values\n *\n * https://fidoalliance.org/specs/common-specs/fido-registry-v2.2-ps-20220523.html#authentication-algorithms\n */\nconst algSignToCOSEInfoMap = {\n    secp256r1_ecdsa_sha256_raw: { kty: 2, alg: -7, crv: 1 },\n    secp256r1_ecdsa_sha256_der: { kty: 2, alg: -7, crv: 1 },\n    rsassa_pss_sha256_raw: { kty: 3, alg: -37 },\n    rsassa_pss_sha256_der: { kty: 3, alg: -37 },\n    secp256k1_ecdsa_sha256_raw: { kty: 2, alg: -47, crv: 8 },\n    secp256k1_ecdsa_sha256_der: { kty: 2, alg: -47, crv: 8 },\n    rsassa_pss_sha384_raw: { kty: 3, alg: -38 },\n    rsassa_pkcsv15_sha256_raw: { kty: 3, alg: -257 },\n    rsassa_pkcsv15_sha384_raw: { kty: 3, alg: -258 },\n    rsassa_pkcsv15_sha512_raw: { kty: 3, alg: -259 },\n    rsassa_pkcsv15_sha1_raw: { kty: 3, alg: -65535 },\n    secp384r1_ecdsa_sha384_raw: { kty: 2, alg: -35, crv: 2 },\n    secp512r1_ecdsa_sha256_raw: { kty: 2, alg: -36, crv: 3 },\n    ed25519_eddsa_sha512_raw: { kty: 1, alg: -8, crv: 6 },\n};\n/**\n * A helper to format COSEInfo a little nicer than we can achieve with JSON.stringify()\n *\n * Input: `{ \"kty\": 3, \"alg\": -257 }`\n *\n * Output: `\"{ kty: 3, alg: -257 }\"`\n */\nfunction stringifyCOSEInfo(info) {\n    const { kty, alg, crv } = info;\n    let toReturn = '';\n    if (kty !== _helpers_cose_js__WEBPACK_IMPORTED_MODULE_3__.COSEKTY.RSA) {\n        toReturn = `{ kty: ${kty}, alg: ${alg}, crv: ${crv} }`;\n    }\n    else {\n        toReturn = `{ kty: ${kty}, alg: ${alg} }`;\n    }\n    return toReturn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyJWT.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/metadata/verifyJWT.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyJWT: () => (/* binding */ verifyJWT)\n/* harmony export */ });\n/* harmony import */ var _helpers_convertX509PublicKeyToCOSE_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/convertX509PublicKeyToCOSE.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertX509PublicKeyToCOSE.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_iso_isoCrypto_verifyEC2_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/iso/isoCrypto/verifyEC2.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyEC2.js\");\n/* harmony import */ var _helpers_iso_isoCrypto_verifyRSA_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/iso/isoCrypto/verifyRSA.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/isoCrypto/verifyRSA.js\");\n\n\n\n\n\n/**\n * Lightweight verification for FIDO MDS JWTs. Supports use of EC2 and RSA.\n *\n * If this ever needs to support more JWS algorithms, here's the list of them:\n *\n * https://www.rfc-editor.org/rfc/rfc7518.html#section-3.1\n *\n * (Pulled from https://www.rfc-editor.org/rfc/rfc7515#section-4.1.1)\n */\nfunction verifyJWT(jwt, leafCert) {\n    const [header, payload, signature] = jwt.split('.');\n    const certCOSE = (0,_helpers_convertX509PublicKeyToCOSE_js__WEBPACK_IMPORTED_MODULE_0__.convertX509PublicKeyToCOSE)(leafCert);\n    const data = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.fromUTF8String(`${header}.${payload}`);\n    const signatureBytes = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoBase64URL.toBuffer(signature);\n    if ((0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEPublicKeyEC2)(certCOSE)) {\n        return (0,_helpers_iso_isoCrypto_verifyEC2_js__WEBPACK_IMPORTED_MODULE_3__.verifyEC2)({\n            data,\n            signature: signatureBytes,\n            cosePublicKey: certCOSE,\n            shaHashOverride: _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEALG.ES256,\n        });\n    }\n    else if ((0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEPublicKeyRSA)(certCOSE)) {\n        return (0,_helpers_iso_isoCrypto_verifyRSA_js__WEBPACK_IMPORTED_MODULE_4__.verifyRSA)({\n            data,\n            signature: signatureBytes,\n            cosePublicKey: certCOSE,\n        });\n    }\n    const kty = certCOSE.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.kty);\n    throw new Error(`JWT verification with public key of kty ${kty} is not supported by this method`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vbWV0YWRhdGEvdmVyaWZ5SldULmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzRjtBQUNoQjtBQUN5QjtBQUM3QjtBQUNBO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQSxxQkFBcUIsa0dBQTBCO0FBQy9DLGlCQUFpQiwrRUFBNEIsSUFBSSxPQUFPLEdBQUcsUUFBUTtBQUNuRSwyQkFBMkIsd0VBQXFCO0FBQ2hELFFBQVEsb0VBQWtCO0FBQzFCLGVBQWUsOEVBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsNkJBQTZCLHFEQUFPO0FBQ3BDLFNBQVM7QUFDVDtBQUNBLGFBQWEsb0VBQWtCO0FBQy9CLGVBQWUsOEVBQVM7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0EsNkJBQTZCLHNEQUFRO0FBQ3JDLCtEQUErRCxLQUFLO0FBQ3BFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vbWV0YWRhdGEvdmVyaWZ5SldULmpzPzc1MmYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29udmVydFg1MDlQdWJsaWNLZXlUb0NPU0UgfSBmcm9tICcuLi9oZWxwZXJzL2NvbnZlcnRYNTA5UHVibGljS2V5VG9DT1NFLmpzJztcbmltcG9ydCB7IGlzb0Jhc2U2NFVSTCwgaXNvVWludDhBcnJheSB9IGZyb20gJy4uL2hlbHBlcnMvaXNvL2luZGV4LmpzJztcbmltcG9ydCB7IENPU0VBTEcsIENPU0VLRVlTLCBpc0NPU0VQdWJsaWNLZXlFQzIsIGlzQ09TRVB1YmxpY0tleVJTQSB9IGZyb20gJy4uL2hlbHBlcnMvY29zZS5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlFQzIgfSBmcm9tICcuLi9oZWxwZXJzL2lzby9pc29DcnlwdG8vdmVyaWZ5RUMyLmpzJztcbmltcG9ydCB7IHZlcmlmeVJTQSB9IGZyb20gJy4uL2hlbHBlcnMvaXNvL2lzb0NyeXB0by92ZXJpZnlSU0EuanMnO1xuLyoqXG4gKiBMaWdodHdlaWdodCB2ZXJpZmljYXRpb24gZm9yIEZJRE8gTURTIEpXVHMuIFN1cHBvcnRzIHVzZSBvZiBFQzIgYW5kIFJTQS5cbiAqXG4gKiBJZiB0aGlzIGV2ZXIgbmVlZHMgdG8gc3VwcG9ydCBtb3JlIEpXUyBhbGdvcml0aG1zLCBoZXJlJ3MgdGhlIGxpc3Qgb2YgdGhlbTpcbiAqXG4gKiBodHRwczovL3d3dy5yZmMtZWRpdG9yLm9yZy9yZmMvcmZjNzUxOC5odG1sI3NlY3Rpb24tMy4xXG4gKlxuICogKFB1bGxlZCBmcm9tIGh0dHBzOi8vd3d3LnJmYy1lZGl0b3Iub3JnL3JmYy9yZmM3NTE1I3NlY3Rpb24tNC4xLjEpXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB2ZXJpZnlKV1Qoand0LCBsZWFmQ2VydCkge1xuICAgIGNvbnN0IFtoZWFkZXIsIHBheWxvYWQsIHNpZ25hdHVyZV0gPSBqd3Quc3BsaXQoJy4nKTtcbiAgICBjb25zdCBjZXJ0Q09TRSA9IGNvbnZlcnRYNTA5UHVibGljS2V5VG9DT1NFKGxlYWZDZXJ0KTtcbiAgICBjb25zdCBkYXRhID0gaXNvVWludDhBcnJheS5mcm9tVVRGOFN0cmluZyhgJHtoZWFkZXJ9LiR7cGF5bG9hZH1gKTtcbiAgICBjb25zdCBzaWduYXR1cmVCeXRlcyA9IGlzb0Jhc2U2NFVSTC50b0J1ZmZlcihzaWduYXR1cmUpO1xuICAgIGlmIChpc0NPU0VQdWJsaWNLZXlFQzIoY2VydENPU0UpKSB7XG4gICAgICAgIHJldHVybiB2ZXJpZnlFQzIoe1xuICAgICAgICAgICAgZGF0YSxcbiAgICAgICAgICAgIHNpZ25hdHVyZTogc2lnbmF0dXJlQnl0ZXMsXG4gICAgICAgICAgICBjb3NlUHVibGljS2V5OiBjZXJ0Q09TRSxcbiAgICAgICAgICAgIHNoYUhhc2hPdmVycmlkZTogQ09TRUFMRy5FUzI1NixcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKGlzQ09TRVB1YmxpY0tleVJTQShjZXJ0Q09TRSkpIHtcbiAgICAgICAgcmV0dXJuIHZlcmlmeVJTQSh7XG4gICAgICAgICAgICBkYXRhLFxuICAgICAgICAgICAgc2lnbmF0dXJlOiBzaWduYXR1cmVCeXRlcyxcbiAgICAgICAgICAgIGNvc2VQdWJsaWNLZXk6IGNlcnRDT1NFLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY29uc3Qga3R5ID0gY2VydENPU0UuZ2V0KENPU0VLRVlTLmt0eSk7XG4gICAgdGhyb3cgbmV3IEVycm9yKGBKV1QgdmVyaWZpY2F0aW9uIHdpdGggcHVibGljIGtleSBvZiBrdHkgJHtrdHl9IGlzIG5vdCBzdXBwb3J0ZWQgYnkgdGhpcyBtZXRob2RgKTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyJWT.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   generateRegistrationOptions: () => (/* binding */ generateRegistrationOptions),\n/* harmony export */   supportedCOSEAlgorithmIdentifiers: () => (/* binding */ supportedCOSEAlgorithmIdentifiers)\n/* harmony export */ });\n/* harmony import */ var _helpers_generateChallenge_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/generateChallenge.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/generateChallenge.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * Supported crypto algo identifiers\n * See https://w3c.github.io/webauthn/#sctn-alg-identifier\n * and https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n */\nconst supportedCOSEAlgorithmIdentifiers = [\n    // EdDSA (In first position to encourage authenticators to use this over ES256)\n    -8,\n    // ECDSA w/ SHA-256\n    -7,\n    // ECDSA w/ SHA-512\n    -36,\n    // RSASSA-PSS w/ SHA-256\n    -37,\n    // RSASSA-PSS w/ SHA-384\n    -38,\n    // RSASSA-PSS w/ SHA-512\n    -39,\n    // RSASSA-PKCS1-v1_5 w/ SHA-256\n    -257,\n    // RSASSA-PKCS1-v1_5 w/ SHA-384\n    -258,\n    // RSASSA-PKCS1-v1_5 w/ SHA-512\n    -259,\n    // RSASSA-PKCS1-v1_5 w/ SHA-1 (Deprecated; here for legacy support)\n    -65535,\n];\n/**\n * Set up some default authenticator selection options as per the latest spec:\n * https://www.w3.org/TR/webauthn-2/#dictdef-authenticatorselectioncriteria\n *\n * Helps with some older platforms (e.g. Android 7.0 Nougat) that may not be aware of these\n * defaults.\n */\nconst defaultAuthenticatorSelection = {\n    residentKey: 'preferred',\n    userVerification: 'preferred',\n};\n/**\n * Use the most commonly-supported algorithms\n * See the following:\n *   - https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n *   - https://w3c.github.io/webauthn/#dom-publickeycredentialcreationoptions-pubkeycredparams\n */\nconst defaultSupportedAlgorithmIDs = [-8, -7, -257];\n/**\n * Prepare a value to pass into navigator.credentials.create(...) for authenticator \"registration\"\n *\n * **Options:**\n *\n * @param rpName User-visible, \"friendly\" website/service name\n * @param rpID Valid domain name (after `https://`)\n * @param userID User's website-specific unique ID\n * @param userName User's website-specific username (email, etc...)\n * @param challenge Random value the authenticator needs to sign and pass back\n * @param userDisplayName User's actual name\n * @param timeout How long (in ms) the user can take to complete attestation\n * @param attestationType Specific attestation statement\n * @param excludeCredentials Authenticators registered by the user so the user can't register the\n * same credential multiple times\n * @param authenticatorSelection Advanced criteria for restricting the types of authenticators that\n * may be used\n * @param extensions Additional plugins the authenticator or browser should use during attestation\n * @param supportedAlgorithmIDs Array of numeric COSE algorithm identifiers supported for\n * attestation by this RP. See https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n */\nasync function generateRegistrationOptions(options) {\n    const { rpName, rpID, userID, userName, challenge = await (0,_helpers_generateChallenge_js__WEBPACK_IMPORTED_MODULE_0__.generateChallenge)(), userDisplayName = userName, timeout = 60000, attestationType = 'none', excludeCredentials = [], authenticatorSelection = defaultAuthenticatorSelection, extensions, supportedAlgorithmIDs = defaultSupportedAlgorithmIDs, } = options;\n    /**\n     * Prepare pubKeyCredParams from the array of algorithm ID's\n     */\n    const pubKeyCredParams = supportedAlgorithmIDs.map((id) => ({\n        alg: id,\n        type: 'public-key',\n    }));\n    /**\n     * Capture some of the nuances of how `residentKey` and `requireResidentKey` how either is set\n     * depending on when either is defined in the options\n     */\n    if (authenticatorSelection.residentKey === undefined) {\n        /**\n         * `residentKey`: \"If no value is given then the effective value is `required` if\n         * requireResidentKey is true or `discouraged` if it is false or absent.\"\n         *\n         * See https://www.w3.org/TR/webauthn-2/#dom-authenticatorselectioncriteria-residentkey\n         */\n        if (authenticatorSelection.requireResidentKey) {\n            authenticatorSelection.residentKey = 'required';\n        }\n        else {\n            /**\n             * FIDO Conformance v1.7.2 fails the first test if we do this, even though this is\n             * technically compatible with the WebAuthn L2 spec...\n             */\n            // authenticatorSelection.residentKey = 'discouraged';\n        }\n    }\n    else {\n        /**\n         * `requireResidentKey`: \"Relying Parties SHOULD set it to true if, and only if, residentKey is\n         * set to \"required\"\"\n         *\n         * Spec says this property defaults to `false` so we should still be okay to assign `false` too\n         *\n         * See https://www.w3.org/TR/webauthn-2/#dom-authenticatorselectioncriteria-requireresidentkey\n         */\n        authenticatorSelection.requireResidentKey = authenticatorSelection.residentKey === 'required';\n    }\n    /**\n     * Preserve ability to specify `string` values for challenges\n     */\n    let _challenge = challenge;\n    if (typeof _challenge === 'string') {\n        _challenge = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.fromUTF8String(_challenge);\n    }\n    return {\n        challenge: _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoBase64URL.fromBuffer(_challenge),\n        rp: {\n            name: rpName,\n            id: rpID,\n        },\n        user: {\n            id: userID,\n            name: userName,\n            displayName: userDisplayName,\n        },\n        pubKeyCredParams,\n        timeout,\n        attestation: attestationType,\n        excludeCredentials: excludeCredentials.map((cred) => ({\n            ...cred,\n            id: _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoBase64URL.fromBuffer(cred.id),\n        })),\n        authenticatorSelection,\n        extensions: {\n            ...extensions,\n            credProps: true,\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TPM_ALG: () => (/* binding */ TPM_ALG),\n/* harmony export */   TPM_ECC_CURVE: () => (/* binding */ TPM_ECC_CURVE),\n/* harmony export */   TPM_ECC_CURVE_COSE_CRV_MAP: () => (/* binding */ TPM_ECC_CURVE_COSE_CRV_MAP),\n/* harmony export */   TPM_MANUFACTURERS: () => (/* binding */ TPM_MANUFACTURERS),\n/* harmony export */   TPM_ST: () => (/* binding */ TPM_ST)\n/* harmony export */ });\n// deno-lint-ignore-file no-dupe-keys\n/**\n * A whole lotta domain knowledge is captured here, with hazy connections to source\n * documents. Good places to start searching for more info on these values are the\n * following Trusted Computing Group TPM Library docs linked in the WebAuthn API:\n *\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-1-Architecture-01.38.pdf\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-01.38.pdf\n * - https://www.trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-3-Commands-01.38.pdf\n */\n/**\n * 6.9 TPM_ST (Structure Tags)\n */\nconst TPM_ST = {\n    0x00c4: 'TPM_ST_RSP_COMMAND',\n    0x8000: 'TPM_ST_NULL',\n    0x8001: 'TPM_ST_NO_SESSIONS',\n    0x8002: 'TPM_ST_SESSIONS',\n    0x8014: 'TPM_ST_ATTEST_NV',\n    0x8015: 'TPM_ST_ATTEST_COMMAND_AUDIT',\n    0x8016: 'TPM_ST_ATTEST_SESSION_AUDIT',\n    0x8017: 'TPM_ST_ATTEST_CERTIFY',\n    0x8018: 'TPM_ST_ATTEST_QUOTE',\n    0x8019: 'TPM_ST_ATTEST_TIME',\n    0x801a: 'TPM_ST_ATTEST_CREATION',\n    0x8021: 'TPM_ST_CREATION',\n    0x8022: 'TPM_ST_VERIFIED',\n    0x8023: 'TPM_ST_AUTH_SECRET',\n    0x8024: 'TPM_ST_HASHCHECK',\n    0x8025: 'TPM_ST_AUTH_SIGNED',\n    0x8029: 'TPM_ST_FU_MANIFEST',\n};\n/**\n * 6.3 TPM_ALG_ID\n */\nconst TPM_ALG = {\n    0x0000: 'TPM_ALG_ERROR',\n    0x0001: 'TPM_ALG_RSA',\n    0x0004: 'TPM_ALG_SHA',\n    // @ts-ignore 2300\n    0x0004: 'TPM_ALG_SHA1',\n    0x0005: 'TPM_ALG_HMAC',\n    0x0006: 'TPM_ALG_AES',\n    0x0007: 'TPM_ALG_MGF1',\n    0x0008: 'TPM_ALG_KEYEDHASH',\n    0x000a: 'TPM_ALG_XOR',\n    0x000b: 'TPM_ALG_SHA256',\n    0x000c: 'TPM_ALG_SHA384',\n    0x000d: 'TPM_ALG_SHA512',\n    0x0010: 'TPM_ALG_NULL',\n    0x0012: 'TPM_ALG_SM3_256',\n    0x0013: 'TPM_ALG_SM4',\n    0x0014: 'TPM_ALG_RSASSA',\n    0x0015: 'TPM_ALG_RSAES',\n    0x0016: 'TPM_ALG_RSAPSS',\n    0x0017: 'TPM_ALG_OAEP',\n    0x0018: 'TPM_ALG_ECDSA',\n    0x0019: 'TPM_ALG_ECDH',\n    0x001a: 'TPM_ALG_ECDAA',\n    0x001b: 'TPM_ALG_SM2',\n    0x001c: 'TPM_ALG_ECSCHNORR',\n    0x001d: 'TPM_ALG_ECMQV',\n    0x0020: 'TPM_ALG_KDF1_SP800_56A',\n    0x0021: 'TPM_ALG_KDF2',\n    0x0022: 'TPM_ALG_KDF1_SP800_108',\n    0x0023: 'TPM_ALG_ECC',\n    0x0025: 'TPM_ALG_SYMCIPHER',\n    0x0026: 'TPM_ALG_CAMELLIA',\n    0x0040: 'TPM_ALG_CTR',\n    0x0041: 'TPM_ALG_OFB',\n    0x0042: 'TPM_ALG_CBC',\n    0x0043: 'TPM_ALG_CFB',\n    0x0044: 'TPM_ALG_ECB',\n};\n/**\n * 6.4 TPM_ECC_CURVE\n */\nconst TPM_ECC_CURVE = {\n    0x0000: 'TPM_ECC_NONE',\n    0x0001: 'TPM_ECC_NIST_P192',\n    0x0002: 'TPM_ECC_NIST_P224',\n    0x0003: 'TPM_ECC_NIST_P256',\n    0x0004: 'TPM_ECC_NIST_P384',\n    0x0005: 'TPM_ECC_NIST_P521',\n    0x0010: 'TPM_ECC_BN_P256',\n    0x0011: 'TPM_ECC_BN_P638',\n    0x0020: 'TPM_ECC_SM2_P256',\n};\n/**\n * Sourced from https://trustedcomputinggroup.org/resource/vendor-id-registry/\n *\n * Latest version:\n * https://trustedcomputinggroup.org/wp-content/uploads/TCG-TPM-Vendor-ID-Registry-Version-1.02-Revision-1.00.pdf\n */\nconst TPM_MANUFACTURERS = {\n    'id:414D4400': {\n        name: 'AMD',\n        id: 'AMD',\n    },\n    'id:41544D4C': {\n        name: 'Atmel',\n        id: 'ATML',\n    },\n    'id:4252434D': {\n        name: 'Broadcom',\n        id: 'BRCM',\n    },\n    'id:49424d00': {\n        name: 'IBM',\n        id: 'IBM',\n    },\n    'id:49465800': {\n        name: 'Infineon',\n        id: 'IFX',\n    },\n    'id:494E5443': {\n        name: 'Intel',\n        id: 'INTC',\n    },\n    'id:4C454E00': {\n        name: 'Lenovo',\n        id: 'LEN',\n    },\n    'id:4E534D20': {\n        name: 'National Semiconductor',\n        id: 'NSM',\n    },\n    'id:4E545A00': {\n        name: 'Nationz',\n        id: 'NTZ',\n    },\n    'id:4E544300': {\n        name: 'Nuvoton Technology',\n        id: 'NTC',\n    },\n    'id:51434F4D': {\n        name: 'Qualcomm',\n        id: 'QCOM',\n    },\n    'id:534D5343': {\n        name: 'SMSC',\n        id: 'SMSC',\n    },\n    'id:53544D20': {\n        name: 'ST Microelectronics',\n        id: 'STM',\n    },\n    'id:534D534E': {\n        name: 'Samsung',\n        id: 'SMSN',\n    },\n    'id:534E5300': {\n        name: 'Sinosun',\n        id: 'SNS',\n    },\n    'id:54584E00': {\n        name: 'Texas Instruments',\n        id: 'TXN',\n    },\n    'id:57454300': {\n        name: 'Winbond',\n        id: 'WEC',\n    },\n    'id:524F4343': {\n        name: 'Fuzhouk Rockchip',\n        id: 'ROCC',\n    },\n    'id:FFFFF1D0': {\n        name: 'FIDO Alliance',\n        id: 'FIDO',\n    },\n};\n/**\n * Match TPM public area curve ID's to `crv` numbers used in COSE public keys\n */\nconst TPM_ECC_CURVE_COSE_CRV_MAP = {\n    TPM_ECC_NIST_P256: 1,\n    TPM_ECC_NIST_P384: 2,\n    TPM_ECC_NIST_P521: 3,\n    TPM_ECC_BN_P256: 1,\n    TPM_ECC_SM2_P256: 1, // p256\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parseCertInfo.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parseCertInfo.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parseCertInfo: () => (/* binding */ parseCertInfo)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * Cut up a TPM attestation's certInfo into intelligible chunks\n */\nfunction parseCertInfo(certInfo) {\n    let pointer = 0;\n    const dataView = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toDataView(certInfo);\n    // Get a magic constant\n    const magic = dataView.getUint32(pointer);\n    pointer += 4;\n    // Determine the algorithm used for attestation\n    const typeBuffer = dataView.getUint16(pointer);\n    pointer += 2;\n    const type = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ST[typeBuffer];\n    // The name of a parent entity, can be ignored\n    const qualifiedSignerLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const qualifiedSigner = certInfo.slice(pointer, pointer += qualifiedSignerLength);\n    // Get the expected hash of `attsToBeSigned`\n    const extraDataLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const extraData = certInfo.slice(pointer, pointer += extraDataLength);\n    // Information about the TPM device's internal clock, can be ignored\n    const clock = certInfo.slice(pointer, pointer += 8);\n    const resetCount = dataView.getUint32(pointer);\n    pointer += 4;\n    const restartCount = dataView.getUint32(pointer);\n    pointer += 4;\n    const safe = !!certInfo.slice(pointer, pointer += 1);\n    const clockInfo = { clock, resetCount, restartCount, safe };\n    // TPM device firmware version\n    const firmwareVersion = certInfo.slice(pointer, pointer += 8);\n    // Attested Name\n    const attestedNameLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const attestedName = certInfo.slice(pointer, pointer += attestedNameLength);\n    const attestedNameDataView = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toDataView(attestedName);\n    // Attested qualified name, can be ignored\n    const qualifiedNameLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const qualifiedName = certInfo.slice(pointer, pointer += qualifiedNameLength);\n    const attested = {\n        nameAlg: _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[attestedNameDataView.getUint16(0)],\n        nameAlgBuffer: attestedName.slice(0, 2),\n        name: attestedName,\n        qualifiedName,\n    };\n    return {\n        magic,\n        type,\n        qualifiedSigner,\n        extraData,\n        clockInfo,\n        firmwareVersion,\n        attested,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdHBtL3BhcnNlQ2VydEluZm8uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWlEO0FBQ2E7QUFDOUQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBLHFCQUFxQiwyRUFBd0I7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLGlEQUFNO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUMsMkVBQXdCO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsa0RBQU87QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL3JlZ2lzdHJhdGlvbi92ZXJpZmljYXRpb25zL3RwbS9wYXJzZUNlcnRJbmZvLmpzPzY5NTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVFBNX0FMRywgVFBNX1NUIH0gZnJvbSAnLi9jb25zdGFudHMuanMnO1xuaW1wb3J0IHsgaXNvVWludDhBcnJheSB9IGZyb20gJy4uLy4uLy4uL2hlbHBlcnMvaXNvL2luZGV4LmpzJztcbi8qKlxuICogQ3V0IHVwIGEgVFBNIGF0dGVzdGF0aW9uJ3MgY2VydEluZm8gaW50byBpbnRlbGxpZ2libGUgY2h1bmtzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZUNlcnRJbmZvKGNlcnRJbmZvKSB7XG4gICAgbGV0IHBvaW50ZXIgPSAwO1xuICAgIGNvbnN0IGRhdGFWaWV3ID0gaXNvVWludDhBcnJheS50b0RhdGFWaWV3KGNlcnRJbmZvKTtcbiAgICAvLyBHZXQgYSBtYWdpYyBjb25zdGFudFxuICAgIGNvbnN0IG1hZ2ljID0gZGF0YVZpZXcuZ2V0VWludDMyKHBvaW50ZXIpO1xuICAgIHBvaW50ZXIgKz0gNDtcbiAgICAvLyBEZXRlcm1pbmUgdGhlIGFsZ29yaXRobSB1c2VkIGZvciBhdHRlc3RhdGlvblxuICAgIGNvbnN0IHR5cGVCdWZmZXIgPSBkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcik7XG4gICAgcG9pbnRlciArPSAyO1xuICAgIGNvbnN0IHR5cGUgPSBUUE1fU1RbdHlwZUJ1ZmZlcl07XG4gICAgLy8gVGhlIG5hbWUgb2YgYSBwYXJlbnQgZW50aXR5LCBjYW4gYmUgaWdub3JlZFxuICAgIGNvbnN0IHF1YWxpZmllZFNpZ25lckxlbmd0aCA9IGRhdGFWaWV3LmdldFVpbnQxNihwb2ludGVyKTtcbiAgICBwb2ludGVyICs9IDI7XG4gICAgY29uc3QgcXVhbGlmaWVkU2lnbmVyID0gY2VydEluZm8uc2xpY2UocG9pbnRlciwgcG9pbnRlciArPSBxdWFsaWZpZWRTaWduZXJMZW5ndGgpO1xuICAgIC8vIEdldCB0aGUgZXhwZWN0ZWQgaGFzaCBvZiBgYXR0c1RvQmVTaWduZWRgXG4gICAgY29uc3QgZXh0cmFEYXRhTGVuZ3RoID0gZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpO1xuICAgIHBvaW50ZXIgKz0gMjtcbiAgICBjb25zdCBleHRyYURhdGEgPSBjZXJ0SW5mby5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IGV4dHJhRGF0YUxlbmd0aCk7XG4gICAgLy8gSW5mb3JtYXRpb24gYWJvdXQgdGhlIFRQTSBkZXZpY2UncyBpbnRlcm5hbCBjbG9jaywgY2FuIGJlIGlnbm9yZWRcbiAgICBjb25zdCBjbG9jayA9IGNlcnRJbmZvLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gOCk7XG4gICAgY29uc3QgcmVzZXRDb3VudCA9IGRhdGFWaWV3LmdldFVpbnQzMihwb2ludGVyKTtcbiAgICBwb2ludGVyICs9IDQ7XG4gICAgY29uc3QgcmVzdGFydENvdW50ID0gZGF0YVZpZXcuZ2V0VWludDMyKHBvaW50ZXIpO1xuICAgIHBvaW50ZXIgKz0gNDtcbiAgICBjb25zdCBzYWZlID0gISFjZXJ0SW5mby5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IDEpO1xuICAgIGNvbnN0IGNsb2NrSW5mbyA9IHsgY2xvY2ssIHJlc2V0Q291bnQsIHJlc3RhcnRDb3VudCwgc2FmZSB9O1xuICAgIC8vIFRQTSBkZXZpY2UgZmlybXdhcmUgdmVyc2lvblxuICAgIGNvbnN0IGZpcm13YXJlVmVyc2lvbiA9IGNlcnRJbmZvLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gOCk7XG4gICAgLy8gQXR0ZXN0ZWQgTmFtZVxuICAgIGNvbnN0IGF0dGVzdGVkTmFtZUxlbmd0aCA9IGRhdGFWaWV3LmdldFVpbnQxNihwb2ludGVyKTtcbiAgICBwb2ludGVyICs9IDI7XG4gICAgY29uc3QgYXR0ZXN0ZWROYW1lID0gY2VydEluZm8uc2xpY2UocG9pbnRlciwgcG9pbnRlciArPSBhdHRlc3RlZE5hbWVMZW5ndGgpO1xuICAgIGNvbnN0IGF0dGVzdGVkTmFtZURhdGFWaWV3ID0gaXNvVWludDhBcnJheS50b0RhdGFWaWV3KGF0dGVzdGVkTmFtZSk7XG4gICAgLy8gQXR0ZXN0ZWQgcXVhbGlmaWVkIG5hbWUsIGNhbiBiZSBpZ25vcmVkXG4gICAgY29uc3QgcXVhbGlmaWVkTmFtZUxlbmd0aCA9IGRhdGFWaWV3LmdldFVpbnQxNihwb2ludGVyKTtcbiAgICBwb2ludGVyICs9IDI7XG4gICAgY29uc3QgcXVhbGlmaWVkTmFtZSA9IGNlcnRJbmZvLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gcXVhbGlmaWVkTmFtZUxlbmd0aCk7XG4gICAgY29uc3QgYXR0ZXN0ZWQgPSB7XG4gICAgICAgIG5hbWVBbGc6IFRQTV9BTEdbYXR0ZXN0ZWROYW1lRGF0YVZpZXcuZ2V0VWludDE2KDApXSxcbiAgICAgICAgbmFtZUFsZ0J1ZmZlcjogYXR0ZXN0ZWROYW1lLnNsaWNlKDAsIDIpLFxuICAgICAgICBuYW1lOiBhdHRlc3RlZE5hbWUsXG4gICAgICAgIHF1YWxpZmllZE5hbWUsXG4gICAgfTtcbiAgICByZXR1cm4ge1xuICAgICAgICBtYWdpYyxcbiAgICAgICAgdHlwZSxcbiAgICAgICAgcXVhbGlmaWVkU2lnbmVyLFxuICAgICAgICBleHRyYURhdGEsXG4gICAgICAgIGNsb2NrSW5mbyxcbiAgICAgICAgZmlybXdhcmVWZXJzaW9uLFxuICAgICAgICBhdHRlc3RlZCxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parseCertInfo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parsePubArea.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parsePubArea.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   parsePubArea: () => (/* binding */ parsePubArea)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n/**\n * Break apart a TPM attestation's pubArea buffer\n *\n * See 12.2.4 TPMT_PUBLIC here:\n * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n */\nfunction parsePubArea(pubArea) {\n    let pointer = 0;\n    const dataView = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.toDataView(pubArea);\n    const type = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n    pointer += 2;\n    const nameAlg = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n    pointer += 2;\n    // Get some authenticator attributes(?)\n    // const objectAttributesInt = pubArea.slice(pointer, (pointer += 4)).readUInt32BE(0);\n    const objectAttributesInt = dataView.getUint32(pointer);\n    pointer += 4;\n    const objectAttributes = {\n        fixedTPM: !!(objectAttributesInt & 1),\n        stClear: !!(objectAttributesInt & 2),\n        fixedParent: !!(objectAttributesInt & 8),\n        sensitiveDataOrigin: !!(objectAttributesInt & 16),\n        userWithAuth: !!(objectAttributesInt & 32),\n        adminWithPolicy: !!(objectAttributesInt & 64),\n        noDA: !!(objectAttributesInt & 512),\n        encryptedDuplication: !!(objectAttributesInt & 1024),\n        restricted: !!(objectAttributesInt & 32768),\n        decrypt: !!(objectAttributesInt & 65536),\n        signOrEncrypt: !!(objectAttributesInt & 131072),\n    };\n    // Slice out the authPolicy of dynamic length\n    const authPolicyLength = dataView.getUint16(pointer);\n    pointer += 2;\n    const authPolicy = pubArea.slice(pointer, pointer += authPolicyLength);\n    // Extract additional curve params according to type\n    const parameters = {};\n    let unique = Uint8Array.from([]);\n    if (type === 'TPM_ALG_RSA') {\n        const symmetric = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const scheme = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const keyBits = dataView.getUint16(pointer);\n        pointer += 2;\n        const exponent = dataView.getUint32(pointer);\n        pointer += 4;\n        parameters.rsa = { symmetric, scheme, keyBits, exponent };\n        /**\n         * See 11.2.4.5 TPM2B_PUBLIC_KEY_RSA here:\n         * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n         */\n        // const uniqueLength = pubArea.slice(pointer, (pointer += 2)).readUInt16BE(0);\n        const uniqueLength = dataView.getUint16(pointer);\n        pointer += 2;\n        unique = pubArea.slice(pointer, pointer += uniqueLength);\n    }\n    else if (type === 'TPM_ALG_ECC') {\n        const symmetric = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const scheme = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        const curveID = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ECC_CURVE[dataView.getUint16(pointer)];\n        pointer += 2;\n        const kdf = _constants_js__WEBPACK_IMPORTED_MODULE_0__.TPM_ALG[dataView.getUint16(pointer)];\n        pointer += 2;\n        parameters.ecc = { symmetric, scheme, curveID, kdf };\n        /**\n         * See 11.2.5.1 TPM2B_ECC_PARAMETER here:\n         * https://trustedcomputinggroup.org/wp-content/uploads/TPM-Rev-2.0-Part-2-Structures-00.96-130315.pdf\n         */\n        // Retrieve X\n        const uniqueXLength = dataView.getUint16(pointer);\n        pointer += 2;\n        const uniqueX = pubArea.slice(pointer, pointer += uniqueXLength);\n        // Retrieve Y\n        const uniqueYLength = dataView.getUint16(pointer);\n        pointer += 2;\n        const uniqueY = pubArea.slice(pointer, pointer += uniqueYLength);\n        unique = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_1__.isoUint8Array.concat([uniqueX, uniqueY]);\n    }\n    else {\n        throw new Error(`Unexpected type \"${type}\" (TPM)`);\n    }\n    return {\n        type,\n        nameAlg,\n        objectAttributes,\n        authPolicy,\n        parameters,\n        unique,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdHBtL3BhcnNlUHViQXJlYS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBd0Q7QUFDTTtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0EscUJBQXFCLDJFQUF3QjtBQUM3QyxpQkFBaUIsa0RBQU87QUFDeEI7QUFDQSxvQkFBb0Isa0RBQU87QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQixrREFBTztBQUNqQztBQUNBLHVCQUF1QixrREFBTztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMEJBQTBCLGtEQUFPO0FBQ2pDO0FBQ0EsdUJBQXVCLGtEQUFPO0FBQzlCO0FBQ0Esd0JBQXdCLHdEQUFhO0FBQ3JDO0FBQ0Esb0JBQW9CLGtEQUFPO0FBQzNCO0FBQ0EsMkJBQTJCO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlCQUFpQix1RUFBb0I7QUFDckM7QUFDQTtBQUNBLDRDQUE0QyxLQUFLO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdHBtL3BhcnNlUHViQXJlYS5qcz9mMTRjIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRQTV9BTEcsIFRQTV9FQ0NfQ1VSVkUgfSBmcm9tICcuL2NvbnN0YW50cy5qcyc7XG5pbXBvcnQgeyBpc29VaW50OEFycmF5IH0gZnJvbSAnLi4vLi4vLi4vaGVscGVycy9pc28vaW5kZXguanMnO1xuLyoqXG4gKiBCcmVhayBhcGFydCBhIFRQTSBhdHRlc3RhdGlvbidzIHB1YkFyZWEgYnVmZmVyXG4gKlxuICogU2VlIDEyLjIuNCBUUE1UX1BVQkxJQyBoZXJlOlxuICogaHR0cHM6Ly90cnVzdGVkY29tcHV0aW5nZ3JvdXAub3JnL3dwLWNvbnRlbnQvdXBsb2Fkcy9UUE0tUmV2LTIuMC1QYXJ0LTItU3RydWN0dXJlcy0wMC45Ni0xMzAzMTUucGRmXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBwYXJzZVB1YkFyZWEocHViQXJlYSkge1xuICAgIGxldCBwb2ludGVyID0gMDtcbiAgICBjb25zdCBkYXRhVmlldyA9IGlzb1VpbnQ4QXJyYXkudG9EYXRhVmlldyhwdWJBcmVhKTtcbiAgICBjb25zdCB0eXBlID0gVFBNX0FMR1tkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcildO1xuICAgIHBvaW50ZXIgKz0gMjtcbiAgICBjb25zdCBuYW1lQWxnID0gVFBNX0FMR1tkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcildO1xuICAgIHBvaW50ZXIgKz0gMjtcbiAgICAvLyBHZXQgc29tZSBhdXRoZW50aWNhdG9yIGF0dHJpYnV0ZXMoPylcbiAgICAvLyBjb25zdCBvYmplY3RBdHRyaWJ1dGVzSW50ID0gcHViQXJlYS5zbGljZShwb2ludGVyLCAocG9pbnRlciArPSA0KSkucmVhZFVJbnQzMkJFKDApO1xuICAgIGNvbnN0IG9iamVjdEF0dHJpYnV0ZXNJbnQgPSBkYXRhVmlldy5nZXRVaW50MzIocG9pbnRlcik7XG4gICAgcG9pbnRlciArPSA0O1xuICAgIGNvbnN0IG9iamVjdEF0dHJpYnV0ZXMgPSB7XG4gICAgICAgIGZpeGVkVFBNOiAhIShvYmplY3RBdHRyaWJ1dGVzSW50ICYgMSksXG4gICAgICAgIHN0Q2xlYXI6ICEhKG9iamVjdEF0dHJpYnV0ZXNJbnQgJiAyKSxcbiAgICAgICAgZml4ZWRQYXJlbnQ6ICEhKG9iamVjdEF0dHJpYnV0ZXNJbnQgJiA4KSxcbiAgICAgICAgc2Vuc2l0aXZlRGF0YU9yaWdpbjogISEob2JqZWN0QXR0cmlidXRlc0ludCAmIDE2KSxcbiAgICAgICAgdXNlcldpdGhBdXRoOiAhIShvYmplY3RBdHRyaWJ1dGVzSW50ICYgMzIpLFxuICAgICAgICBhZG1pbldpdGhQb2xpY3k6ICEhKG9iamVjdEF0dHJpYnV0ZXNJbnQgJiA2NCksXG4gICAgICAgIG5vREE6ICEhKG9iamVjdEF0dHJpYnV0ZXNJbnQgJiA1MTIpLFxuICAgICAgICBlbmNyeXB0ZWREdXBsaWNhdGlvbjogISEob2JqZWN0QXR0cmlidXRlc0ludCAmIDEwMjQpLFxuICAgICAgICByZXN0cmljdGVkOiAhIShvYmplY3RBdHRyaWJ1dGVzSW50ICYgMzI3NjgpLFxuICAgICAgICBkZWNyeXB0OiAhIShvYmplY3RBdHRyaWJ1dGVzSW50ICYgNjU1MzYpLFxuICAgICAgICBzaWduT3JFbmNyeXB0OiAhIShvYmplY3RBdHRyaWJ1dGVzSW50ICYgMTMxMDcyKSxcbiAgICB9O1xuICAgIC8vIFNsaWNlIG91dCB0aGUgYXV0aFBvbGljeSBvZiBkeW5hbWljIGxlbmd0aFxuICAgIGNvbnN0IGF1dGhQb2xpY3lMZW5ndGggPSBkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcik7XG4gICAgcG9pbnRlciArPSAyO1xuICAgIGNvbnN0IGF1dGhQb2xpY3kgPSBwdWJBcmVhLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gYXV0aFBvbGljeUxlbmd0aCk7XG4gICAgLy8gRXh0cmFjdCBhZGRpdGlvbmFsIGN1cnZlIHBhcmFtcyBhY2NvcmRpbmcgdG8gdHlwZVxuICAgIGNvbnN0IHBhcmFtZXRlcnMgPSB7fTtcbiAgICBsZXQgdW5pcXVlID0gVWludDhBcnJheS5mcm9tKFtdKTtcbiAgICBpZiAodHlwZSA9PT0gJ1RQTV9BTEdfUlNBJykge1xuICAgICAgICBjb25zdCBzeW1tZXRyaWMgPSBUUE1fQUxHW2RhdGFWaWV3LmdldFVpbnQxNihwb2ludGVyKV07XG4gICAgICAgIHBvaW50ZXIgKz0gMjtcbiAgICAgICAgY29uc3Qgc2NoZW1lID0gVFBNX0FMR1tkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcildO1xuICAgICAgICBwb2ludGVyICs9IDI7XG4gICAgICAgIGNvbnN0IGtleUJpdHMgPSBkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcik7XG4gICAgICAgIHBvaW50ZXIgKz0gMjtcbiAgICAgICAgY29uc3QgZXhwb25lbnQgPSBkYXRhVmlldy5nZXRVaW50MzIocG9pbnRlcik7XG4gICAgICAgIHBvaW50ZXIgKz0gNDtcbiAgICAgICAgcGFyYW1ldGVycy5yc2EgPSB7IHN5bW1ldHJpYywgc2NoZW1lLCBrZXlCaXRzLCBleHBvbmVudCB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogU2VlIDExLjIuNC41IFRQTTJCX1BVQkxJQ19LRVlfUlNBIGhlcmU6XG4gICAgICAgICAqIGh0dHBzOi8vdHJ1c3RlZGNvbXB1dGluZ2dyb3VwLm9yZy93cC1jb250ZW50L3VwbG9hZHMvVFBNLVJldi0yLjAtUGFydC0yLVN0cnVjdHVyZXMtMDAuOTYtMTMwMzE1LnBkZlxuICAgICAgICAgKi9cbiAgICAgICAgLy8gY29uc3QgdW5pcXVlTGVuZ3RoID0gcHViQXJlYS5zbGljZShwb2ludGVyLCAocG9pbnRlciArPSAyKSkucmVhZFVJbnQxNkJFKDApO1xuICAgICAgICBjb25zdCB1bmlxdWVMZW5ndGggPSBkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcik7XG4gICAgICAgIHBvaW50ZXIgKz0gMjtcbiAgICAgICAgdW5pcXVlID0gcHViQXJlYS5zbGljZShwb2ludGVyLCBwb2ludGVyICs9IHVuaXF1ZUxlbmd0aCk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHR5cGUgPT09ICdUUE1fQUxHX0VDQycpIHtcbiAgICAgICAgY29uc3Qgc3ltbWV0cmljID0gVFBNX0FMR1tkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcildO1xuICAgICAgICBwb2ludGVyICs9IDI7XG4gICAgICAgIGNvbnN0IHNjaGVtZSA9IFRQTV9BTEdbZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpXTtcbiAgICAgICAgcG9pbnRlciArPSAyO1xuICAgICAgICBjb25zdCBjdXJ2ZUlEID0gVFBNX0VDQ19DVVJWRVtkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcildO1xuICAgICAgICBwb2ludGVyICs9IDI7XG4gICAgICAgIGNvbnN0IGtkZiA9IFRQTV9BTEdbZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpXTtcbiAgICAgICAgcG9pbnRlciArPSAyO1xuICAgICAgICBwYXJhbWV0ZXJzLmVjYyA9IHsgc3ltbWV0cmljLCBzY2hlbWUsIGN1cnZlSUQsIGtkZiB9O1xuICAgICAgICAvKipcbiAgICAgICAgICogU2VlIDExLjIuNS4xIFRQTTJCX0VDQ19QQVJBTUVURVIgaGVyZTpcbiAgICAgICAgICogaHR0cHM6Ly90cnVzdGVkY29tcHV0aW5nZ3JvdXAub3JnL3dwLWNvbnRlbnQvdXBsb2Fkcy9UUE0tUmV2LTIuMC1QYXJ0LTItU3RydWN0dXJlcy0wMC45Ni0xMzAzMTUucGRmXG4gICAgICAgICAqL1xuICAgICAgICAvLyBSZXRyaWV2ZSBYXG4gICAgICAgIGNvbnN0IHVuaXF1ZVhMZW5ndGggPSBkYXRhVmlldy5nZXRVaW50MTYocG9pbnRlcik7XG4gICAgICAgIHBvaW50ZXIgKz0gMjtcbiAgICAgICAgY29uc3QgdW5pcXVlWCA9IHB1YkFyZWEuc2xpY2UocG9pbnRlciwgcG9pbnRlciArPSB1bmlxdWVYTGVuZ3RoKTtcbiAgICAgICAgLy8gUmV0cmlldmUgWVxuICAgICAgICBjb25zdCB1bmlxdWVZTGVuZ3RoID0gZGF0YVZpZXcuZ2V0VWludDE2KHBvaW50ZXIpO1xuICAgICAgICBwb2ludGVyICs9IDI7XG4gICAgICAgIGNvbnN0IHVuaXF1ZVkgPSBwdWJBcmVhLnNsaWNlKHBvaW50ZXIsIHBvaW50ZXIgKz0gdW5pcXVlWUxlbmd0aCk7XG4gICAgICAgIHVuaXF1ZSA9IGlzb1VpbnQ4QXJyYXkuY29uY2F0KFt1bmlxdWVYLCB1bmlxdWVZXSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFVuZXhwZWN0ZWQgdHlwZSBcIiR7dHlwZX1cIiAoVFBNKWApO1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlLFxuICAgICAgICBuYW1lQWxnLFxuICAgICAgICBvYmplY3RBdHRyaWJ1dGVzLFxuICAgICAgICBhdXRoUG9saWN5LFxuICAgICAgICBwYXJhbWV0ZXJzLFxuICAgICAgICB1bmlxdWUsXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parsePubArea.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/verifyAttestationTPM.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/verifyAttestationTPM.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationTPM: () => (/* binding */ verifyAttestationTPM)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../helpers/decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../../helpers/getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../../services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../../metadata/verifyAttestationWithMetadata.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/constants.js\");\n/* harmony import */ var _parseCertInfo_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./parseCertInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parseCertInfo.js\");\n/* harmony import */ var _parsePubArea_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./parsePubArea.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/parsePubArea.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nasync function verifyAttestationTPM(options) {\n    const { aaguid, attStmt, authData, credentialPublicKey, clientDataHash, rootCertificates, } = options;\n    const ver = attStmt.get('ver');\n    const sig = attStmt.get('sig');\n    const alg = attStmt.get('alg');\n    const x5c = attStmt.get('x5c');\n    const pubArea = attStmt.get('pubArea');\n    const certInfo = attStmt.get('certInfo');\n    /**\n     * Verify structures\n     */\n    if (ver !== '2.0') {\n        throw new Error(`Unexpected ver \"${ver}\", expected \"2.0\" (TPM)`);\n    }\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (TPM)');\n    }\n    if (!alg) {\n        throw new Error(`Attestation statement did not contain alg (TPM)`);\n    }\n    if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEAlg)(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (TPM)`);\n    }\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (TPM)');\n    }\n    if (!pubArea) {\n        throw new Error('Attestation statement did not contain pubArea (TPM)');\n    }\n    if (!certInfo) {\n        throw new Error('Attestation statement did not contain certInfo (TPM)');\n    }\n    const parsedPubArea = (0,_parsePubArea_js__WEBPACK_IMPORTED_MODULE_13__.parsePubArea)(pubArea);\n    const { unique, type: pubType, parameters } = parsedPubArea;\n    // Verify that the public key specified by the parameters and unique fields of pubArea is\n    // identical to the credentialPublicKey in the attestedCredentialData in authenticatorData.\n    const cosePublicKey = (0,_helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_1__.decodeCredentialPublicKey)(credentialPublicKey);\n    if (pubType === 'TPM_ALG_RSA') {\n        if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEPublicKeyRSA)(cosePublicKey)) {\n            throw new Error(`Credential public key with kty ${cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.kty)} did not match ${pubType}`);\n        }\n        const n = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.n);\n        const e = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.e);\n        if (!n) {\n            throw new Error('COSE public key missing n (TPM|RSA)');\n        }\n        if (!e) {\n            throw new Error('COSE public key missing e (TPM|RSA)');\n        }\n        if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.areEqual(unique, n)) {\n            throw new Error('PubArea unique is not same as credentialPublicKey (TPM|RSA)');\n        }\n        if (!parameters.rsa) {\n            throw new Error(`Parsed pubArea type is RSA, but missing parameters.rsa (TPM|RSA)`);\n        }\n        const eBuffer = e;\n        // If `exponent` is equal to 0x00, then exponent is the default RSA exponent of 2^16+1 (65537)\n        const pubAreaExponent = parameters.rsa.exponent || 65537;\n        // Do some bit shifting to get to an integer\n        const eSum = eBuffer[0] + (eBuffer[1] << 8) + (eBuffer[2] << 16);\n        if (pubAreaExponent !== eSum) {\n            throw new Error(`Unexpected public key exp ${eSum}, expected ${pubAreaExponent} (TPM|RSA)`);\n        }\n    }\n    else if (pubType === 'TPM_ALG_ECC') {\n        if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.isCOSEPublicKeyEC2)(cosePublicKey)) {\n            throw new Error(`Credential public key with kty ${cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.kty)} did not match ${pubType}`);\n        }\n        const crv = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.crv);\n        const x = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.x);\n        const y = cosePublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEKEYS.y);\n        if (!crv) {\n            throw new Error('COSE public key missing crv (TPM|ECC)');\n        }\n        if (!x) {\n            throw new Error('COSE public key missing x (TPM|ECC)');\n        }\n        if (!y) {\n            throw new Error('COSE public key missing y (TPM|ECC)');\n        }\n        if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.areEqual(unique, _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.concat([x, y]))) {\n            throw new Error('PubArea unique is not same as public key x and y (TPM|ECC)');\n        }\n        if (!parameters.ecc) {\n            throw new Error(`Parsed pubArea type is ECC, but missing parameters.ecc (TPM|ECC)`);\n        }\n        const pubAreaCurveID = parameters.ecc.curveID;\n        const pubAreaCurveIDMapToCOSECRV = _constants_js__WEBPACK_IMPORTED_MODULE_11__.TPM_ECC_CURVE_COSE_CRV_MAP[pubAreaCurveID];\n        if (pubAreaCurveIDMapToCOSECRV !== crv) {\n            throw new Error(`Public area key curve ID \"${pubAreaCurveID}\" mapped to \"${pubAreaCurveIDMapToCOSECRV}\" which did not match public key crv of \"${crv}\" (TPM|ECC)`);\n        }\n    }\n    else {\n        throw new Error(`Unsupported pubArea.type \"${pubType}\"`);\n    }\n    const parsedCertInfo = (0,_parseCertInfo_js__WEBPACK_IMPORTED_MODULE_12__.parseCertInfo)(certInfo);\n    const { magic, type: certType, attested, extraData } = parsedCertInfo;\n    if (magic !== 0xff544347) {\n        throw new Error(`Unexpected magic value \"${magic}\", expected \"0xff544347\" (TPM)`);\n    }\n    if (certType !== 'TPM_ST_ATTEST_CERTIFY') {\n        throw new Error(`Unexpected type \"${certType}\", expected \"TPM_ST_ATTEST_CERTIFY\" (TPM)`);\n    }\n    // Hash pubArea to create pubAreaHash using the nameAlg in attested\n    const pubAreaHash = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__.toHash)(pubArea, attestedNameAlgToCOSEAlg(attested.nameAlg));\n    // Concatenate attested.nameAlg and pubAreaHash to create attestedName.\n    const attestedName = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.concat([\n        attested.nameAlgBuffer,\n        pubAreaHash,\n    ]);\n    // Check that certInfo.attested.name is equals to attestedName.\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.areEqual(attested.name, attestedName)) {\n        throw new Error(`Attested name comparison failed (TPM)`);\n    }\n    // Concatenate authData with clientDataHash to create attToBeSigned\n    const attToBeSigned = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.concat([authData, clientDataHash]);\n    // Hash attToBeSigned using the algorithm specified in attStmt.alg to create attToBeSignedHash\n    const attToBeSignedHash = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__.toHash)(attToBeSigned, alg);\n    // Check that certInfo.extraData is equals to attToBeSignedHash.\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_8__.isoUint8Array.areEqual(extraData, attToBeSignedHash)) {\n        throw new Error('CertInfo extra data did not equal hashed attestation (TPM)');\n    }\n    /**\n     * Verify signature\n     */\n    if (x5c.length < 1) {\n        throw new Error('No certificates present in x5c array (TPM)');\n    }\n    // Pick a leaf AIK certificate of the x5c array and parse it.\n    const leafCertInfo = (0,_helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_6__.getCertificateInfo)(x5c[0]);\n    const { basicConstraintsCA, version, subject, notAfter, notBefore } = leafCertInfo;\n    if (basicConstraintsCA) {\n        throw new Error('Certificate basic constraints CA was not `false` (TPM)');\n    }\n    // Check that certificate is of version 3 (value must be set to 2).\n    if (version !== 2) {\n        throw new Error('Certificate version was not `3` (ASN.1 value of 2) (TPM)');\n    }\n    // Check that Subject sequence is empty.\n    if (subject.combined.length > 0) {\n        throw new Error('Certificate subject was not empty (TPM)');\n    }\n    // Check that certificate is currently valid\n    let now = new Date();\n    if (notBefore > now) {\n        throw new Error(`Certificate not good before \"${notBefore.toString()}\" (TPM)`);\n    }\n    // Check that certificate has not expired\n    now = new Date();\n    if (notAfter < now) {\n        throw new Error(`Certificate not good after \"${notAfter.toString()}\" (TPM)`);\n    }\n    /**\n     * Plumb the depths of the certificate's ASN.1-formatted data for some values we need to verify\n     */\n    const parsedCert = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(x5c[0], _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    if (!parsedCert.tbsCertificate.extensions) {\n        throw new Error('Certificate was missing extensions (TPM)');\n    }\n    let subjectAltNamePresent;\n    let extKeyUsage;\n    parsedCert.tbsCertificate.extensions.forEach((ext) => {\n        if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_subjectAltName) {\n            subjectAltNamePresent = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.SubjectAlternativeName);\n        }\n        else if (ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_extKeyUsage) {\n            extKeyUsage = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(ext.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.ExtendedKeyUsage);\n        }\n    });\n    // Check that certificate contains subjectAltName (2.5.29.17) extension,\n    if (!subjectAltNamePresent) {\n        throw new Error('Certificate did not contain subjectAltName extension (TPM)');\n    }\n    // TPM-specific values are buried within `directoryName`, so first make sure there are values\n    // there.\n    if (!subjectAltNamePresent[0].directoryName?.[0].length) {\n        throw new Error('Certificate subjectAltName extension directoryName was empty (TPM)');\n    }\n    const { tcgAtTpmManufacturer, tcgAtTpmModel, tcgAtTpmVersion } = getTcgAtTpmValues(subjectAltNamePresent[0].directoryName);\n    if (!tcgAtTpmManufacturer || !tcgAtTpmModel || !tcgAtTpmVersion) {\n        throw new Error('Certificate contained incomplete subjectAltName data (TPM)');\n    }\n    if (!extKeyUsage) {\n        throw new Error('Certificate did not contain ExtendedKeyUsage extension (TPM)');\n    }\n    // Check that tcpaTpmManufacturer (2.23.133.2.1) field is set to a valid manufacturer ID.\n    if (!_constants_js__WEBPACK_IMPORTED_MODULE_11__.TPM_MANUFACTURERS[tcgAtTpmManufacturer]) {\n        throw new Error(`Could not match TPM manufacturer \"${tcgAtTpmManufacturer}\" (TPM)`);\n    }\n    // Check that certificate contains extKeyUsage (2.5.29.37) extension and it must contain\n    // tcg-kp-AIKCertificate (2.23.133.8.3) OID.\n    if (extKeyUsage[0] !== '2.23.133.8.3') {\n        throw new Error(`Unexpected extKeyUsage \"${extKeyUsage[0]}\", expected \"2.23.133.8.3\" (TPM)`);\n    }\n    // TODO: If certificate contains id-fido-gen-ce-aaguid(1.3.6.1.4.1.45724.1.1.4) extension, check\n    // that it’s value is set to the same AAGUID as in authData.\n    // Run some metadata checks if a statement exists for this authenticator\n    const statement = await _services_metadataService_js__WEBPACK_IMPORTED_MODULE_9__.MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await (0,_metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_10__.verifyAttestationWithMetadata)({\n                statement,\n                credentialPublicKey,\n                x5c,\n                attestationStatementAlg: alg,\n            });\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (TPM)`);\n        }\n    }\n    else {\n        try {\n            // Try validating the certificate path using the root certificates set via SettingsService\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_5__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_4__.convertCertBufferToPEM), rootCertificates);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (TPM)`);\n        }\n    }\n    // Verify signature over certInfo with the public key extracted from AIK certificate.\n    // In the wise words of Yuriy Ackermann: \"Get Martini friend, you are done!\"\n    return (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_7__.verifySignature)({\n        signature: sig,\n        data: certInfo,\n        x509Certificate: x5c[0],\n        hashAlgorithm: alg,\n    });\n}\n/**\n * Contain logic for pulling TPM-specific values out of subjectAlternativeName extension\n */\nfunction getTcgAtTpmValues(root) {\n    const oidManufacturer = '2.23.133.2.1';\n    const oidModel = '2.23.133.2.2';\n    const oidVersion = '2.23.133.2.3';\n    let tcgAtTpmManufacturer;\n    let tcgAtTpmModel;\n    let tcgAtTpmVersion;\n    /**\n     * Iterate through the following potential structures:\n     *\n     * (Good, follows the spec)\n     * https://trustedcomputinggroup.org/wp-content/uploads/TCG_IWG_EKCredentialProfile_v2p3_r2_pub.pdf (page 33)\n     * Name [\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     * ]\n     *\n     * (Bad, does not follow the spec)\n     * Name [\n     *   RelativeDistinguishedName [\n     *     AttributeTypeAndValue { type, value }\n     *     AttributeTypeAndValue { type, value }\n     *     AttributeTypeAndValue { type, value }\n     *   ]\n     * ]\n     *\n     * Both structures have been seen in the wild and need to be supported\n     */\n    root.forEach((relName) => {\n        relName.forEach((attr) => {\n            if (attr.type === oidManufacturer) {\n                tcgAtTpmManufacturer = attr.value.toString();\n            }\n            else if (attr.type === oidModel) {\n                tcgAtTpmModel = attr.value.toString();\n            }\n            else if (attr.type === oidVersion) {\n                tcgAtTpmVersion = attr.value.toString();\n            }\n        });\n    });\n    return {\n        tcgAtTpmManufacturer,\n        tcgAtTpmModel,\n        tcgAtTpmVersion,\n    };\n}\n/**\n * Convert TPM-specific SHA algorithm ID's with COSE-specific equivalents. Note that the choice to\n * use ECDSA SHA IDs is arbitrary; any such COSEALG that would map to SHA-256 in\n * `mapCoseAlgToWebCryptoAlg()`\n *\n * SHA IDs referenced from here:\n *\n * https://trustedcomputinggroup.org/wp-content/uploads/TCG_TPM2_r1p59_Part2_Structures_pub.pdf\n */\nfunction attestedNameAlgToCOSEAlg(alg) {\n    if (alg === 'TPM_ALG_SHA256') {\n        return _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEALG.ES256;\n    }\n    else if (alg === 'TPM_ALG_SHA384') {\n        return _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEALG.ES384;\n    }\n    else if (alg === 'TPM_ALG_SHA512') {\n        return _helpers_cose_js__WEBPACK_IMPORTED_MODULE_2__.COSEALG.ES512;\n    }\n    throw new Error(`Unexpected TPM attested name alg ${alg}`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/verifyAttestationTPM.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidKey.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidKey.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationAndroidKey: () => (/* binding */ verifyAttestationAndroidKey)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/convertCOSEtoPKCS.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../metadata/verifyAttestationWithMetadata.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\");\n\n\n\n\n\n\n\n\n\n/**\n * Verify an attestation response with fmt 'android-key'\n */\nasync function verifyAttestationAndroidKey(options) {\n    const { authData, clientDataHash, attStmt, credentialPublicKey, aaguid, rootCertificates, } = options;\n    const x5c = attStmt.get('x5c');\n    const sig = attStmt.get('sig');\n    const alg = attStmt.get('alg');\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (AndroidKey)');\n    }\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (AndroidKey)');\n    }\n    if (!alg) {\n        throw new Error(`Attestation statement did not contain alg (AndroidKey)`);\n    }\n    if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__.isCOSEAlg)(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (AndroidKey)`);\n    }\n    // Check that credentialPublicKey matches the public key in the attestation certificate\n    // Find the public cert in the certificate as PKCS\n    const parsedCert = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(x5c[0], _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    const parsedCertPubKey = new Uint8Array(parsedCert.tbsCertificate.subjectPublicKeyInfo.subjectPublicKey);\n    // Convert the credentialPublicKey to PKCS\n    const credPubKeyPKCS = (0,_helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_4__.convertCOSEtoPKCS)(credentialPublicKey);\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoUint8Array.areEqual(credPubKeyPKCS, parsedCertPubKey)) {\n        throw new Error('Credential public key does not equal leaf cert public key (AndroidKey)');\n    }\n    // Find Android KeyStore Extension in certificate extensions\n    const extKeyStore = parsedCert.tbsCertificate.extensions?.find((ext) => ext.extnID === _deps_js__WEBPACK_IMPORTED_MODULE_0__.id_ce_keyDescription);\n    if (!extKeyStore) {\n        throw new Error('Certificate did not contain extKeyStore (AndroidKey)');\n    }\n    const parsedExtKeyStore = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(extKeyStore.extnValue, _deps_js__WEBPACK_IMPORTED_MODULE_0__.KeyDescription);\n    // Verify extKeyStore values\n    const { attestationChallenge, teeEnforced, softwareEnforced } = parsedExtKeyStore;\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoUint8Array.areEqual(new Uint8Array(attestationChallenge.buffer), clientDataHash)) {\n        throw new Error('Attestation challenge was not equal to client data hash (AndroidKey)');\n    }\n    // Ensure that the key is strictly bound to the caller app identifier (shouldn't contain the\n    // [600] tag)\n    if (teeEnforced.allApplications !== undefined) {\n        throw new Error('teeEnforced contained \"allApplications [600]\" tag (AndroidKey)');\n    }\n    if (softwareEnforced.allApplications !== undefined) {\n        throw new Error('teeEnforced contained \"allApplications [600]\" tag (AndroidKey)');\n    }\n    const statement = await _services_metadataService_js__WEBPACK_IMPORTED_MODULE_7__.MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await (0,_metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_8__.verifyAttestationWithMetadata)({\n                statement,\n                credentialPublicKey,\n                x5c,\n                attestationStatementAlg: alg,\n            });\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (AndroidKey)`);\n        }\n    }\n    else {\n        try {\n            // Try validating the certificate path using the root certificates set via SettingsService\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM), rootCertificates);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (AndroidKey)`);\n        }\n    }\n    const signatureBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_6__.isoUint8Array.concat([authData, clientDataHash]);\n    return (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_3__.verifySignature)({\n        signature: sig,\n        data: signatureBase,\n        x509Certificate: x5c[0],\n        hashAlgorithm: alg,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25BbmRyb2lkS2V5LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBNkY7QUFDWjtBQUNFO0FBQ2hCO0FBQ0k7QUFDckI7QUFDUztBQUNTO0FBQzRCO0FBQ2hHO0FBQ0E7QUFDQTtBQUNPO0FBQ1AsWUFBWSxvRkFBb0Y7QUFDaEc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUywyREFBUztBQUNsQix1RUFBdUUsS0FBSztBQUM1RTtBQUNBO0FBQ0E7QUFDQSx1QkFBdUIsK0NBQVMsZUFBZSxpREFBVztBQUMxRDtBQUNBO0FBQ0EsMkJBQTJCLGdGQUFpQjtBQUM1QyxTQUFTLHlFQUFzQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQSwyRkFBMkYsMERBQW9CO0FBQy9HO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiwrQ0FBUyw4QkFBOEIsb0RBQWM7QUFDbkY7QUFDQSxZQUFZLHNEQUFzRDtBQUNsRSxTQUFTLHlFQUFzQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0Qix5RUFBZTtBQUMzQztBQUNBO0FBQ0Esa0JBQWtCLHlHQUE2QjtBQUMvQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsY0FBYztBQUM3QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLDRGQUF1QixTQUFTLHNGQUFzQjtBQUN4RTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsY0FBYztBQUM3QztBQUNBO0FBQ0EsMEJBQTBCLHVFQUFvQjtBQUM5QyxXQUFXLDRFQUFlO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25BbmRyb2lkS2V5LmpzPzhmMDYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXNuUGFyc2VyLCBDZXJ0aWZpY2F0ZSwgaWRfY2Vfa2V5RGVzY3JpcHRpb24sIEtleURlc2NyaXB0aW9uIH0gZnJvbSAnLi4vLi4vZGVwcy5qcyc7XG5pbXBvcnQgeyBjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNIH0gZnJvbSAnLi4vLi4vaGVscGVycy9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzJztcbmltcG9ydCB7IHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoIH0gZnJvbSAnLi4vLi4vaGVscGVycy92YWxpZGF0ZUNlcnRpZmljYXRlUGF0aC5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlTaWduYXR1cmUgfSBmcm9tICcuLi8uLi9oZWxwZXJzL3ZlcmlmeVNpZ25hdHVyZS5qcyc7XG5pbXBvcnQgeyBjb252ZXJ0Q09TRXRvUEtDUyB9IGZyb20gJy4uLy4uL2hlbHBlcnMvY29udmVydENPU0V0b1BLQ1MuanMnO1xuaW1wb3J0IHsgaXNDT1NFQWxnIH0gZnJvbSAnLi4vLi4vaGVscGVycy9jb3NlLmpzJztcbmltcG9ydCB7IGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2lzby9pbmRleC5qcyc7XG5pbXBvcnQgeyBNZXRhZGF0YVNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9tZXRhZGF0YVNlcnZpY2UuanMnO1xuaW1wb3J0IHsgdmVyaWZ5QXR0ZXN0YXRpb25XaXRoTWV0YWRhdGEgfSBmcm9tICcuLi8uLi9tZXRhZGF0YS92ZXJpZnlBdHRlc3RhdGlvbldpdGhNZXRhZGF0YS5qcyc7XG4vKipcbiAqIFZlcmlmeSBhbiBhdHRlc3RhdGlvbiByZXNwb25zZSB3aXRoIGZtdCAnYW5kcm9pZC1rZXknXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlBdHRlc3RhdGlvbkFuZHJvaWRLZXkob3B0aW9ucykge1xuICAgIGNvbnN0IHsgYXV0aERhdGEsIGNsaWVudERhdGFIYXNoLCBhdHRTdG10LCBjcmVkZW50aWFsUHVibGljS2V5LCBhYWd1aWQsIHJvb3RDZXJ0aWZpY2F0ZXMsIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IHg1YyA9IGF0dFN0bXQuZ2V0KCd4NWMnKTtcbiAgICBjb25zdCBzaWcgPSBhdHRTdG10LmdldCgnc2lnJyk7XG4gICAgY29uc3QgYWxnID0gYXR0U3RtdC5nZXQoJ2FsZycpO1xuICAgIGlmICgheDVjKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gYXR0ZXN0YXRpb24gY2VydGlmaWNhdGUgcHJvdmlkZWQgaW4gYXR0ZXN0YXRpb24gc3RhdGVtZW50IChBbmRyb2lkS2V5KScpO1xuICAgIH1cbiAgICBpZiAoIXNpZykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIGF0dGVzdGF0aW9uIHNpZ25hdHVyZSBwcm92aWRlZCBpbiBhdHRlc3RhdGlvbiBzdGF0ZW1lbnQgKEFuZHJvaWRLZXkpJyk7XG4gICAgfVxuICAgIGlmICghYWxnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgQXR0ZXN0YXRpb24gc3RhdGVtZW50IGRpZCBub3QgY29udGFpbiBhbGcgKEFuZHJvaWRLZXkpYCk7XG4gICAgfVxuICAgIGlmICghaXNDT1NFQWxnKGFsZykpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBBdHRlc3RhdGlvbiBzdGF0ZW1lbnQgY29udGFpbmVkIGludmFsaWQgYWxnICR7YWxnfSAoQW5kcm9pZEtleSlgKTtcbiAgICB9XG4gICAgLy8gQ2hlY2sgdGhhdCBjcmVkZW50aWFsUHVibGljS2V5IG1hdGNoZXMgdGhlIHB1YmxpYyBrZXkgaW4gdGhlIGF0dGVzdGF0aW9uIGNlcnRpZmljYXRlXG4gICAgLy8gRmluZCB0aGUgcHVibGljIGNlcnQgaW4gdGhlIGNlcnRpZmljYXRlIGFzIFBLQ1NcbiAgICBjb25zdCBwYXJzZWRDZXJ0ID0gQXNuUGFyc2VyLnBhcnNlKHg1Y1swXSwgQ2VydGlmaWNhdGUpO1xuICAgIGNvbnN0IHBhcnNlZENlcnRQdWJLZXkgPSBuZXcgVWludDhBcnJheShwYXJzZWRDZXJ0LnRic0NlcnRpZmljYXRlLnN1YmplY3RQdWJsaWNLZXlJbmZvLnN1YmplY3RQdWJsaWNLZXkpO1xuICAgIC8vIENvbnZlcnQgdGhlIGNyZWRlbnRpYWxQdWJsaWNLZXkgdG8gUEtDU1xuICAgIGNvbnN0IGNyZWRQdWJLZXlQS0NTID0gY29udmVydENPU0V0b1BLQ1MoY3JlZGVudGlhbFB1YmxpY0tleSk7XG4gICAgaWYgKCFpc29VaW50OEFycmF5LmFyZUVxdWFsKGNyZWRQdWJLZXlQS0NTLCBwYXJzZWRDZXJ0UHViS2V5KSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NyZWRlbnRpYWwgcHVibGljIGtleSBkb2VzIG5vdCBlcXVhbCBsZWFmIGNlcnQgcHVibGljIGtleSAoQW5kcm9pZEtleSknKTtcbiAgICB9XG4gICAgLy8gRmluZCBBbmRyb2lkIEtleVN0b3JlIEV4dGVuc2lvbiBpbiBjZXJ0aWZpY2F0ZSBleHRlbnNpb25zXG4gICAgY29uc3QgZXh0S2V5U3RvcmUgPSBwYXJzZWRDZXJ0LnRic0NlcnRpZmljYXRlLmV4dGVuc2lvbnM/LmZpbmQoKGV4dCkgPT4gZXh0LmV4dG5JRCA9PT0gaWRfY2Vfa2V5RGVzY3JpcHRpb24pO1xuICAgIGlmICghZXh0S2V5U3RvcmUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDZXJ0aWZpY2F0ZSBkaWQgbm90IGNvbnRhaW4gZXh0S2V5U3RvcmUgKEFuZHJvaWRLZXkpJyk7XG4gICAgfVxuICAgIGNvbnN0IHBhcnNlZEV4dEtleVN0b3JlID0gQXNuUGFyc2VyLnBhcnNlKGV4dEtleVN0b3JlLmV4dG5WYWx1ZSwgS2V5RGVzY3JpcHRpb24pO1xuICAgIC8vIFZlcmlmeSBleHRLZXlTdG9yZSB2YWx1ZXNcbiAgICBjb25zdCB7IGF0dGVzdGF0aW9uQ2hhbGxlbmdlLCB0ZWVFbmZvcmNlZCwgc29mdHdhcmVFbmZvcmNlZCB9ID0gcGFyc2VkRXh0S2V5U3RvcmU7XG4gICAgaWYgKCFpc29VaW50OEFycmF5LmFyZUVxdWFsKG5ldyBVaW50OEFycmF5KGF0dGVzdGF0aW9uQ2hhbGxlbmdlLmJ1ZmZlciksIGNsaWVudERhdGFIYXNoKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0F0dGVzdGF0aW9uIGNoYWxsZW5nZSB3YXMgbm90IGVxdWFsIHRvIGNsaWVudCBkYXRhIGhhc2ggKEFuZHJvaWRLZXkpJyk7XG4gICAgfVxuICAgIC8vIEVuc3VyZSB0aGF0IHRoZSBrZXkgaXMgc3RyaWN0bHkgYm91bmQgdG8gdGhlIGNhbGxlciBhcHAgaWRlbnRpZmllciAoc2hvdWxkbid0IGNvbnRhaW4gdGhlXG4gICAgLy8gWzYwMF0gdGFnKVxuICAgIGlmICh0ZWVFbmZvcmNlZC5hbGxBcHBsaWNhdGlvbnMgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3RlZUVuZm9yY2VkIGNvbnRhaW5lZCBcImFsbEFwcGxpY2F0aW9ucyBbNjAwXVwiIHRhZyAoQW5kcm9pZEtleSknKTtcbiAgICB9XG4gICAgaWYgKHNvZnR3YXJlRW5mb3JjZWQuYWxsQXBwbGljYXRpb25zICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCd0ZWVFbmZvcmNlZCBjb250YWluZWQgXCJhbGxBcHBsaWNhdGlvbnMgWzYwMF1cIiB0YWcgKEFuZHJvaWRLZXkpJyk7XG4gICAgfVxuICAgIGNvbnN0IHN0YXRlbWVudCA9IGF3YWl0IE1ldGFkYXRhU2VydmljZS5nZXRTdGF0ZW1lbnQoYWFndWlkKTtcbiAgICBpZiAoc3RhdGVtZW50KSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBhd2FpdCB2ZXJpZnlBdHRlc3RhdGlvbldpdGhNZXRhZGF0YSh7XG4gICAgICAgICAgICAgICAgc3RhdGVtZW50LFxuICAgICAgICAgICAgICAgIGNyZWRlbnRpYWxQdWJsaWNLZXksXG4gICAgICAgICAgICAgICAgeDVjLFxuICAgICAgICAgICAgICAgIGF0dGVzdGF0aW9uU3RhdGVtZW50QWxnOiBhbGcsXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBjb25zdCBfZXJyID0gZXJyO1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke19lcnIubWVzc2FnZX0gKEFuZHJvaWRLZXkpYCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBUcnkgdmFsaWRhdGluZyB0aGUgY2VydGlmaWNhdGUgcGF0aCB1c2luZyB0aGUgcm9vdCBjZXJ0aWZpY2F0ZXMgc2V0IHZpYSBTZXR0aW5nc1NlcnZpY2VcbiAgICAgICAgICAgIGF3YWl0IHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoKHg1Yy5tYXAoY29udmVydENlcnRCdWZmZXJUb1BFTSksIHJvb3RDZXJ0aWZpY2F0ZXMpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgIGNvbnN0IF9lcnIgPSBlcnI7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYCR7X2Vyci5tZXNzYWdlfSAoQW5kcm9pZEtleSlgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb25zdCBzaWduYXR1cmVCYXNlID0gaXNvVWludDhBcnJheS5jb25jYXQoW2F1dGhEYXRhLCBjbGllbnREYXRhSGFzaF0pO1xuICAgIHJldHVybiB2ZXJpZnlTaWduYXR1cmUoe1xuICAgICAgICBzaWduYXR1cmU6IHNpZyxcbiAgICAgICAgZGF0YTogc2lnbmF0dXJlQmFzZSxcbiAgICAgICAgeDUwOUNlcnRpZmljYXRlOiB4NWNbMF0sXG4gICAgICAgIGhhc2hBbGdvcml0aG06IGFsZyxcbiAgICB9KTtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidKey.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidSafetyNet.js":
/*!*****************************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidSafetyNet.js ***!
  \*****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationAndroidSafetyNet: () => (/* binding */ verifyAttestationAndroidSafetyNet)\n/* harmony export */ });\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../metadata/verifyAttestationWithMetadata.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\");\n\n\n\n\n\n\n\n\n/**\n * Verify an attestation response with fmt 'android-safetynet'\n */\nasync function verifyAttestationAndroidSafetyNet(options) {\n    const { attStmt, clientDataHash, authData, aaguid, rootCertificates, verifyTimestampMS = true, credentialPublicKey, } = options;\n    const alg = attStmt.get('alg');\n    const response = attStmt.get('response');\n    const ver = attStmt.get('ver');\n    if (!ver) {\n        throw new Error('No ver value in attestation (SafetyNet)');\n    }\n    if (!response) {\n        throw new Error('No response was included in attStmt by authenticator (SafetyNet)');\n    }\n    // Prepare to verify a JWT\n    const jwt = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.toUTF8String(response);\n    const jwtParts = jwt.split('.');\n    const HEADER = JSON.parse(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.toString(jwtParts[0]));\n    const PAYLOAD = JSON.parse(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.toString(jwtParts[1]));\n    const SIGNATURE = jwtParts[2];\n    /**\n     * START Verify PAYLOAD\n     */\n    const { nonce, ctsProfileMatch, timestampMs } = PAYLOAD;\n    if (verifyTimestampMS) {\n        // Make sure timestamp is in the past\n        let now = Date.now();\n        if (timestampMs > Date.now()) {\n            throw new Error(`Payload timestamp \"${timestampMs}\" was later than \"${now}\" (SafetyNet)`);\n        }\n        // Consider a SafetyNet attestation valid within a minute of it being performed\n        const timestampPlusDelay = timestampMs + 60 * 1000;\n        now = Date.now();\n        if (timestampPlusDelay < now) {\n            throw new Error(`Payload timestamp \"${timestampPlusDelay}\" has expired (SafetyNet)`);\n        }\n    }\n    const nonceBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.concat([authData, clientDataHash]);\n    const nonceBuffer = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_0__.toHash)(nonceBase);\n    const expectedNonce = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.fromBuffer(nonceBuffer, 'base64');\n    if (nonce !== expectedNonce) {\n        throw new Error('Could not verify payload nonce (SafetyNet)');\n    }\n    if (!ctsProfileMatch) {\n        throw new Error('Could not verify device integrity (SafetyNet)');\n    }\n    /**\n     * END Verify PAYLOAD\n     */\n    /**\n     * START Verify Header\n     */\n    // `HEADER.x5c[0]` is definitely a base64 string\n    const leafCertBuffer = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.toBuffer(HEADER.x5c[0], 'base64');\n    const leafCertInfo = (0,_helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_2__.getCertificateInfo)(leafCertBuffer);\n    const { subject } = leafCertInfo;\n    // Ensure the certificate was issued to this hostname\n    // See https://developer.android.com/training/safetynet/attestation#verify-attestation-response\n    if (subject.CN !== 'attest.android.com') {\n        throw new Error('Certificate common name was not \"attest.android.com\" (SafetyNet)');\n    }\n    const statement = await _services_metadataService_js__WEBPACK_IMPORTED_MODULE_6__.MetadataService.getStatement(aaguid);\n    if (statement) {\n        try {\n            await (0,_metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_7__.verifyAttestationWithMetadata)({\n                statement,\n                credentialPublicKey,\n                x5c: HEADER.x5c,\n                attestationStatementAlg: alg,\n            });\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (SafetyNet)`);\n        }\n    }\n    else {\n        try {\n            // Try validating the certificate path using the root certificates set via SettingsService\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_3__.validateCertificatePath)(HEADER.x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_4__.convertCertBufferToPEM), rootCertificates);\n        }\n        catch (err) {\n            const _err = err;\n            throw new Error(`${_err.message} (SafetyNet)`);\n        }\n    }\n    /**\n     * END Verify Header\n     */\n    /**\n     * START Verify Signature\n     */\n    const signatureBaseBuffer = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.fromUTF8String(`${jwtParts[0]}.${jwtParts[1]}`);\n    const signatureBuffer = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoBase64URL.toBuffer(SIGNATURE);\n    const verified = await (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_1__.verifySignature)({\n        signature: signatureBuffer,\n        data: signatureBaseBuffer,\n        x509Certificate: leafCertBuffer,\n    });\n    /**\n     * END Verify Signature\n     */\n    return verified;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25BbmRyb2lkU2FmZXR5TmV0LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUFpRDtBQUNrQjtBQUNNO0FBQ1U7QUFDRjtBQUNSO0FBQ0w7QUFDNEI7QUFDaEc7QUFDQTtBQUNBO0FBQ087QUFDUCxZQUFZLDhHQUE4RztBQUMxSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiw2RUFBMEI7QUFDMUM7QUFDQSw4QkFBOEIsd0VBQXFCO0FBQ25ELCtCQUErQix3RUFBcUI7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHNDQUFzQztBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtEQUFrRCxZQUFZLG9CQUFvQixJQUFJO0FBQ3RGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0QsbUJBQW1CO0FBQ3JFO0FBQ0E7QUFDQSxzQkFBc0IsdUVBQW9CO0FBQzFDLDhCQUE4QiwwREFBTTtBQUNwQywwQkFBMEIsMEVBQXVCO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLHdFQUFxQjtBQUNoRCx5QkFBeUIsa0ZBQWtCO0FBQzNDLFlBQVksVUFBVTtBQUN0QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLHlFQUFlO0FBQzNDO0FBQ0E7QUFDQSxrQkFBa0IseUdBQTZCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBLCtCQUErQixjQUFjO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsNEZBQXVCLGdCQUFnQixzRkFBc0I7QUFDL0U7QUFDQTtBQUNBO0FBQ0EsK0JBQStCLGNBQWM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdDQUFnQywrRUFBNEIsSUFBSSxZQUFZLEdBQUcsWUFBWTtBQUMzRiw0QkFBNEIsd0VBQXFCO0FBQ2pELDJCQUEyQiw0RUFBZTtBQUMxQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL3JlZ2lzdHJhdGlvbi92ZXJpZmljYXRpb25zL3ZlcmlmeUF0dGVzdGF0aW9uQW5kcm9pZFNhZmV0eU5ldC5qcz8zN2Y3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHRvSGFzaCB9IGZyb20gJy4uLy4uL2hlbHBlcnMvdG9IYXNoLmpzJztcbmltcG9ydCB7IHZlcmlmeVNpZ25hdHVyZSB9IGZyb20gJy4uLy4uL2hlbHBlcnMvdmVyaWZ5U2lnbmF0dXJlLmpzJztcbmltcG9ydCB7IGdldENlcnRpZmljYXRlSW5mbyB9IGZyb20gJy4uLy4uL2hlbHBlcnMvZ2V0Q2VydGlmaWNhdGVJbmZvLmpzJztcbmltcG9ydCB7IHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoIH0gZnJvbSAnLi4vLi4vaGVscGVycy92YWxpZGF0ZUNlcnRpZmljYXRlUGF0aC5qcyc7XG5pbXBvcnQgeyBjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNIH0gZnJvbSAnLi4vLi4vaGVscGVycy9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzJztcbmltcG9ydCB7IGlzb0Jhc2U2NFVSTCwgaXNvVWludDhBcnJheSB9IGZyb20gJy4uLy4uL2hlbHBlcnMvaXNvL2luZGV4LmpzJztcbmltcG9ydCB7IE1ldGFkYXRhU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL21ldGFkYXRhU2VydmljZS5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlBdHRlc3RhdGlvbldpdGhNZXRhZGF0YSB9IGZyb20gJy4uLy4uL21ldGFkYXRhL3ZlcmlmeUF0dGVzdGF0aW9uV2l0aE1ldGFkYXRhLmpzJztcbi8qKlxuICogVmVyaWZ5IGFuIGF0dGVzdGF0aW9uIHJlc3BvbnNlIHdpdGggZm10ICdhbmRyb2lkLXNhZmV0eW5ldCdcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHZlcmlmeUF0dGVzdGF0aW9uQW5kcm9pZFNhZmV0eU5ldChvcHRpb25zKSB7XG4gICAgY29uc3QgeyBhdHRTdG10LCBjbGllbnREYXRhSGFzaCwgYXV0aERhdGEsIGFhZ3VpZCwgcm9vdENlcnRpZmljYXRlcywgdmVyaWZ5VGltZXN0YW1wTVMgPSB0cnVlLCBjcmVkZW50aWFsUHVibGljS2V5LCB9ID0gb3B0aW9ucztcbiAgICBjb25zdCBhbGcgPSBhdHRTdG10LmdldCgnYWxnJyk7XG4gICAgY29uc3QgcmVzcG9uc2UgPSBhdHRTdG10LmdldCgncmVzcG9uc2UnKTtcbiAgICBjb25zdCB2ZXIgPSBhdHRTdG10LmdldCgndmVyJyk7XG4gICAgaWYgKCF2ZXIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyB2ZXIgdmFsdWUgaW4gYXR0ZXN0YXRpb24gKFNhZmV0eU5ldCknKTtcbiAgICB9XG4gICAgaWYgKCFyZXNwb25zZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIHJlc3BvbnNlIHdhcyBpbmNsdWRlZCBpbiBhdHRTdG10IGJ5IGF1dGhlbnRpY2F0b3IgKFNhZmV0eU5ldCknKTtcbiAgICB9XG4gICAgLy8gUHJlcGFyZSB0byB2ZXJpZnkgYSBKV1RcbiAgICBjb25zdCBqd3QgPSBpc29VaW50OEFycmF5LnRvVVRGOFN0cmluZyhyZXNwb25zZSk7XG4gICAgY29uc3Qgand0UGFydHMgPSBqd3Quc3BsaXQoJy4nKTtcbiAgICBjb25zdCBIRUFERVIgPSBKU09OLnBhcnNlKGlzb0Jhc2U2NFVSTC50b1N0cmluZyhqd3RQYXJ0c1swXSkpO1xuICAgIGNvbnN0IFBBWUxPQUQgPSBKU09OLnBhcnNlKGlzb0Jhc2U2NFVSTC50b1N0cmluZyhqd3RQYXJ0c1sxXSkpO1xuICAgIGNvbnN0IFNJR05BVFVSRSA9IGp3dFBhcnRzWzJdO1xuICAgIC8qKlxuICAgICAqIFNUQVJUIFZlcmlmeSBQQVlMT0FEXG4gICAgICovXG4gICAgY29uc3QgeyBub25jZSwgY3RzUHJvZmlsZU1hdGNoLCB0aW1lc3RhbXBNcyB9ID0gUEFZTE9BRDtcbiAgICBpZiAodmVyaWZ5VGltZXN0YW1wTVMpIHtcbiAgICAgICAgLy8gTWFrZSBzdXJlIHRpbWVzdGFtcCBpcyBpbiB0aGUgcGFzdFxuICAgICAgICBsZXQgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgICAgaWYgKHRpbWVzdGFtcE1zID4gRGF0ZS5ub3coKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBQYXlsb2FkIHRpbWVzdGFtcCBcIiR7dGltZXN0YW1wTXN9XCIgd2FzIGxhdGVyIHRoYW4gXCIke25vd31cIiAoU2FmZXR5TmV0KWApO1xuICAgICAgICB9XG4gICAgICAgIC8vIENvbnNpZGVyIGEgU2FmZXR5TmV0IGF0dGVzdGF0aW9uIHZhbGlkIHdpdGhpbiBhIG1pbnV0ZSBvZiBpdCBiZWluZyBwZXJmb3JtZWRcbiAgICAgICAgY29uc3QgdGltZXN0YW1wUGx1c0RlbGF5ID0gdGltZXN0YW1wTXMgKyA2MCAqIDEwMDA7XG4gICAgICAgIG5vdyA9IERhdGUubm93KCk7XG4gICAgICAgIGlmICh0aW1lc3RhbXBQbHVzRGVsYXkgPCBub3cpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgUGF5bG9hZCB0aW1lc3RhbXAgXCIke3RpbWVzdGFtcFBsdXNEZWxheX1cIiBoYXMgZXhwaXJlZCAoU2FmZXR5TmV0KWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbnN0IG5vbmNlQmFzZSA9IGlzb1VpbnQ4QXJyYXkuY29uY2F0KFthdXRoRGF0YSwgY2xpZW50RGF0YUhhc2hdKTtcbiAgICBjb25zdCBub25jZUJ1ZmZlciA9IGF3YWl0IHRvSGFzaChub25jZUJhc2UpO1xuICAgIGNvbnN0IGV4cGVjdGVkTm9uY2UgPSBpc29CYXNlNjRVUkwuZnJvbUJ1ZmZlcihub25jZUJ1ZmZlciwgJ2Jhc2U2NCcpO1xuICAgIGlmIChub25jZSAhPT0gZXhwZWN0ZWROb25jZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvdWxkIG5vdCB2ZXJpZnkgcGF5bG9hZCBub25jZSAoU2FmZXR5TmV0KScpO1xuICAgIH1cbiAgICBpZiAoIWN0c1Byb2ZpbGVNYXRjaCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NvdWxkIG5vdCB2ZXJpZnkgZGV2aWNlIGludGVncml0eSAoU2FmZXR5TmV0KScpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBFTkQgVmVyaWZ5IFBBWUxPQURcbiAgICAgKi9cbiAgICAvKipcbiAgICAgKiBTVEFSVCBWZXJpZnkgSGVhZGVyXG4gICAgICovXG4gICAgLy8gYEhFQURFUi54NWNbMF1gIGlzIGRlZmluaXRlbHkgYSBiYXNlNjQgc3RyaW5nXG4gICAgY29uc3QgbGVhZkNlcnRCdWZmZXIgPSBpc29CYXNlNjRVUkwudG9CdWZmZXIoSEVBREVSLng1Y1swXSwgJ2Jhc2U2NCcpO1xuICAgIGNvbnN0IGxlYWZDZXJ0SW5mbyA9IGdldENlcnRpZmljYXRlSW5mbyhsZWFmQ2VydEJ1ZmZlcik7XG4gICAgY29uc3QgeyBzdWJqZWN0IH0gPSBsZWFmQ2VydEluZm87XG4gICAgLy8gRW5zdXJlIHRoZSBjZXJ0aWZpY2F0ZSB3YXMgaXNzdWVkIHRvIHRoaXMgaG9zdG5hbWVcbiAgICAvLyBTZWUgaHR0cHM6Ly9kZXZlbG9wZXIuYW5kcm9pZC5jb20vdHJhaW5pbmcvc2FmZXR5bmV0L2F0dGVzdGF0aW9uI3ZlcmlmeS1hdHRlc3RhdGlvbi1yZXNwb25zZVxuICAgIGlmIChzdWJqZWN0LkNOICE9PSAnYXR0ZXN0LmFuZHJvaWQuY29tJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NlcnRpZmljYXRlIGNvbW1vbiBuYW1lIHdhcyBub3QgXCJhdHRlc3QuYW5kcm9pZC5jb21cIiAoU2FmZXR5TmV0KScpO1xuICAgIH1cbiAgICBjb25zdCBzdGF0ZW1lbnQgPSBhd2FpdCBNZXRhZGF0YVNlcnZpY2UuZ2V0U3RhdGVtZW50KGFhZ3VpZCk7XG4gICAgaWYgKHN0YXRlbWVudCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgYXdhaXQgdmVyaWZ5QXR0ZXN0YXRpb25XaXRoTWV0YWRhdGEoe1xuICAgICAgICAgICAgICAgIHN0YXRlbWVudCxcbiAgICAgICAgICAgICAgICBjcmVkZW50aWFsUHVibGljS2V5LFxuICAgICAgICAgICAgICAgIHg1YzogSEVBREVSLng1YyxcbiAgICAgICAgICAgICAgICBhdHRlc3RhdGlvblN0YXRlbWVudEFsZzogYWxnLFxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgY29uc3QgX2VyciA9IGVycjtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtfZXJyLm1lc3NhZ2V9IChTYWZldHlOZXQpYCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICAvLyBUcnkgdmFsaWRhdGluZyB0aGUgY2VydGlmaWNhdGUgcGF0aCB1c2luZyB0aGUgcm9vdCBjZXJ0aWZpY2F0ZXMgc2V0IHZpYSBTZXR0aW5nc1NlcnZpY2VcbiAgICAgICAgICAgIGF3YWl0IHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoKEhFQURFUi54NWMubWFwKGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0pLCByb290Q2VydGlmaWNhdGVzKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyKSB7XG4gICAgICAgICAgICBjb25zdCBfZXJyID0gZXJyO1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke19lcnIubWVzc2FnZX0gKFNhZmV0eU5ldClgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvKipcbiAgICAgKiBFTkQgVmVyaWZ5IEhlYWRlclxuICAgICAqL1xuICAgIC8qKlxuICAgICAqIFNUQVJUIFZlcmlmeSBTaWduYXR1cmVcbiAgICAgKi9cbiAgICBjb25zdCBzaWduYXR1cmVCYXNlQnVmZmVyID0gaXNvVWludDhBcnJheS5mcm9tVVRGOFN0cmluZyhgJHtqd3RQYXJ0c1swXX0uJHtqd3RQYXJ0c1sxXX1gKTtcbiAgICBjb25zdCBzaWduYXR1cmVCdWZmZXIgPSBpc29CYXNlNjRVUkwudG9CdWZmZXIoU0lHTkFUVVJFKTtcbiAgICBjb25zdCB2ZXJpZmllZCA9IGF3YWl0IHZlcmlmeVNpZ25hdHVyZSh7XG4gICAgICAgIHNpZ25hdHVyZTogc2lnbmF0dXJlQnVmZmVyLFxuICAgICAgICBkYXRhOiBzaWduYXR1cmVCYXNlQnVmZmVyLFxuICAgICAgICB4NTA5Q2VydGlmaWNhdGU6IGxlYWZDZXJ0QnVmZmVyLFxuICAgIH0pO1xuICAgIC8qKlxuICAgICAqIEVORCBWZXJpZnkgU2lnbmF0dXJlXG4gICAgICovXG4gICAgcmV0dXJuIHZlcmlmaWVkO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidSafetyNet.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationApple.js":
/*!******************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationApple.js ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationApple: () => (/* binding */ verifyAttestationApple)\n/* harmony export */ });\n/* harmony import */ var _deps_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../deps.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/deps.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/convertCOSEtoPKCS.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n\n\n\n\n\n\nasync function verifyAttestationApple(options) {\n    const { attStmt, authData, clientDataHash, credentialPublicKey, rootCertificates, } = options;\n    const x5c = attStmt.get('x5c');\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (Apple)');\n    }\n    /**\n     * Verify certificate path\n     */\n    try {\n        await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_1__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_2__.convertCertBufferToPEM), rootCertificates);\n    }\n    catch (err) {\n        const _err = err;\n        throw new Error(`${_err.message} (Apple)`);\n    }\n    /**\n     * Compare nonce in certificate extension to computed nonce\n     */\n    const parsedCredCert = _deps_js__WEBPACK_IMPORTED_MODULE_0__.AsnParser.parse(x5c[0], _deps_js__WEBPACK_IMPORTED_MODULE_0__.Certificate);\n    const { extensions, subjectPublicKeyInfo } = parsedCredCert.tbsCertificate;\n    if (!extensions) {\n        throw new Error('credCert missing extensions (Apple)');\n    }\n    const extCertNonce = extensions.find((ext) => ext.extnID === '1.2.840.113635.100.8.2');\n    if (!extCertNonce) {\n        throw new Error('credCert missing \"1.2.840.113635.100.8.2\" extension (Apple)');\n    }\n    const nonceToHash = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.concat([authData, clientDataHash]);\n    const nonce = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__.toHash)(nonceToHash);\n    /**\n     * Ignore the first six ASN.1 structure bytes that define the nonce as an OCTET STRING. Should\n     * trim off <Buffer 30 24 a1 22 04 20>\n     *\n     * TODO: Try and get @peculiar (GitHub) to add a schema for \"1.2.840.113635.100.8.2\" when we\n     * find out where it's defined (doesn't seem to be publicly documented at the moment...)\n     */\n    const extNonce = new Uint8Array(extCertNonce.extnValue.buffer).slice(6);\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.areEqual(nonce, extNonce)) {\n        throw new Error(`credCert nonce was not expected value (Apple)`);\n    }\n    /**\n     * Verify credential public key matches the Subject Public Key of credCert\n     */\n    const credPubKeyPKCS = (0,_helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_4__.convertCOSEtoPKCS)(credentialPublicKey);\n    const credCertSubjectPublicKey = new Uint8Array(subjectPublicKeyInfo.subjectPublicKey);\n    if (!_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.areEqual(credPubKeyPKCS, credCertSubjectPublicKey)) {\n        throw new Error('Credential public key does not equal credCert public key (Apple)');\n    }\n    return true;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25BcHBsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQXVEO0FBQzRCO0FBQ0Y7QUFDaEM7QUFDc0I7QUFDWjtBQUNwRDtBQUNQLFlBQVksNEVBQTRFO0FBQ3hGO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxjQUFjLDRGQUF1QixTQUFTLHNGQUFzQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsY0FBYztBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLDJCQUEyQiwrQ0FBUyxlQUFlLGlEQUFXO0FBQzlELFlBQVksbUNBQW1DO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLHVFQUFvQjtBQUM1Qyx3QkFBd0IsMERBQU07QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMseUVBQXNCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsZ0ZBQWlCO0FBQzVDO0FBQ0EsU0FBUyx5RUFBc0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9yZWdpc3RyYXRpb24vdmVyaWZpY2F0aW9ucy92ZXJpZnlBdHRlc3RhdGlvbkFwcGxlLmpzPzZmNDAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXNuUGFyc2VyLCBDZXJ0aWZpY2F0ZSB9IGZyb20gJy4uLy4uL2RlcHMuanMnO1xuaW1wb3J0IHsgdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGggfSBmcm9tICcuLi8uLi9oZWxwZXJzL3ZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoLmpzJztcbmltcG9ydCB7IGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0gfSBmcm9tICcuLi8uLi9oZWxwZXJzL2NvbnZlcnRDZXJ0QnVmZmVyVG9QRU0uanMnO1xuaW1wb3J0IHsgdG9IYXNoIH0gZnJvbSAnLi4vLi4vaGVscGVycy90b0hhc2guanMnO1xuaW1wb3J0IHsgY29udmVydENPU0V0b1BLQ1MgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2NvbnZlcnRDT1NFdG9QS0NTLmpzJztcbmltcG9ydCB7IGlzb1VpbnQ4QXJyYXkgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2lzby9pbmRleC5qcyc7XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5QXR0ZXN0YXRpb25BcHBsZShvcHRpb25zKSB7XG4gICAgY29uc3QgeyBhdHRTdG10LCBhdXRoRGF0YSwgY2xpZW50RGF0YUhhc2gsIGNyZWRlbnRpYWxQdWJsaWNLZXksIHJvb3RDZXJ0aWZpY2F0ZXMsIH0gPSBvcHRpb25zO1xuICAgIGNvbnN0IHg1YyA9IGF0dFN0bXQuZ2V0KCd4NWMnKTtcbiAgICBpZiAoIXg1Yykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05vIGF0dGVzdGF0aW9uIGNlcnRpZmljYXRlIHByb3ZpZGVkIGluIGF0dGVzdGF0aW9uIHN0YXRlbWVudCAoQXBwbGUpJyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFZlcmlmeSBjZXJ0aWZpY2F0ZSBwYXRoXG4gICAgICovXG4gICAgdHJ5IHtcbiAgICAgICAgYXdhaXQgdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGgoeDVjLm1hcChjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNKSwgcm9vdENlcnRpZmljYXRlcyk7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc3QgX2VyciA9IGVycjtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke19lcnIubWVzc2FnZX0gKEFwcGxlKWApO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBDb21wYXJlIG5vbmNlIGluIGNlcnRpZmljYXRlIGV4dGVuc2lvbiB0byBjb21wdXRlZCBub25jZVxuICAgICAqL1xuICAgIGNvbnN0IHBhcnNlZENyZWRDZXJ0ID0gQXNuUGFyc2VyLnBhcnNlKHg1Y1swXSwgQ2VydGlmaWNhdGUpO1xuICAgIGNvbnN0IHsgZXh0ZW5zaW9ucywgc3ViamVjdFB1YmxpY0tleUluZm8gfSA9IHBhcnNlZENyZWRDZXJ0LnRic0NlcnRpZmljYXRlO1xuICAgIGlmICghZXh0ZW5zaW9ucykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ2NyZWRDZXJ0IG1pc3NpbmcgZXh0ZW5zaW9ucyAoQXBwbGUpJyk7XG4gICAgfVxuICAgIGNvbnN0IGV4dENlcnROb25jZSA9IGV4dGVuc2lvbnMuZmluZCgoZXh0KSA9PiBleHQuZXh0bklEID09PSAnMS4yLjg0MC4xMTM2MzUuMTAwLjguMicpO1xuICAgIGlmICghZXh0Q2VydE5vbmNlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignY3JlZENlcnQgbWlzc2luZyBcIjEuMi44NDAuMTEzNjM1LjEwMC44LjJcIiBleHRlbnNpb24gKEFwcGxlKScpO1xuICAgIH1cbiAgICBjb25zdCBub25jZVRvSGFzaCA9IGlzb1VpbnQ4QXJyYXkuY29uY2F0KFthdXRoRGF0YSwgY2xpZW50RGF0YUhhc2hdKTtcbiAgICBjb25zdCBub25jZSA9IGF3YWl0IHRvSGFzaChub25jZVRvSGFzaCk7XG4gICAgLyoqXG4gICAgICogSWdub3JlIHRoZSBmaXJzdCBzaXggQVNOLjEgc3RydWN0dXJlIGJ5dGVzIHRoYXQgZGVmaW5lIHRoZSBub25jZSBhcyBhbiBPQ1RFVCBTVFJJTkcuIFNob3VsZFxuICAgICAqIHRyaW0gb2ZmIDxCdWZmZXIgMzAgMjQgYTEgMjIgMDQgMjA+XG4gICAgICpcbiAgICAgKiBUT0RPOiBUcnkgYW5kIGdldCBAcGVjdWxpYXIgKEdpdEh1YikgdG8gYWRkIGEgc2NoZW1hIGZvciBcIjEuMi44NDAuMTEzNjM1LjEwMC44LjJcIiB3aGVuIHdlXG4gICAgICogZmluZCBvdXQgd2hlcmUgaXQncyBkZWZpbmVkIChkb2Vzbid0IHNlZW0gdG8gYmUgcHVibGljbHkgZG9jdW1lbnRlZCBhdCB0aGUgbW9tZW50Li4uKVxuICAgICAqL1xuICAgIGNvbnN0IGV4dE5vbmNlID0gbmV3IFVpbnQ4QXJyYXkoZXh0Q2VydE5vbmNlLmV4dG5WYWx1ZS5idWZmZXIpLnNsaWNlKDYpO1xuICAgIGlmICghaXNvVWludDhBcnJheS5hcmVFcXVhbChub25jZSwgZXh0Tm9uY2UpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihgY3JlZENlcnQgbm9uY2Ugd2FzIG5vdCBleHBlY3RlZCB2YWx1ZSAoQXBwbGUpYCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFZlcmlmeSBjcmVkZW50aWFsIHB1YmxpYyBrZXkgbWF0Y2hlcyB0aGUgU3ViamVjdCBQdWJsaWMgS2V5IG9mIGNyZWRDZXJ0XG4gICAgICovXG4gICAgY29uc3QgY3JlZFB1YktleVBLQ1MgPSBjb252ZXJ0Q09TRXRvUEtDUyhjcmVkZW50aWFsUHVibGljS2V5KTtcbiAgICBjb25zdCBjcmVkQ2VydFN1YmplY3RQdWJsaWNLZXkgPSBuZXcgVWludDhBcnJheShzdWJqZWN0UHVibGljS2V5SW5mby5zdWJqZWN0UHVibGljS2V5KTtcbiAgICBpZiAoIWlzb1VpbnQ4QXJyYXkuYXJlRXF1YWwoY3JlZFB1YktleVBLQ1MsIGNyZWRDZXJ0U3ViamVjdFB1YmxpY0tleSkpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDcmVkZW50aWFsIHB1YmxpYyBrZXkgZG9lcyBub3QgZXF1YWwgY3JlZENlcnQgcHVibGljIGtleSAoQXBwbGUpJyk7XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationApple.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationFIDOU2F.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationFIDOU2F.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationFIDOU2F: () => (/* binding */ verifyAttestationFIDOU2F)\n/* harmony export */ });\n/* harmony import */ var _helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/convertCOSEtoPKCS.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCOSEtoPKCS.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n\n\n\n\n\n\n/**\n * Verify an attestation response with fmt 'fido-u2f'\n */\nasync function verifyAttestationFIDOU2F(options) {\n    const { attStmt, clientDataHash, rpIdHash, credentialID, credentialPublicKey, aaguid, rootCertificates, } = options;\n    const reservedByte = Uint8Array.from([0x00]);\n    const publicKey = (0,_helpers_convertCOSEtoPKCS_js__WEBPACK_IMPORTED_MODULE_0__.convertCOSEtoPKCS)(credentialPublicKey);\n    const signatureBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_4__.isoUint8Array.concat([\n        reservedByte,\n        rpIdHash,\n        clientDataHash,\n        credentialID,\n        publicKey,\n    ]);\n    const sig = attStmt.get('sig');\n    const x5c = attStmt.get('x5c');\n    if (!x5c) {\n        throw new Error('No attestation certificate provided in attestation statement (FIDOU2F)');\n    }\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (FIDOU2F)');\n    }\n    // FIDO spec says that aaguid _must_ equal 0x00 here to be legit\n    const aaguidToHex = Number.parseInt(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_4__.isoUint8Array.toHex(aaguid), 16);\n    if (aaguidToHex !== 0x00) {\n        throw new Error(`AAGUID \"${aaguidToHex}\" was not expected value`);\n    }\n    try {\n        // Try validating the certificate path using the root certificates set via SettingsService\n        await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM), rootCertificates);\n    }\n    catch (err) {\n        const _err = err;\n        throw new Error(`${_err.message} (FIDOU2F)`);\n    }\n    return (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_3__.verifySignature)({\n        signature: sig,\n        data: signatureBase,\n        x509Certificate: x5c[0],\n        hashAlgorithm: _helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__.COSEALG.ES256,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25GSURPVTJGLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBdUU7QUFDVTtBQUNFO0FBQ2hCO0FBQ1I7QUFDWDtBQUNoRDtBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksa0dBQWtHO0FBQzlHO0FBQ0Esc0JBQXNCLGdGQUFpQjtBQUN2QywwQkFBMEIsdUVBQW9CO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdDQUF3QyxzRUFBbUI7QUFDM0Q7QUFDQSxtQ0FBbUMsWUFBWTtBQUMvQztBQUNBO0FBQ0E7QUFDQSxjQUFjLDRGQUF1QixTQUFTLHNGQUFzQjtBQUNwRTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsY0FBYztBQUN6QztBQUNBLFdBQVcsNEVBQWU7QUFDMUI7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLHFEQUFPO0FBQzlCLEtBQUs7QUFDTCIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL3JlZ2lzdHJhdGlvbi92ZXJpZmljYXRpb25zL3ZlcmlmeUF0dGVzdGF0aW9uRklET1UyRi5qcz8xNDZhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbnZlcnRDT1NFdG9QS0NTIH0gZnJvbSAnLi4vLi4vaGVscGVycy9jb252ZXJ0Q09TRXRvUEtDUy5qcyc7XG5pbXBvcnQgeyBjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNIH0gZnJvbSAnLi4vLi4vaGVscGVycy9jb252ZXJ0Q2VydEJ1ZmZlclRvUEVNLmpzJztcbmltcG9ydCB7IHZhbGlkYXRlQ2VydGlmaWNhdGVQYXRoIH0gZnJvbSAnLi4vLi4vaGVscGVycy92YWxpZGF0ZUNlcnRpZmljYXRlUGF0aC5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlTaWduYXR1cmUgfSBmcm9tICcuLi8uLi9oZWxwZXJzL3ZlcmlmeVNpZ25hdHVyZS5qcyc7XG5pbXBvcnQgeyBpc29VaW50OEFycmF5IH0gZnJvbSAnLi4vLi4vaGVscGVycy9pc28vaW5kZXguanMnO1xuaW1wb3J0IHsgQ09TRUFMRyB9IGZyb20gJy4uLy4uL2hlbHBlcnMvY29zZS5qcyc7XG4vKipcbiAqIFZlcmlmeSBhbiBhdHRlc3RhdGlvbiByZXNwb25zZSB3aXRoIGZtdCAnZmlkby11MmYnXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlBdHRlc3RhdGlvbkZJRE9VMkYob3B0aW9ucykge1xuICAgIGNvbnN0IHsgYXR0U3RtdCwgY2xpZW50RGF0YUhhc2gsIHJwSWRIYXNoLCBjcmVkZW50aWFsSUQsIGNyZWRlbnRpYWxQdWJsaWNLZXksIGFhZ3VpZCwgcm9vdENlcnRpZmljYXRlcywgfSA9IG9wdGlvbnM7XG4gICAgY29uc3QgcmVzZXJ2ZWRCeXRlID0gVWludDhBcnJheS5mcm9tKFsweDAwXSk7XG4gICAgY29uc3QgcHVibGljS2V5ID0gY29udmVydENPU0V0b1BLQ1MoY3JlZGVudGlhbFB1YmxpY0tleSk7XG4gICAgY29uc3Qgc2lnbmF0dXJlQmFzZSA9IGlzb1VpbnQ4QXJyYXkuY29uY2F0KFtcbiAgICAgICAgcmVzZXJ2ZWRCeXRlLFxuICAgICAgICBycElkSGFzaCxcbiAgICAgICAgY2xpZW50RGF0YUhhc2gsXG4gICAgICAgIGNyZWRlbnRpYWxJRCxcbiAgICAgICAgcHVibGljS2V5LFxuICAgIF0pO1xuICAgIGNvbnN0IHNpZyA9IGF0dFN0bXQuZ2V0KCdzaWcnKTtcbiAgICBjb25zdCB4NWMgPSBhdHRTdG10LmdldCgneDVjJyk7XG4gICAgaWYgKCF4NWMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBhdHRlc3RhdGlvbiBjZXJ0aWZpY2F0ZSBwcm92aWRlZCBpbiBhdHRlc3RhdGlvbiBzdGF0ZW1lbnQgKEZJRE9VMkYpJyk7XG4gICAgfVxuICAgIGlmICghc2lnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTm8gYXR0ZXN0YXRpb24gc2lnbmF0dXJlIHByb3ZpZGVkIGluIGF0dGVzdGF0aW9uIHN0YXRlbWVudCAoRklET1UyRiknKTtcbiAgICB9XG4gICAgLy8gRklETyBzcGVjIHNheXMgdGhhdCBhYWd1aWQgX211c3RfIGVxdWFsIDB4MDAgaGVyZSB0byBiZSBsZWdpdFxuICAgIGNvbnN0IGFhZ3VpZFRvSGV4ID0gTnVtYmVyLnBhcnNlSW50KGlzb1VpbnQ4QXJyYXkudG9IZXgoYWFndWlkKSwgMTYpO1xuICAgIGlmIChhYWd1aWRUb0hleCAhPT0gMHgwMCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEFBR1VJRCBcIiR7YWFndWlkVG9IZXh9XCIgd2FzIG5vdCBleHBlY3RlZCB2YWx1ZWApO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICAvLyBUcnkgdmFsaWRhdGluZyB0aGUgY2VydGlmaWNhdGUgcGF0aCB1c2luZyB0aGUgcm9vdCBjZXJ0aWZpY2F0ZXMgc2V0IHZpYSBTZXR0aW5nc1NlcnZpY2VcbiAgICAgICAgYXdhaXQgdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGgoeDVjLm1hcChjb252ZXJ0Q2VydEJ1ZmZlclRvUEVNKSwgcm9vdENlcnRpZmljYXRlcyk7XG4gICAgfVxuICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgY29uc3QgX2VyciA9IGVycjtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke19lcnIubWVzc2FnZX0gKEZJRE9VMkYpYCk7XG4gICAgfVxuICAgIHJldHVybiB2ZXJpZnlTaWduYXR1cmUoe1xuICAgICAgICBzaWduYXR1cmU6IHNpZyxcbiAgICAgICAgZGF0YTogc2lnbmF0dXJlQmFzZSxcbiAgICAgICAgeDUwOUNlcnRpZmljYXRlOiB4NWNbMF0sXG4gICAgICAgIGhhc2hBbGdvcml0aG06IENPU0VBTEcuRVMyNTYsXG4gICAgfSk7XG59XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationFIDOU2F.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationPacked.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationPacked.js ***!
  \*******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyAttestationPacked: () => (/* binding */ verifyAttestationPacked)\n/* harmony export */ });\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../helpers/getCertificateInfo.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/getCertificateInfo.js\");\n/* harmony import */ var _helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../helpers/verifySignature.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/verifySignature.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_metadataService_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../services/metadataService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\");\n/* harmony import */ var _metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../metadata/verifyAttestationWithMetadata.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyAttestationWithMetadata.js\");\n\n\n\n\n\n\n\n\n/**\n * Verify an attestation response with fmt 'packed'\n */\nasync function verifyAttestationPacked(options) {\n    const { attStmt, clientDataHash, authData, credentialPublicKey, aaguid, rootCertificates, } = options;\n    const sig = attStmt.get('sig');\n    const x5c = attStmt.get('x5c');\n    const alg = attStmt.get('alg');\n    if (!sig) {\n        throw new Error('No attestation signature provided in attestation statement (Packed)');\n    }\n    if (!alg) {\n        throw new Error('Attestation statement did not contain alg (Packed)');\n    }\n    if (!(0,_helpers_cose_js__WEBPACK_IMPORTED_MODULE_0__.isCOSEAlg)(alg)) {\n        throw new Error(`Attestation statement contained invalid alg ${alg} (Packed)`);\n    }\n    const signatureBase = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_5__.isoUint8Array.concat([authData, clientDataHash]);\n    let verified = false;\n    if (x5c) {\n        const { subject, basicConstraintsCA, version, notBefore, notAfter } = (0,_helpers_getCertificateInfo_js__WEBPACK_IMPORTED_MODULE_3__.getCertificateInfo)(x5c[0]);\n        const { OU, CN, O, C } = subject;\n        if (OU !== 'Authenticator Attestation') {\n            throw new Error('Certificate OU was not \"Authenticator Attestation\" (Packed|Full)');\n        }\n        if (!CN) {\n            throw new Error('Certificate CN was empty (Packed|Full)');\n        }\n        if (!O) {\n            throw new Error('Certificate O was empty (Packed|Full)');\n        }\n        if (!C || C.length !== 2) {\n            throw new Error('Certificate C was not two-character ISO 3166 code (Packed|Full)');\n        }\n        if (basicConstraintsCA) {\n            throw new Error('Certificate basic constraints CA was not `false` (Packed|Full)');\n        }\n        if (version !== 2) {\n            throw new Error('Certificate version was not `3` (ASN.1 value of 2) (Packed|Full)');\n        }\n        let now = new Date();\n        if (notBefore > now) {\n            throw new Error(`Certificate not good before \"${notBefore.toString()}\" (Packed|Full)`);\n        }\n        now = new Date();\n        if (notAfter < now) {\n            throw new Error(`Certificate not good after \"${notAfter.toString()}\" (Packed|Full)`);\n        }\n        // TODO: If certificate contains id-fido-gen-ce-aaguid(1.3.6.1.4.1.45724.1.1.4) extension, check\n        // that it’s value is set to the same AAGUID as in authData.\n        // If available, validate attestation alg and x5c with info in the metadata statement\n        const statement = await _services_metadataService_js__WEBPACK_IMPORTED_MODULE_6__.MetadataService.getStatement(aaguid);\n        if (statement) {\n            // The presence of x5c means this is a full attestation. Check to see if attestationTypes\n            // includes packed attestations.\n            if (statement.attestationTypes.indexOf('basic_full') < 0) {\n                throw new Error('Metadata does not indicate support for full attestations (Packed|Full)');\n            }\n            try {\n                await (0,_metadata_verifyAttestationWithMetadata_js__WEBPACK_IMPORTED_MODULE_7__.verifyAttestationWithMetadata)({\n                    statement,\n                    credentialPublicKey,\n                    x5c,\n                    attestationStatementAlg: alg,\n                });\n            }\n            catch (err) {\n                const _err = err;\n                throw new Error(`${_err.message} (Packed|Full)`);\n            }\n        }\n        else {\n            try {\n                // Try validating the certificate path using the root certificates set via SettingsService\n                await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_2__.validateCertificatePath)(x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM), rootCertificates);\n            }\n            catch (err) {\n                const _err = err;\n                throw new Error(`${_err.message} (Packed|Full)`);\n            }\n        }\n        verified = await (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_4__.verifySignature)({\n            signature: sig,\n            data: signatureBase,\n            x509Certificate: x5c[0],\n        });\n    }\n    else {\n        verified = await (0,_helpers_verifySignature_js__WEBPACK_IMPORTED_MODULE_4__.verifySignature)({\n            signature: sig,\n            data: signatureBase,\n            credentialPublicKey,\n            hashAlgorithm: alg,\n        });\n    }\n    return verified;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25QYWNrZWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQWtEO0FBQytCO0FBQ0U7QUFDVjtBQUNOO0FBQ1I7QUFDUztBQUM0QjtBQUNoRztBQUNBO0FBQ0E7QUFDTztBQUNQLFlBQVksb0ZBQW9GO0FBQ2hHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsMkRBQVM7QUFDbEIsdUVBQXVFLEtBQUs7QUFDNUU7QUFDQSwwQkFBMEIsdUVBQW9CO0FBQzlDO0FBQ0E7QUFDQSxnQkFBZ0IsNERBQTRELEVBQUUsa0ZBQWtCO0FBQ2hHLGdCQUFnQixlQUFlO0FBQy9CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0REFBNEQscUJBQXFCO0FBQ2pGO0FBQ0E7QUFDQTtBQUNBLDJEQUEyRCxvQkFBb0I7QUFDL0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MseUVBQWU7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseUdBQTZCO0FBQ25EO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxjQUFjO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsNEZBQXVCLFNBQVMsc0ZBQXNCO0FBQzVFO0FBQ0E7QUFDQTtBQUNBLG1DQUFtQyxjQUFjO0FBQ2pEO0FBQ0E7QUFDQSx5QkFBeUIsNEVBQWU7QUFDeEM7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSx5QkFBeUIsNEVBQWU7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vcmVnaXN0cmF0aW9uL3ZlcmlmaWNhdGlvbnMvdmVyaWZ5QXR0ZXN0YXRpb25QYWNrZWQuanM/N2IyNCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBpc0NPU0VBbGcgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2Nvc2UuanMnO1xuaW1wb3J0IHsgY29udmVydENlcnRCdWZmZXJUb1BFTSB9IGZyb20gJy4uLy4uL2hlbHBlcnMvY29udmVydENlcnRCdWZmZXJUb1BFTS5qcyc7XG5pbXBvcnQgeyB2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aCB9IGZyb20gJy4uLy4uL2hlbHBlcnMvdmFsaWRhdGVDZXJ0aWZpY2F0ZVBhdGguanMnO1xuaW1wb3J0IHsgZ2V0Q2VydGlmaWNhdGVJbmZvIH0gZnJvbSAnLi4vLi4vaGVscGVycy9nZXRDZXJ0aWZpY2F0ZUluZm8uanMnO1xuaW1wb3J0IHsgdmVyaWZ5U2lnbmF0dXJlIH0gZnJvbSAnLi4vLi4vaGVscGVycy92ZXJpZnlTaWduYXR1cmUuanMnO1xuaW1wb3J0IHsgaXNvVWludDhBcnJheSB9IGZyb20gJy4uLy4uL2hlbHBlcnMvaXNvL2luZGV4LmpzJztcbmltcG9ydCB7IE1ldGFkYXRhU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL21ldGFkYXRhU2VydmljZS5qcyc7XG5pbXBvcnQgeyB2ZXJpZnlBdHRlc3RhdGlvbldpdGhNZXRhZGF0YSB9IGZyb20gJy4uLy4uL21ldGFkYXRhL3ZlcmlmeUF0dGVzdGF0aW9uV2l0aE1ldGFkYXRhLmpzJztcbi8qKlxuICogVmVyaWZ5IGFuIGF0dGVzdGF0aW9uIHJlc3BvbnNlIHdpdGggZm10ICdwYWNrZWQnXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB2ZXJpZnlBdHRlc3RhdGlvblBhY2tlZChvcHRpb25zKSB7XG4gICAgY29uc3QgeyBhdHRTdG10LCBjbGllbnREYXRhSGFzaCwgYXV0aERhdGEsIGNyZWRlbnRpYWxQdWJsaWNLZXksIGFhZ3VpZCwgcm9vdENlcnRpZmljYXRlcywgfSA9IG9wdGlvbnM7XG4gICAgY29uc3Qgc2lnID0gYXR0U3RtdC5nZXQoJ3NpZycpO1xuICAgIGNvbnN0IHg1YyA9IGF0dFN0bXQuZ2V0KCd4NWMnKTtcbiAgICBjb25zdCBhbGcgPSBhdHRTdG10LmdldCgnYWxnJyk7XG4gICAgaWYgKCFzaWcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdObyBhdHRlc3RhdGlvbiBzaWduYXR1cmUgcHJvdmlkZWQgaW4gYXR0ZXN0YXRpb24gc3RhdGVtZW50IChQYWNrZWQpJyk7XG4gICAgfVxuICAgIGlmICghYWxnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQXR0ZXN0YXRpb24gc3RhdGVtZW50IGRpZCBub3QgY29udGFpbiBhbGcgKFBhY2tlZCknKTtcbiAgICB9XG4gICAgaWYgKCFpc0NPU0VBbGcoYWxnKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEF0dGVzdGF0aW9uIHN0YXRlbWVudCBjb250YWluZWQgaW52YWxpZCBhbGcgJHthbGd9IChQYWNrZWQpYCk7XG4gICAgfVxuICAgIGNvbnN0IHNpZ25hdHVyZUJhc2UgPSBpc29VaW50OEFycmF5LmNvbmNhdChbYXV0aERhdGEsIGNsaWVudERhdGFIYXNoXSk7XG4gICAgbGV0IHZlcmlmaWVkID0gZmFsc2U7XG4gICAgaWYgKHg1Yykge1xuICAgICAgICBjb25zdCB7IHN1YmplY3QsIGJhc2ljQ29uc3RyYWludHNDQSwgdmVyc2lvbiwgbm90QmVmb3JlLCBub3RBZnRlciB9ID0gZ2V0Q2VydGlmaWNhdGVJbmZvKHg1Y1swXSk7XG4gICAgICAgIGNvbnN0IHsgT1UsIENOLCBPLCBDIH0gPSBzdWJqZWN0O1xuICAgICAgICBpZiAoT1UgIT09ICdBdXRoZW50aWNhdG9yIEF0dGVzdGF0aW9uJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDZXJ0aWZpY2F0ZSBPVSB3YXMgbm90IFwiQXV0aGVudGljYXRvciBBdHRlc3RhdGlvblwiIChQYWNrZWR8RnVsbCknKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIUNOKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NlcnRpZmljYXRlIENOIHdhcyBlbXB0eSAoUGFja2VkfEZ1bGwpJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFPKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NlcnRpZmljYXRlIE8gd2FzIGVtcHR5IChQYWNrZWR8RnVsbCknKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIUMgfHwgQy5sZW5ndGggIT09IDIpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignQ2VydGlmaWNhdGUgQyB3YXMgbm90IHR3by1jaGFyYWN0ZXIgSVNPIDMxNjYgY29kZSAoUGFja2VkfEZ1bGwpJyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJhc2ljQ29uc3RyYWludHNDQSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDZXJ0aWZpY2F0ZSBiYXNpYyBjb25zdHJhaW50cyBDQSB3YXMgbm90IGBmYWxzZWAgKFBhY2tlZHxGdWxsKScpO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2ZXJzaW9uICE9PSAyKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NlcnRpZmljYXRlIHZlcnNpb24gd2FzIG5vdCBgM2AgKEFTTi4xIHZhbHVlIG9mIDIpIChQYWNrZWR8RnVsbCknKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgbm93ID0gbmV3IERhdGUoKTtcbiAgICAgICAgaWYgKG5vdEJlZm9yZSA+IG5vdykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBDZXJ0aWZpY2F0ZSBub3QgZ29vZCBiZWZvcmUgXCIke25vdEJlZm9yZS50b1N0cmluZygpfVwiIChQYWNrZWR8RnVsbClgKTtcbiAgICAgICAgfVxuICAgICAgICBub3cgPSBuZXcgRGF0ZSgpO1xuICAgICAgICBpZiAobm90QWZ0ZXIgPCBub3cpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgQ2VydGlmaWNhdGUgbm90IGdvb2QgYWZ0ZXIgXCIke25vdEFmdGVyLnRvU3RyaW5nKCl9XCIgKFBhY2tlZHxGdWxsKWApO1xuICAgICAgICB9XG4gICAgICAgIC8vIFRPRE86IElmIGNlcnRpZmljYXRlIGNvbnRhaW5zIGlkLWZpZG8tZ2VuLWNlLWFhZ3VpZCgxLjMuNi4xLjQuMS40NTcyNC4xLjEuNCkgZXh0ZW5zaW9uLCBjaGVja1xuICAgICAgICAvLyB0aGF0IGl04oCZcyB2YWx1ZSBpcyBzZXQgdG8gdGhlIHNhbWUgQUFHVUlEIGFzIGluIGF1dGhEYXRhLlxuICAgICAgICAvLyBJZiBhdmFpbGFibGUsIHZhbGlkYXRlIGF0dGVzdGF0aW9uIGFsZyBhbmQgeDVjIHdpdGggaW5mbyBpbiB0aGUgbWV0YWRhdGEgc3RhdGVtZW50XG4gICAgICAgIGNvbnN0IHN0YXRlbWVudCA9IGF3YWl0IE1ldGFkYXRhU2VydmljZS5nZXRTdGF0ZW1lbnQoYWFndWlkKTtcbiAgICAgICAgaWYgKHN0YXRlbWVudCkge1xuICAgICAgICAgICAgLy8gVGhlIHByZXNlbmNlIG9mIHg1YyBtZWFucyB0aGlzIGlzIGEgZnVsbCBhdHRlc3RhdGlvbi4gQ2hlY2sgdG8gc2VlIGlmIGF0dGVzdGF0aW9uVHlwZXNcbiAgICAgICAgICAgIC8vIGluY2x1ZGVzIHBhY2tlZCBhdHRlc3RhdGlvbnMuXG4gICAgICAgICAgICBpZiAoc3RhdGVtZW50LmF0dGVzdGF0aW9uVHlwZXMuaW5kZXhPZignYmFzaWNfZnVsbCcpIDwgMCkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignTWV0YWRhdGEgZG9lcyBub3QgaW5kaWNhdGUgc3VwcG9ydCBmb3IgZnVsbCBhdHRlc3RhdGlvbnMgKFBhY2tlZHxGdWxsKScpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICBhd2FpdCB2ZXJpZnlBdHRlc3RhdGlvbldpdGhNZXRhZGF0YSh7XG4gICAgICAgICAgICAgICAgICAgIHN0YXRlbWVudCxcbiAgICAgICAgICAgICAgICAgICAgY3JlZGVudGlhbFB1YmxpY0tleSxcbiAgICAgICAgICAgICAgICAgICAgeDVjLFxuICAgICAgICAgICAgICAgICAgICBhdHRlc3RhdGlvblN0YXRlbWVudEFsZzogYWxnLFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY2F0Y2ggKGVycikge1xuICAgICAgICAgICAgICAgIGNvbnN0IF9lcnIgPSBlcnI7XG4gICAgICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGAke19lcnIubWVzc2FnZX0gKFBhY2tlZHxGdWxsKWApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICAvLyBUcnkgdmFsaWRhdGluZyB0aGUgY2VydGlmaWNhdGUgcGF0aCB1c2luZyB0aGUgcm9vdCBjZXJ0aWZpY2F0ZXMgc2V0IHZpYSBTZXR0aW5nc1NlcnZpY2VcbiAgICAgICAgICAgICAgICBhd2FpdCB2YWxpZGF0ZUNlcnRpZmljYXRlUGF0aCh4NWMubWFwKGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0pLCByb290Q2VydGlmaWNhdGVzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBfZXJyID0gZXJyO1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgJHtfZXJyLm1lc3NhZ2V9IChQYWNrZWR8RnVsbClgKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICB2ZXJpZmllZCA9IGF3YWl0IHZlcmlmeVNpZ25hdHVyZSh7XG4gICAgICAgICAgICBzaWduYXR1cmU6IHNpZyxcbiAgICAgICAgICAgIGRhdGE6IHNpZ25hdHVyZUJhc2UsXG4gICAgICAgICAgICB4NTA5Q2VydGlmaWNhdGU6IHg1Y1swXSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB2ZXJpZmllZCA9IGF3YWl0IHZlcmlmeVNpZ25hdHVyZSh7XG4gICAgICAgICAgICBzaWduYXR1cmU6IHNpZyxcbiAgICAgICAgICAgIGRhdGE6IHNpZ25hdHVyZUJhc2UsXG4gICAgICAgICAgICBjcmVkZW50aWFsUHVibGljS2V5LFxuICAgICAgICAgICAgaGFzaEFsZ29yaXRobTogYWxnLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHZlcmlmaWVkO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationPacked.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifyRegistrationResponse.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/registration/verifyRegistrationResponse.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   verifyRegistrationResponse: () => (/* binding */ verifyRegistrationResponse)\n/* harmony export */ });\n/* harmony import */ var _helpers_decodeAttestationObject_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/decodeAttestationObject.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeAttestationObject.js\");\n/* harmony import */ var _helpers_decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/decodeClientDataJSON.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeClientDataJSON.js\");\n/* harmony import */ var _helpers_parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/parseAuthenticatorData.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseAuthenticatorData.js\");\n/* harmony import */ var _helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../helpers/toHash.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/toHash.js\");\n/* harmony import */ var _helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/decodeCredentialPublicKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/decodeCredentialPublicKey.js\");\n/* harmony import */ var _helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/cose.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/cose.js\");\n/* harmony import */ var _helpers_convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/convertAAGUIDToString.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js\");\n/* harmony import */ var _helpers_parseBackupFlags_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../helpers/parseBackupFlags.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/parseBackupFlags.js\");\n/* harmony import */ var _helpers_matchExpectedRPID_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../helpers/matchExpectedRPID.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/matchExpectedRPID.js\");\n/* harmony import */ var _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../helpers/iso/index.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/iso/index.js\");\n/* harmony import */ var _services_settingsService_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../services/settingsService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js\");\n/* harmony import */ var _generateRegistrationOptions_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./generateRegistrationOptions.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/generateRegistrationOptions.js\");\n/* harmony import */ var _verifications_verifyAttestationFIDOU2F_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./verifications/verifyAttestationFIDOU2F.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationFIDOU2F.js\");\n/* harmony import */ var _verifications_verifyAttestationPacked_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./verifications/verifyAttestationPacked.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationPacked.js\");\n/* harmony import */ var _verifications_verifyAttestationAndroidSafetyNet_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./verifications/verifyAttestationAndroidSafetyNet.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidSafetyNet.js\");\n/* harmony import */ var _verifications_tpm_verifyAttestationTPM_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./verifications/tpm/verifyAttestationTPM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/tpm/verifyAttestationTPM.js\");\n/* harmony import */ var _verifications_verifyAttestationAndroidKey_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./verifications/verifyAttestationAndroidKey.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationAndroidKey.js\");\n/* harmony import */ var _verifications_verifyAttestationApple_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./verifications/verifyAttestationApple.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifications/verifyAttestationApple.js\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Verify that the user has legitimately completed the registration process\n *\n * **Options:**\n *\n * @param response Response returned by **@simplewebauthn/browser**'s `startAuthentication()`\n * @param expectedChallenge The base64url-encoded `options.challenge` returned by\n * `generateRegistrationOptions()`\n * @param expectedOrigin Website URL (or array of URLs) that the registration should have occurred on\n * @param expectedRPID RP ID (or array of IDs) that was specified in the registration options\n * @param expectedType (Optional) The response type expected ('webauthn.create')\n * @param requireUserVerification (Optional) Enforce user verification by the authenticator\n * (via PIN, fingerprint, etc...)\n * @param supportedAlgorithmIDs Array of numeric COSE algorithm identifiers supported for\n * attestation by this RP. See https://www.iana.org/assignments/cose/cose.xhtml#algorithms\n */\nasync function verifyRegistrationResponse(options) {\n    const { response, expectedChallenge, expectedOrigin, expectedRPID, expectedType, requireUserVerification = true, supportedAlgorithmIDs = _generateRegistrationOptions_js__WEBPACK_IMPORTED_MODULE_11__.supportedCOSEAlgorithmIdentifiers, } = options;\n    const { id, rawId, type: credentialType, response: attestationResponse } = response;\n    // Ensure credential specified an ID\n    if (!id) {\n        throw new Error('Missing credential ID');\n    }\n    // Ensure ID is base64url-encoded\n    if (id !== rawId) {\n        throw new Error('Credential ID was not base64url-encoded');\n    }\n    // Make sure credential type is public-key\n    if (credentialType !== 'public-key') {\n        throw new Error(`Unexpected credential type ${credentialType}, expected \"public-key\"`);\n    }\n    const clientDataJSON = (0,_helpers_decodeClientDataJSON_js__WEBPACK_IMPORTED_MODULE_1__.decodeClientDataJSON)(attestationResponse.clientDataJSON);\n    const { type, origin, challenge, tokenBinding } = clientDataJSON;\n    // Make sure we're handling an registration\n    if (Array.isArray(expectedType)) {\n        if (!expectedType.includes(type)) {\n            const joinedExpectedType = expectedType.join(', ');\n            throw new Error(`Unexpected registration response type \"${type}\", expected one of: ${joinedExpectedType}`);\n        }\n    }\n    else if (expectedType) {\n        if (type !== expectedType) {\n            throw new Error(`Unexpected registration response type \"${type}\", expected \"${expectedType}\"`);\n        }\n    }\n    else if (type !== 'webauthn.create') {\n        throw new Error(`Unexpected registration response type: ${type}`);\n    }\n    // Ensure the device provided the challenge we gave it\n    if (typeof expectedChallenge === 'function') {\n        if (!(await expectedChallenge(challenge))) {\n            throw new Error(`Custom challenge verifier returned false for registration response challenge \"${challenge}\"`);\n        }\n    }\n    else if (challenge !== expectedChallenge) {\n        throw new Error(`Unexpected registration response challenge \"${challenge}\", expected \"${expectedChallenge}\"`);\n    }\n    // Check that the origin is our site\n    if (Array.isArray(expectedOrigin)) {\n        if (!expectedOrigin.includes(origin)) {\n            throw new Error(`Unexpected registration response origin \"${origin}\", expected one of: ${expectedOrigin.join(', ')}`);\n        }\n    }\n    else {\n        if (origin !== expectedOrigin) {\n            throw new Error(`Unexpected registration response origin \"${origin}\", expected \"${expectedOrigin}\"`);\n        }\n    }\n    if (tokenBinding) {\n        if (typeof tokenBinding !== 'object') {\n            throw new Error(`Unexpected value for TokenBinding \"${tokenBinding}\"`);\n        }\n        if (['present', 'supported', 'not-supported'].indexOf(tokenBinding.status) < 0) {\n            throw new Error(`Unexpected tokenBinding.status value of \"${tokenBinding.status}\"`);\n        }\n    }\n    const attestationObject = _helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_9__.isoBase64URL.toBuffer(attestationResponse.attestationObject);\n    const decodedAttestationObject = (0,_helpers_decodeAttestationObject_js__WEBPACK_IMPORTED_MODULE_0__.decodeAttestationObject)(attestationObject);\n    const fmt = decodedAttestationObject.get('fmt');\n    const authData = decodedAttestationObject.get('authData');\n    const attStmt = decodedAttestationObject.get('attStmt');\n    const parsedAuthData = (0,_helpers_parseAuthenticatorData_js__WEBPACK_IMPORTED_MODULE_2__.parseAuthenticatorData)(authData);\n    const { aaguid, rpIdHash, flags, credentialID, counter, credentialPublicKey, extensionsData, } = parsedAuthData;\n    // Make sure the response's RP ID is ours\n    let matchedRPID;\n    if (expectedRPID) {\n        let expectedRPIDs = [];\n        if (typeof expectedRPID === 'string') {\n            expectedRPIDs = [expectedRPID];\n        }\n        else {\n            expectedRPIDs = expectedRPID;\n        }\n        matchedRPID = await (0,_helpers_matchExpectedRPID_js__WEBPACK_IMPORTED_MODULE_8__.matchExpectedRPID)(rpIdHash, expectedRPIDs);\n    }\n    // Make sure someone was physically present\n    if (!flags.up) {\n        throw new Error('User not present during registration');\n    }\n    // Enforce user verification if specified\n    if (requireUserVerification && !flags.uv) {\n        throw new Error('User verification required, but user could not be verified');\n    }\n    if (!credentialID) {\n        throw new Error('No credential ID was provided by authenticator');\n    }\n    if (!credentialPublicKey) {\n        throw new Error('No public key was provided by authenticator');\n    }\n    if (!aaguid) {\n        throw new Error('No AAGUID was present during registration');\n    }\n    const decodedPublicKey = (0,_helpers_decodeCredentialPublicKey_js__WEBPACK_IMPORTED_MODULE_4__.decodeCredentialPublicKey)(credentialPublicKey);\n    const alg = decodedPublicKey.get(_helpers_cose_js__WEBPACK_IMPORTED_MODULE_5__.COSEKEYS.alg);\n    if (typeof alg !== 'number') {\n        throw new Error('Credential public key was missing numeric alg');\n    }\n    // Make sure the key algorithm is one we specified within the registration options\n    if (!supportedAlgorithmIDs.includes(alg)) {\n        const supported = supportedAlgorithmIDs.join(', ');\n        throw new Error(`Unexpected public key alg \"${alg}\", expected one of \"${supported}\"`);\n    }\n    const clientDataHash = await (0,_helpers_toHash_js__WEBPACK_IMPORTED_MODULE_3__.toHash)(_helpers_iso_index_js__WEBPACK_IMPORTED_MODULE_9__.isoBase64URL.toBuffer(attestationResponse.clientDataJSON));\n    const rootCertificates = _services_settingsService_js__WEBPACK_IMPORTED_MODULE_10__.SettingsService.getRootCertificates({\n        identifier: fmt,\n    });\n    // Prepare arguments to pass to the relevant verification method\n    const verifierOpts = {\n        aaguid,\n        attStmt,\n        authData,\n        clientDataHash,\n        credentialID,\n        credentialPublicKey,\n        rootCertificates,\n        rpIdHash,\n    };\n    /**\n     * Verification can only be performed when attestation = 'direct'\n     */\n    let verified = false;\n    if (fmt === 'fido-u2f') {\n        verified = await (0,_verifications_verifyAttestationFIDOU2F_js__WEBPACK_IMPORTED_MODULE_12__.verifyAttestationFIDOU2F)(verifierOpts);\n    }\n    else if (fmt === 'packed') {\n        verified = await (0,_verifications_verifyAttestationPacked_js__WEBPACK_IMPORTED_MODULE_13__.verifyAttestationPacked)(verifierOpts);\n    }\n    else if (fmt === 'android-safetynet') {\n        verified = await (0,_verifications_verifyAttestationAndroidSafetyNet_js__WEBPACK_IMPORTED_MODULE_14__.verifyAttestationAndroidSafetyNet)(verifierOpts);\n    }\n    else if (fmt === 'android-key') {\n        verified = await (0,_verifications_verifyAttestationAndroidKey_js__WEBPACK_IMPORTED_MODULE_16__.verifyAttestationAndroidKey)(verifierOpts);\n    }\n    else if (fmt === 'tpm') {\n        verified = await (0,_verifications_tpm_verifyAttestationTPM_js__WEBPACK_IMPORTED_MODULE_15__.verifyAttestationTPM)(verifierOpts);\n    }\n    else if (fmt === 'apple') {\n        verified = await (0,_verifications_verifyAttestationApple_js__WEBPACK_IMPORTED_MODULE_17__.verifyAttestationApple)(verifierOpts);\n    }\n    else if (fmt === 'none') {\n        if (attStmt.size > 0) {\n            throw new Error('None attestation had unexpected attestation statement');\n        }\n        // This is the weaker of the attestations, so there's nothing else to really check\n        verified = true;\n    }\n    else {\n        throw new Error(`Unsupported Attestation Format: ${fmt}`);\n    }\n    const toReturn = {\n        verified,\n    };\n    if (toReturn.verified) {\n        const { credentialDeviceType, credentialBackedUp } = (0,_helpers_parseBackupFlags_js__WEBPACK_IMPORTED_MODULE_7__.parseBackupFlags)(flags);\n        toReturn.registrationInfo = {\n            fmt,\n            counter,\n            aaguid: (0,_helpers_convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_6__.convertAAGUIDToString)(aaguid),\n            credentialID,\n            credentialPublicKey,\n            credentialType,\n            attestationObject,\n            userVerified: flags.uv,\n            credentialDeviceType,\n            credentialBackedUp,\n            origin: clientDataJSON.origin,\n            rpID: matchedRPID,\n            authenticatorExtensionResults: extensionsData,\n        };\n    }\n    return toReturn;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/registration/verifyRegistrationResponse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-key.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-key.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Google_Hardware_Attestation_Root_1: () => (/* binding */ Google_Hardware_Attestation_Root_1),\n/* harmony export */   Google_Hardware_Attestation_Root_2: () => (/* binding */ Google_Hardware_Attestation_Root_2)\n/* harmony export */ });\n/**\n * Google Hardware Attestation Root 1\n *\n * Downloaded from https://developer.android.com/training/articles/security-key-attestation#root_certificate\n * (first entry)\n *\n * Valid until 2026-05-24 @ 09:28 PST\n *\n * SHA256 Fingerprint\n * C1:98:4A:3E:F4:5C:1E:2A:91:85:51:DE:10:60:3C:86:F7:05:1B:22:49:C4:89:1C:AE:32:30:EA:BD:0C:97:D5\n */\nconst Google_Hardware_Attestation_Root_1 = `-----BEGIN CERTIFICATE-----\nMIIFYDCCA0igAwIBAgIJAOj6GWMU0voYMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV\nBAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMTYwNTI2MTYyODUyWhcNMjYwNTI0MTYy\nODUyWjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B\nAQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS\nSxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7\ntv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj\nnar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq\nC4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ\noVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O\nJtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg\nsTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi\nigHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M\nRPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E\naDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um\nAGMCAwEAAaOBpjCBozAdBgNVHQ4EFgQUNmHhAHyIBQlRi0RsR/8aTMnqTxIwHwYD\nVR0jBBgwFoAUNmHhAHyIBQlRi0RsR/8aTMnqTxIwDwYDVR0TAQH/BAUwAwEB/zAO\nBgNVHQ8BAf8EBAMCAYYwQAYDVR0fBDkwNzA1oDOgMYYvaHR0cHM6Ly9hbmRyb2lk\nLmdvb2dsZWFwaXMuY29tL2F0dGVzdGF0aW9uL2NybC8wDQYJKoZIhvcNAQELBQAD\nggIBACDIw41L3KlXG0aMiS//cqrG+EShHUGo8HNsw30W1kJtjn6UBwRM6jnmiwfB\nPb8VA91chb2vssAtX2zbTvqBJ9+LBPGCdw/E53Rbf86qhxKaiAHOjpvAy5Y3m00m\nqC0w/Zwvju1twb4vhLaJ5NkUJYsUS7rmJKHHBnETLi8GFqiEsqTWpG/6ibYCv7rY\nDBJDcR9W62BW9jfIoBQcxUCUJouMPH25lLNcDc1ssqvC2v7iUgI9LeoM1sNovqPm\nQUiG9rHli1vXxzCyaMTjwftkJLkf6724DFhuKug2jITV0QkXvaJWF4nUaHOTNA4u\nJU9WDvZLI1j83A+/xnAJUucIv/zGJ1AMH2boHqF8CY16LpsYgBt6tKxxWH00XcyD\nCdW2KlBCeqbQPcsFmWyWugxdcekhYsAWyoSf818NUsZdBWBaR/OukXrNLfkQ79Iy\nZohZbvabO/X+MVT3rriAoKc8oE2Uws6DF+60PV7/WIPjNvXySdqspImSN78mflxD\nqwLqRBYkA3I75qppLGG9rp7UCdRjxMl8ZDBld+7yvHVgt1cVzJx9xnyGCC23Uaic\nMDSXYrB4I4WHXPGjxhZuCuPBLTdOLU8YRvMYdEvYebWHMpvwGCF6bAx3JBpIeOQ1\nwDB5y0USicV3YgYGmi+NZfhA4URSh77Yd6uuJOJENRaNVTzk\n-----END CERTIFICATE-----\n`;\n/**\n * Google Hardware Attestation Root 2\n *\n * Downloaded from https://developer.android.com/training/articles/security-key-attestation#root_certificate\n * (second entry)\n *\n * Valid until 2034-11-18 @ 12:37 PST\n *\n * SHA256 Fingerprint\n * 1E:F1:A0:4B:8B:A5:8A:B9:45:89:AC:49:8C:89:82:A7:83:F2:4E:A7:30:7E:01:59:A0:C3:A7:3B:37:7D:87:CC\n */\nconst Google_Hardware_Attestation_Root_2 = `-----BEGIN CERTIFICATE-----\nMIIFHDCCAwSgAwIBAgIJANUP8luj8tazMA0GCSqGSIb3DQEBCwUAMBsxGTAXBgNV\nBAUTEGY5MjAwOWU4NTNiNmIwNDUwHhcNMTkxMTIyMjAzNzU4WhcNMzQxMTE4MjAz\nNzU4WjAbMRkwFwYDVQQFExBmOTIwMDllODUzYjZiMDQ1MIICIjANBgkqhkiG9w0B\nAQEFAAOCAg8AMIICCgKCAgEAr7bHgiuxpwHsK7Qui8xUFmOr75gvMsd/dTEDDJdS\nSxtf6An7xyqpRR90PL2abxM1dEqlXnf2tqw1Ne4Xwl5jlRfdnJLmN0pTy/4lj4/7\ntv0Sk3iiKkypnEUtR6WfMgH0QZfKHM1+di+y9TFRtv6y//0rb+T+W8a9nsNL/ggj\nnar86461qO0rOs2cXjp3kOG1FEJ5MVmFmBGtnrKpa73XpXyTqRxB/M0n1n/W9nGq\nC4FSYa04T6N5RIZGBN2z2MT5IKGbFlbC8UrW0DxW7AYImQQcHtGl/m00QLVWutHQ\noVJYnFPlXTcHYvASLu+RhhsbDmxMgJJ0mcDpvsC4PjvB+TxywElgS70vE0XmLD+O\nJtvsBslHZvPBKCOdT0MS+tgSOIfga+z1Z1g7+DVagf7quvmag8jfPioyKvxnK/Eg\nsTUVi2ghzq8wm27ud/mIM7AY2qEORR8Go3TVB4HzWQgpZrt3i5MIlCaY504LzSRi\nigHCzAPlHws+W0rB5N+er5/2pJKnfBSDiCiFAVtCLOZ7gLiMm0jhO2B6tUXHI/+M\nRPjy02i59lINMRRev56GKtcd9qO/0kUJWdZTdA2XoS82ixPvZtXQpUpuL12ab+9E\naDK8Z4RHJYYfCT3Q5vNAXaiWQ+8PTWm2QgBR/bkwSWc+NpUFgNPN9PvQi8WEg5Um\nAGMCAwEAAaNjMGEwHQYDVR0OBBYEFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMB8GA1Ud\nIwQYMBaAFDZh4QB8iAUJUYtEbEf/GkzJ6k8SMA8GA1UdEwEB/wQFMAMBAf8wDgYD\nVR0PAQH/BAQDAgIEMA0GCSqGSIb3DQEBCwUAA4ICAQBOMaBc8oumXb2voc7XCWnu\nXKhBBK3e2KMGz39t7lA3XXRe2ZLLAkLM5y3J7tURkf5a1SutfdOyXAmeE6SRo83U\nh6WszodmMkxK5GM4JGrnt4pBisu5igXEydaW7qq2CdC6DOGjG+mEkN8/TA6p3cno\nL/sPyz6evdjLlSeJ8rFBH6xWyIZCbrcpYEJzXaUOEaxxXxgYz5/cTiVKN2M1G2ok\nQBUIYSY6bjEL4aUN5cfo7ogP3UvliEo3Eo0YgwuzR2v0KR6C1cZqZJSTnghIC/vA\nD32KdNQ+c3N+vl2OTsUVMC1GiWkngNx1OO1+kXW+YTnnTUOtOIswUP/Vqd5SYgAI\nmMAfY8U9/iIgkQj6T2W6FsScy94IN9fFhE1UtzmLoBIuUFsVXJMTz+Jucth+IqoW\nFua9v1R93/k98p41pjtFX+H8DslVgfP097vju4KDlqN64xV1grw3ZLl4CiOe/A91\noeLm2UHOq6wn3esB4r2EIQKb6jTVGu5sYCcdWpXr0AUVqcABPdgL+H7qJguBw09o\njm6xNIrw2OocrDKsudk/okr/AwqEyPKw9WnMlQgLIKw1rODG2NvU9oR3GVGdMkUB\nZutL8VuFkERQGt6vQ2OCw0sV47VMkuYbacK/xyZFiRcrPJPb41zgbQj9XAEyLKCH\nex0SdDrx+tWUDqG8At2JHA==\n-----END CERTIFICATE-----\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9hbmRyb2lkLWtleS5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVhY3QtbmV4dGpzLXRlc3QvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9hbmRyb2lkLWtleS5qcz8xNzdkIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR29vZ2xlIEhhcmR3YXJlIEF0dGVzdGF0aW9uIFJvb3QgMVxuICpcbiAqIERvd25sb2FkZWQgZnJvbSBodHRwczovL2RldmVsb3Blci5hbmRyb2lkLmNvbS90cmFpbmluZy9hcnRpY2xlcy9zZWN1cml0eS1rZXktYXR0ZXN0YXRpb24jcm9vdF9jZXJ0aWZpY2F0ZVxuICogKGZpcnN0IGVudHJ5KVxuICpcbiAqIFZhbGlkIHVudGlsIDIwMjYtMDUtMjQgQCAwOToyOCBQU1RcbiAqXG4gKiBTSEEyNTYgRmluZ2VycHJpbnRcbiAqIEMxOjk4OjRBOjNFOkY0OjVDOjFFOjJBOjkxOjg1OjUxOkRFOjEwOjYwOjNDOjg2OkY3OjA1OjFCOjIyOjQ5OkM0Ojg5OjFDOkFFOjMyOjMwOkVBOkJEOjBDOjk3OkQ1XG4gKi9cbmV4cG9ydCBjb25zdCBHb29nbGVfSGFyZHdhcmVfQXR0ZXN0YXRpb25fUm9vdF8xID0gYC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLVxuTUlJRllEQ0NBMGlnQXdJQkFnSUpBT2o2R1dNVTB2b1lNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1Cc3hHVEFYQmdOVlxuQkFVVEVHWTVNakF3T1dVNE5UTmlObUl3TkRVd0hoY05NVFl3TlRJMk1UWXlPRFV5V2hjTk1qWXdOVEkwTVRZeVxuT0RVeVdqQWJNUmt3RndZRFZRUUZFeEJtT1RJd01EbGxPRFV6WWpaaU1EUTFNSUlDSWpBTkJna3Foa2lHOXcwQlxuQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBcjdiSGdpdXhwd0hzSzdRdWk4eFVGbU9yNzVndk1zZC9kVEVEREpkU1xuU3h0ZjZBbjd4eXFwUlI5MFBMMmFieE0xZEVxbFhuZjJ0cXcxTmU0WHdsNWpsUmZkbkpMbU4wcFR5LzRsajQvN1xudHYwU2szaWlLa3lwbkVVdFI2V2ZNZ0gwUVpmS0hNMStkaSt5OVRGUnR2NnkvLzByYitUK1c4YTluc05ML2dnalxubmFyODY0NjFxTzByT3MyY1hqcDNrT0cxRkVKNU1WbUZtQkd0bnJLcGE3M1hwWHlUcVJ4Qi9NMG4xbi9XOW5HcVxuQzRGU1lhMDRUNk41UklaR0JOMnoyTVQ1SUtHYkZsYkM4VXJXMER4VzdBWUltUVFjSHRHbC9tMDBRTFZXdXRIUVxub1ZKWW5GUGxYVGNIWXZBU0x1K1JoaHNiRG14TWdKSjBtY0RwdnNDNFBqdkIrVHh5d0VsZ1M3MHZFMFhtTEQrT1xuSnR2c0JzbEhadlBCS0NPZFQwTVMrdGdTT0lmZ2ErejFaMWc3K0RWYWdmN3F1dm1hZzhqZlBpb3lLdnhuSy9FZ1xuc1RVVmkyZ2h6cTh3bTI3dWQvbUlNN0FZMnFFT1JSOEdvM1RWQjRIeldRZ3BacnQzaTVNSWxDYVk1MDRMelNSaVxuaWdIQ3pBUGxId3MrVzByQjVOK2VyNS8ycEpLbmZCU0RpQ2lGQVZ0Q0xPWjdnTGlNbTBqaE8yQjZ0VVhISS8rTVxuUlBqeTAyaTU5bElOTVJSZXY1NkdLdGNkOXFPLzBrVUpXZFpUZEEyWG9TODJpeFB2WnRYUXBVcHVMMTJhYis5RVxuYURLOFo0UkhKWVlmQ1QzUTV2TkFYYWlXUSs4UFRXbTJRZ0JSL2Jrd1NXYytOcFVGZ05QTjlQdlFpOFdFZzVVbVxuQUdNQ0F3RUFBYU9CcGpDQm96QWRCZ05WSFE0RUZnUVVObUhoQUh5SUJRbFJpMFJzUi84YVRNbnFUeEl3SHdZRFxuVlIwakJCZ3dGb0FVTm1IaEFIeUlCUWxSaTBSc1IvOGFUTW5xVHhJd0R3WURWUjBUQVFIL0JBVXdBd0VCL3pBT1xuQmdOVkhROEJBZjhFQkFNQ0FZWXdRQVlEVlIwZkJEa3dOekExb0RPZ01ZWXZhSFIwY0hNNkx5OWhibVJ5YjJsa1xuTG1kdmIyZHNaV0Z3YVhNdVkyOXRMMkYwZEdWemRHRjBhVzl1TDJOeWJDOHdEUVlKS29aSWh2Y05BUUVMQlFBRFxuZ2dJQkFDREl3NDFMM0tsWEcwYU1pUy8vY3FyRytFU2hIVUdvOEhOc3czMFcxa0p0am42VUJ3Uk02am5taXdmQlxuUGI4VkE5MWNoYjJ2c3NBdFgyemJUdnFCSjkrTEJQR0Nkdy9FNTNSYmY4NnFoeEthaUFIT2pwdkF5NVkzbTAwbVxucUMwdy9ad3ZqdTF0d2I0dmhMYUo1TmtVSllzVVM3cm1KS0hIQm5FVExpOEdGcWlFc3FUV3BHLzZpYllDdjdyWVxuREJKRGNSOVc2MkJXOWpmSW9CUWN4VUNVSm91TVBIMjVsTE5jRGMxc3NxdkMydjdpVWdJOUxlb00xc05vdnFQbVxuUVVpRzlySGxpMXZYeHpDeWFNVGp3ZnRrSkxrZjY3MjRERmh1S3VnMmpJVFYwUWtYdmFKV0Y0blVhSE9UTkE0dVxuSlU5V0R2WkxJMWo4M0ErL3huQUpVdWNJdi96R0oxQU1IMmJvSHFGOENZMTZMcHNZZ0J0NnRLeHhXSDAwWGN5RFxuQ2RXMktsQkNlcWJRUGNzRm1XeVd1Z3hkY2VraFlzQVd5b1NmODE4TlVzWmRCV0JhUi9PdWtYck5MZmtRNzlJeVxuWm9oWmJ2YWJPL1grTVZUM3JyaUFvS2M4b0UyVXdzNkRGKzYwUFY3L1dJUGpOdlh5U2Rxc3BJbVNONzhtZmx4RFxucXdMcVJCWWtBM0k3NXFwcExHRzlycDdVQ2RSanhNbDhaREJsZCs3eXZIVmd0MWNWekp4OXhueUdDQzIzVWFpY1xuTURTWFlyQjRJNFdIWFBHanhoWnVDdVBCTFRkT0xVOFlSdk1ZZEV2WWViV0hNcHZ3R0NGNmJBeDNKQnBJZU9RMVxud0RCNXkwVVNpY1YzWWdZR21pK05aZmhBNFVSU2g3N1lkNnV1Sk9KRU5SYU5WVHprXG4tLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tXG5gO1xuLyoqXG4gKiBHb29nbGUgSGFyZHdhcmUgQXR0ZXN0YXRpb24gUm9vdCAyXG4gKlxuICogRG93bmxvYWRlZCBmcm9tIGh0dHBzOi8vZGV2ZWxvcGVyLmFuZHJvaWQuY29tL3RyYWluaW5nL2FydGljbGVzL3NlY3VyaXR5LWtleS1hdHRlc3RhdGlvbiNyb290X2NlcnRpZmljYXRlXG4gKiAoc2Vjb25kIGVudHJ5KVxuICpcbiAqIFZhbGlkIHVudGlsIDIwMzQtMTEtMTggQCAxMjozNyBQU1RcbiAqXG4gKiBTSEEyNTYgRmluZ2VycHJpbnRcbiAqIDFFOkYxOkEwOjRCOjhCOkE1OjhBOkI5OjQ1Ojg5OkFDOjQ5OjhDOjg5OjgyOkE3OjgzOkYyOjRFOkE3OjMwOjdFOjAxOjU5OkEwOkMzOkE3OjNCOjM3OjdEOjg3OkNDXG4gKi9cbmV4cG9ydCBjb25zdCBHb29nbGVfSGFyZHdhcmVfQXR0ZXN0YXRpb25fUm9vdF8yID0gYC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLVxuTUlJRkhEQ0NBd1NnQXdJQkFnSUpBTlVQOGx1ajh0YXpNQTBHQ1NxR1NJYjNEUUVCQ3dVQU1Cc3hHVEFYQmdOVlxuQkFVVEVHWTVNakF3T1dVNE5UTmlObUl3TkRVd0hoY05NVGt4TVRJeU1qQXpOelU0V2hjTk16UXhNVEU0TWpBelxuTnpVNFdqQWJNUmt3RndZRFZRUUZFeEJtT1RJd01EbGxPRFV6WWpaaU1EUTFNSUlDSWpBTkJna3Foa2lHOXcwQlxuQVFFRkFBT0NBZzhBTUlJQ0NnS0NBZ0VBcjdiSGdpdXhwd0hzSzdRdWk4eFVGbU9yNzVndk1zZC9kVEVEREpkU1xuU3h0ZjZBbjd4eXFwUlI5MFBMMmFieE0xZEVxbFhuZjJ0cXcxTmU0WHdsNWpsUmZkbkpMbU4wcFR5LzRsajQvN1xudHYwU2szaWlLa3lwbkVVdFI2V2ZNZ0gwUVpmS0hNMStkaSt5OVRGUnR2NnkvLzByYitUK1c4YTluc05ML2dnalxubmFyODY0NjFxTzByT3MyY1hqcDNrT0cxRkVKNU1WbUZtQkd0bnJLcGE3M1hwWHlUcVJ4Qi9NMG4xbi9XOW5HcVxuQzRGU1lhMDRUNk41UklaR0JOMnoyTVQ1SUtHYkZsYkM4VXJXMER4VzdBWUltUVFjSHRHbC9tMDBRTFZXdXRIUVxub1ZKWW5GUGxYVGNIWXZBU0x1K1JoaHNiRG14TWdKSjBtY0RwdnNDNFBqdkIrVHh5d0VsZ1M3MHZFMFhtTEQrT1xuSnR2c0JzbEhadlBCS0NPZFQwTVMrdGdTT0lmZ2ErejFaMWc3K0RWYWdmN3F1dm1hZzhqZlBpb3lLdnhuSy9FZ1xuc1RVVmkyZ2h6cTh3bTI3dWQvbUlNN0FZMnFFT1JSOEdvM1RWQjRIeldRZ3BacnQzaTVNSWxDYVk1MDRMelNSaVxuaWdIQ3pBUGxId3MrVzByQjVOK2VyNS8ycEpLbmZCU0RpQ2lGQVZ0Q0xPWjdnTGlNbTBqaE8yQjZ0VVhISS8rTVxuUlBqeTAyaTU5bElOTVJSZXY1NkdLdGNkOXFPLzBrVUpXZFpUZEEyWG9TODJpeFB2WnRYUXBVcHVMMTJhYis5RVxuYURLOFo0UkhKWVlmQ1QzUTV2TkFYYWlXUSs4UFRXbTJRZ0JSL2Jrd1NXYytOcFVGZ05QTjlQdlFpOFdFZzVVbVxuQUdNQ0F3RUFBYU5qTUdFd0hRWURWUjBPQkJZRUZEWmg0UUI4aUFVSlVZdEViRWYvR2t6SjZrOFNNQjhHQTFVZFxuSXdRWU1CYUFGRFpoNFFCOGlBVUpVWXRFYkVmL0dreko2azhTTUE4R0ExVWRFd0VCL3dRRk1BTUJBZjh3RGdZRFxuVlIwUEFRSC9CQVFEQWdJRU1BMEdDU3FHU0liM0RRRUJDd1VBQTRJQ0FRQk9NYUJjOG91bVhiMnZvYzdYQ1dudVxuWEtoQkJLM2UyS01HejM5dDdsQTNYWFJlMlpMTEFrTE01eTNKN3RVUmtmNWExU3V0ZmRPeVhBbWVFNlNSbzgzVVxuaDZXc3pvZG1Na3hLNUdNNEpHcm50NHBCaXN1NWlnWEV5ZGFXN3FxMkNkQzZET0dqRyttRWtOOC9UQTZwM2Nub1xuTC9zUHl6NmV2ZGpMbFNlSjhyRkJINnhXeUlaQ2JyY3BZRUp6WGFVT0VheHhYeGdZejUvY1RpVktOMk0xRzJva1xuUUJVSVlTWTZiakVMNGFVTjVjZm83b2dQM1V2bGlFbzNFbzBZZ3d1elIydjBLUjZDMWNacVpKU1RuZ2hJQy92QVxuRDMyS2ROUStjM04rdmwyT1RzVVZNQzFHaVdrbmdOeDFPTzEra1hXK1lUbm5UVU90T0lzd1VQL1ZxZDVTWWdBSVxubU1BZlk4VTkvaUlna1FqNlQyVzZGc1NjeTk0SU45ZkZoRTFVdHptTG9CSXVVRnNWWEpNVHorSnVjdGgrSXFvV1xuRnVhOXYxUjkzL2s5OHA0MXBqdEZYK0g4RHNsVmdmUDA5N3ZqdTRLRGxxTjY0eFYxZ3J3M1pMbDRDaU9lL0E5MVxub2VMbTJVSE9xNnduM2VzQjRyMkVJUUtiNmpUVkd1NXNZQ2NkV3BYcjBBVVZxY0FCUGRnTCtIN3FKZ3VCdzA5b1xuam02eE5JcncyT29jckRLc3Vkay9va3IvQXdxRXlQS3c5V25NbFFnTElLdzFyT0RHMk52VTlvUjNHVkdkTWtVQlxuWnV0TDhWdUZrRVJRR3Q2dlEyT0N3MHNWNDdWTWt1WWJhY0sveHlaRmlSY3JQSlBiNDF6Z2JRajlYQUV5TEtDSFxuZXgwU2REcngrdFdVRHFHOEF0MkpIQT09XG4tLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tXG5gO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-key.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-safetynet.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-safetynet.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalSign_Root_CA: () => (/* binding */ GlobalSign_Root_CA)\n/* harmony export */ });\n/**\n * GlobalSign Root CA\n *\n * Downloaded from https://pki.goog/roots.pem\n *\n * Valid until 2028-01-28 @ 04:00 PST\n *\n * SHA256 Fingerprint\n * EB:D4:10:40:E4:BB:3E:C7:42:C9:E3:81:D3:1E:F2:A4:1A:48:B6:68:5C:96:E7:CE:F3:C1:DF:6C:D4:33:1C:99\n */\nconst GlobalSign_Root_CA = `-----BEGIN CERTIFICATE-----\nMIIDdTCCAl2gAwIBAgILBAAAAAABFUtaw5QwDQYJKoZIhvcNAQEFBQAwVzELMAkG\nA1UEBhMCQkUxGTAXBgNVBAoTEEdsb2JhbFNpZ24gbnYtc2ExEDAOBgNVBAsTB1Jv\nb3QgQ0ExGzAZBgNVBAMTEkdsb2JhbFNpZ24gUm9vdCBDQTAeFw05ODA5MDExMjAw\nMDBaFw0yODAxMjgxMjAwMDBaMFcxCzAJBgNVBAYTAkJFMRkwFwYDVQQKExBHbG9i\nYWxTaWduIG52LXNhMRAwDgYDVQQLEwdSb290IENBMRswGQYDVQQDExJHbG9iYWxT\naWduIFJvb3QgQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDaDuaZ\njc6j40+Kfvvxi4Mla+pIH/EqsLmVEQS98GPR4mdmzxzdzxtIK+6NiY6arymAZavp\nxy0Sy6scTHAHoT0KMM0VjU/43dSMUBUc71DuxC73/OlS8pF94G3VNTCOXkNz8kHp\n1Wrjsok6Vjk4bwY8iGlbKk3Fp1S4bInMm/k8yuX9ifUSPJJ4ltbcdG6TRGHRjcdG\nsnUOhugZitVtbNV4FpWi6cgKOOvyJBNPc1STE4U6G7weNLWLBYy5d4ux2x8gkasJ\nU26Qzns3dLlwR5EiUWMWea6xrkEmCMgZK9FGqkjWZCrXgzT/LCrBbBlDSgeF59N8\n9iFo7+ryUp9/k5DPAgMBAAGjQjBAMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E\nBTADAQH/MB0GA1UdDgQWBBRge2YaRQ2XyolQL30EzTSo//z9SzANBgkqhkiG9w0B\nAQUFAAOCAQEA1nPnfE920I2/7LqivjTFKDK1fPxsnCwrvQmeU79rXqoRSLblCKOz\nyj1hTdNGCbM+w6DjY1Ub8rrvrTnhQ7k4o+YviiY776BQVvnGCv04zcQLcFGUl5gE\n38NflNUVyRRBnMRddWQVDf9VMOyGj/8N7yy5Y0b2qvzfvGn9LhJIZJrglfCm7ymP\nAbEVtQwdpf5pLGkkeB6zpxxxYu7KyJesF12KwvhHhm4qxFYxldBniYUr+WymXUad\nDKqC5JlR3XC321Y9YeRq4VzW9v493kHMB65jUr9TU/Qr6cf9tveCX4XSQRjbgbME\nHMUfpIBvFSDJ3gyICh3WZlXi/EjJKSZp4A==\n-----END CERTIFICATE-----\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9hbmRyb2lkLXNhZmV0eW5ldC5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL3NlcnZpY2VzL2RlZmF1bHRSb290Q2VydHMvYW5kcm9pZC1zYWZldHluZXQuanM/YmUyNyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEdsb2JhbFNpZ24gUm9vdCBDQVxuICpcbiAqIERvd25sb2FkZWQgZnJvbSBodHRwczovL3BraS5nb29nL3Jvb3RzLnBlbVxuICpcbiAqIFZhbGlkIHVudGlsIDIwMjgtMDEtMjggQCAwNDowMCBQU1RcbiAqXG4gKiBTSEEyNTYgRmluZ2VycHJpbnRcbiAqIEVCOkQ0OjEwOjQwOkU0OkJCOjNFOkM3OjQyOkM5OkUzOjgxOkQzOjFFOkYyOkE0OjFBOjQ4OkI2OjY4OjVDOjk2OkU3OkNFOkYzOkMxOkRGOjZDOkQ0OjMzOjFDOjk5XG4gKi9cbmV4cG9ydCBjb25zdCBHbG9iYWxTaWduX1Jvb3RfQ0EgPSBgLS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tXG5NSUlEZFRDQ0FsMmdBd0lCQWdJTEJBQUFBQUFCRlV0YXc1UXdEUVlKS29aSWh2Y05BUUVGQlFBd1Z6RUxNQWtHXG5BMVVFQmhNQ1FrVXhHVEFYQmdOVkJBb1RFRWRzYjJKaGJGTnBaMjRnYm5ZdGMyRXhFREFPQmdOVkJBc1RCMUp2XG5iM1FnUTBFeEd6QVpCZ05WQkFNVEVrZHNiMkpoYkZOcFoyNGdVbTl2ZENCRFFUQWVGdzA1T0RBNU1ERXhNakF3XG5NREJhRncweU9EQXhNamd4TWpBd01EQmFNRmN4Q3pBSkJnTlZCQVlUQWtKRk1Sa3dGd1lEVlFRS0V4QkhiRzlpXG5ZV3hUYVdkdUlHNTJMWE5oTVJBd0RnWURWUVFMRXdkU2IyOTBJRU5CTVJzd0dRWURWUVFERXhKSGJHOWlZV3hUXG5hV2R1SUZKdmIzUWdRMEV3Z2dFaU1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRRGFEdWFaXG5qYzZqNDArS2Z2dnhpNE1sYStwSUgvRXFzTG1WRVFTOThHUFI0bWRtenh6ZHp4dElLKzZOaVk2YXJ5bUFaYXZwXG54eTBTeTZzY1RIQUhvVDBLTU0wVmpVLzQzZFNNVUJVYzcxRHV4QzczL09sUzhwRjk0RzNWTlRDT1hrTno4a0hwXG4xV3Jqc29rNlZqazRid1k4aUdsYktrM0ZwMVM0YkluTW0vazh5dVg5aWZVU1BKSjRsdGJjZEc2VFJHSFJqY2RHXG5zblVPaHVnWml0VnRiTlY0RnBXaTZjZ0tPT3Z5SkJOUGMxU1RFNFU2Rzd3ZU5MV0xCWXk1ZDR1eDJ4OGdrYXNKXG5VMjZRem5zM2RMbHdSNUVpVVdNV2VhNnhya0VtQ01nWks5Rkdxa2pXWkNyWGd6VC9MQ3JCYkJsRFNnZUY1OU44XG45aUZvNytyeVVwOS9rNURQQWdNQkFBR2pRakJBTUE0R0ExVWREd0VCL3dRRUF3SUJCakFQQmdOVkhSTUJBZjhFXG5CVEFEQVFIL01CMEdBMVVkRGdRV0JCUmdlMllhUlEyWHlvbFFMMzBFelRTby8vejlTekFOQmdrcWhraUc5dzBCXG5BUVVGQUFPQ0FRRUExblBuZkU5MjBJMi83THFpdmpURktESzFmUHhzbkN3cnZRbWVVNzlyWHFvUlNMYmxDS096XG55ajFoVGROR0NiTSt3NkRqWTFVYjhycnZyVG5oUTdrNG8rWXZpaVk3NzZCUVZ2bkdDdjA0emNRTGNGR1VsNWdFXG4zOE5mbE5VVnlSUkJuTVJkZFdRVkRmOVZNT3lHai84Tjd5eTVZMGIycXZ6ZnZHbjlMaEpJWkpyZ2xmQ203eW1QXG5BYkVWdFF3ZHBmNXBMR2trZUI2enB4eHhZdTdLeUplc0YxMkt3dmhIaG00cXhGWXhsZEJuaVlVcitXeW1YVWFkXG5ES3FDNUpsUjNYQzMyMVk5WWVScTRWelc5djQ5M2tITUI2NWpVcjlUVS9RcjZjZjl0dmVDWDRYU1FSamJnYk1FXG5ITVVmcElCdkZTREozZ3lJQ2gzV1psWGkvRWpKS1NacDRBPT1cbi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS1cbmA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-safetynet.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/apple.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/apple.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Apple_WebAuthn_Root_CA: () => (/* binding */ Apple_WebAuthn_Root_CA)\n/* harmony export */ });\n/**\n * Apple WebAuthn Root CA\n *\n * Downloaded from https://www.apple.com/certificateauthority/Apple_WebAuthn_Root_CA.pem\n *\n * Valid until 2045-03-14 @ 17:00 PST\n *\n * SHA256 Fingerprint\n * 09:15:DD:5C:07:A2:8D:B5:49:D1:F6:77:BB:5A:75:D4:BF:BE:95:61:A7:73:42:43:27:76:2E:9E:02:F9:BB:29\n */\nconst Apple_WebAuthn_Root_CA = `-----BEGIN CERTIFICATE-----\nMIICEjCCAZmgAwIBAgIQaB0BbHo84wIlpQGUKEdXcTAKBggqhkjOPQQDAzBLMR8w\nHQYDVQQDDBZBcHBsZSBXZWJBdXRobiBSb290IENBMRMwEQYDVQQKDApBcHBsZSBJ\nbmMuMRMwEQYDVQQIDApDYWxpZm9ybmlhMB4XDTIwMDMxODE4MjEzMloXDTQ1MDMx\nNTAwMDAwMFowSzEfMB0GA1UEAwwWQXBwbGUgV2ViQXV0aG4gUm9vdCBDQTETMBEG\nA1UECgwKQXBwbGUgSW5jLjETMBEGA1UECAwKQ2FsaWZvcm5pYTB2MBAGByqGSM49\nAgEGBSuBBAAiA2IABCJCQ2pTVhzjl4Wo6IhHtMSAzO2cv+H9DQKev3//fG59G11k\nxu9eI0/7o6V5uShBpe1u6l6mS19S1FEh6yGljnZAJ+2GNP1mi/YK2kSXIuTHjxA/\npcoRf7XkOtO4o1qlcaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAdBgNVHQ4EFgQUJtdk\n2cV4wlpn0afeaxLQG2PxxtcwDgYDVR0PAQH/BAQDAgEGMAoGCCqGSM49BAMDA2cA\nMGQCMFrZ+9DsJ1PW9hfNdBywZDsWDbWFp28it1d/5w2RPkRX3Bbn/UbDTNLx7Jr3\njAGGiQIwHFj+dJZYUJR786osByBelJYsVZd2GbHQu209b5RCmGQ21gpSAk9QZW4B\n1bWeT0vT\n-----END CERTIFICATE-----\n`;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9hcHBsZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9zZXJ2aWNlcy9kZWZhdWx0Um9vdENlcnRzL2FwcGxlLmpzP2NmNWYiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBBcHBsZSBXZWJBdXRobiBSb290IENBXG4gKlxuICogRG93bmxvYWRlZCBmcm9tIGh0dHBzOi8vd3d3LmFwcGxlLmNvbS9jZXJ0aWZpY2F0ZWF1dGhvcml0eS9BcHBsZV9XZWJBdXRobl9Sb290X0NBLnBlbVxuICpcbiAqIFZhbGlkIHVudGlsIDIwNDUtMDMtMTQgQCAxNzowMCBQU1RcbiAqXG4gKiBTSEEyNTYgRmluZ2VycHJpbnRcbiAqIDA5OjE1OkREOjVDOjA3OkEyOjhEOkI1OjQ5OkQxOkY2Ojc3OkJCOjVBOjc1OkQ0OkJGOkJFOjk1OjYxOkE3OjczOjQyOjQzOjI3Ojc2OjJFOjlFOjAyOkY5OkJCOjI5XG4gKi9cbmV4cG9ydCBjb25zdCBBcHBsZV9XZWJBdXRobl9Sb290X0NBID0gYC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLVxuTUlJQ0VqQ0NBWm1nQXdJQkFnSVFhQjBCYkhvODR3SWxwUUdVS0VkWGNUQUtCZ2dxaGtqT1BRUURBekJMTVI4d1xuSFFZRFZRUUREQlpCY0hCc1pTQlhaV0pCZFhSb2JpQlNiMjkwSUVOQk1STXdFUVlEVlFRS0RBcEJjSEJzWlNCSlxuYm1NdU1STXdFUVlEVlFRSURBcERZV3hwWm05eWJtbGhNQjRYRFRJd01ETXhPREU0TWpFek1sb1hEVFExTURNeFxuTlRBd01EQXdNRm93U3pFZk1CMEdBMVVFQXd3V1FYQndiR1VnVjJWaVFYVjBhRzRnVW05dmRDQkRRVEVUTUJFR1xuQTFVRUNnd0tRWEJ3YkdVZ1NXNWpMakVUTUJFR0ExVUVDQXdLUTJGc2FXWnZjbTVwWVRCMk1CQUdCeXFHU000OVxuQWdFR0JTdUJCQUFpQTJJQUJDSkNRMnBUVmh6amw0V282SWhIdE1TQXpPMmN2K0g5RFFLZXYzLy9mRzU5RzExa1xueHU5ZUkwLzdvNlY1dVNoQnBlMXU2bDZtUzE5UzFGRWg2eUdsam5aQUorMkdOUDFtaS9ZSzJrU1hJdVRIanhBL1xucGNvUmY3WGtPdE80bzFxbGNhTkNNRUF3RHdZRFZSMFRBUUgvQkFVd0F3RUIvekFkQmdOVkhRNEVGZ1FVSnRka1xuMmNWNHdscG4wYWZlYXhMUUcyUHh4dGN3RGdZRFZSMFBBUUgvQkFRREFnRUdNQW9HQ0NxR1NNNDlCQU1EQTJjQVxuTUdRQ01GclorOURzSjFQVzloZk5kQnl3WkRzV0RiV0ZwMjhpdDFkLzV3MlJQa1JYM0Jibi9VYkRUTkx4N0pyM1xuakFHR2lRSXdIRmorZEpaWVVKUjc4Nm9zQnlCZWxKWXNWWmQyR2JIUXUyMDliNVJDbUdRMjFncFNBazlRWlc0QlxuMWJXZVQwdlRcbi0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS1cbmA7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/apple.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/mds.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/mds.js ***!
  \**********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GlobalSign_Root_CA_R3: () => (/* binding */ GlobalSign_Root_CA_R3)\n/* harmony export */ });\n/**\n * GlobalSign Root CA - R3\n *\n * Downloaded from https://valid.r3.roots.globalsign.com/\n *\n * Valid until 2029-03-18 @ 00:00 PST\n *\n * SHA256 Fingerprint\n * CB:B5:22:D7:B7:F1:27:AD:6A:01:13:86:5B:DF:1C:D4:10:2E:7D:07:59:AF:63:5A:7C:F4:72:0D:C9:63:C5:3B\n */\nconst GlobalSign_Root_CA_R3 = `-----BEGIN CERTIFICATE-----\n MIIDXzCCAkegAwIBAgILBAAAAAABIVhTCKIwDQYJKoZIhvcNAQELBQAwTDEgMB4G\n A1UECxMXR2xvYmFsU2lnbiBSb290IENBIC0gUjMxEzARBgNVBAoTCkdsb2JhbFNp\n Z24xEzARBgNVBAMTCkdsb2JhbFNpZ24wHhcNMDkwMzE4MTAwMDAwWhcNMjkwMzE4\n MTAwMDAwWjBMMSAwHgYDVQQLExdHbG9iYWxTaWduIFJvb3QgQ0EgLSBSMzETMBEG\n A1UEChMKR2xvYmFsU2lnbjETMBEGA1UEAxMKR2xvYmFsU2lnbjCCASIwDQYJKoZI\n hvcNAQEBBQADggEPADCCAQoCggEBAMwldpB5BngiFvXAg7aEyiie/QV2EcWtiHL8\n RgJDx7KKnQRfJMsuS+FggkbhUqsMgUdwbN1k0ev1LKMPgj0MK66X17YUhhB5uzsT\n gHeMCOFJ0mpiLx9e+pZo34knlTifBtc+ycsmWQ1z3rDI6SYOgxXG71uL0gRgykmm\n KPZpO/bLyCiR5Z2KYVc3rHQU3HTgOu5yLy6c+9C7v/U9AOEGM+iCK65TpjoWc4zd\n QQ4gOsC0p6Hpsk+QLjJg6VfLuQSSaGjlOCZgdbKfd/+RFO+uIEn8rUAVSNECMWEZ\n XriX7613t2Saer9fwRPvm2L7DWzgVGkWqQPabumDk3F2xmmFghcCAwEAAaNCMEAw\n DgYDVR0PAQH/BAQDAgEGMA8GA1UdEwEB/wQFMAMBAf8wHQYDVR0OBBYEFI/wS3+o\n LkUkrk1Q+mOai97i3Ru8MA0GCSqGSIb3DQEBCwUAA4IBAQBLQNvAUKr+yAzv95ZU\n RUm7lgAJQayzE4aGKAczymvmdLm6AC2upArT9fHxD4q/c2dKg8dEe3jgr25sbwMp\n jjM5RcOO5LlXbKr8EpbsU8Yt5CRsuZRj+9xTaGdWPoO4zzUhw8lo/s7awlOqzJCK\n 6fBdRoyV3XpYKBovHd7NADdBj+1EbddTKJd+82cEHhXXipa0095MJ6RMG3NzdvQX\n mcIfeg7jLQitChws/zyrVQ4PkX4268NXSb7hLi18YIvDQVETI53O9zJrlAGomecs\n Mx86OyXShkDOOyyGeMlhLxS67ttVb9+E7gUJTb0o2HLO02JQZR7rkpeDMdmztcpH\n WD9f\n -----END CERTIFICATE-----\n `;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvZGVmYXVsdFJvb3RDZXJ0cy9tZHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZWFjdC1uZXh0anMtdGVzdC8uL25vZGVfbW9kdWxlcy9Ac2ltcGxld2ViYXV0aG4vc2VydmVyL2VzbS9zZXJ2aWNlcy9kZWZhdWx0Um9vdENlcnRzL21kcy5qcz82Y2NhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2xvYmFsU2lnbiBSb290IENBIC0gUjNcbiAqXG4gKiBEb3dubG9hZGVkIGZyb20gaHR0cHM6Ly92YWxpZC5yMy5yb290cy5nbG9iYWxzaWduLmNvbS9cbiAqXG4gKiBWYWxpZCB1bnRpbCAyMDI5LTAzLTE4IEAgMDA6MDAgUFNUXG4gKlxuICogU0hBMjU2IEZpbmdlcnByaW50XG4gKiBDQjpCNToyMjpENzpCNzpGMToyNzpBRDo2QTowMToxMzo4Njo1QjpERjoxQzpENDoxMDoyRTo3RDowNzo1OTpBRjo2Mzo1QTo3QzpGNDo3MjowRDpDOTo2MzpDNTozQlxuICovXG5leHBvcnQgY29uc3QgR2xvYmFsU2lnbl9Sb290X0NBX1IzID0gYC0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLVxuIE1JSURYekNDQWtlZ0F3SUJBZ0lMQkFBQUFBQUJJVmhUQ0tJd0RRWUpLb1pJaHZjTkFRRUxCUUF3VERFZ01CNEdcbiBBMVVFQ3hNWFIyeHZZbUZzVTJsbmJpQlNiMjkwSUVOQklDMGdVak14RXpBUkJnTlZCQW9UQ2tkc2IySmhiRk5wXG4gWjI0eEV6QVJCZ05WQkFNVENrZHNiMkpoYkZOcFoyNHdIaGNOTURrd016RTRNVEF3TURBd1doY05Namt3TXpFNFxuIE1UQXdNREF3V2pCTU1TQXdIZ1lEVlFRTEV4ZEhiRzlpWVd4VGFXZHVJRkp2YjNRZ1EwRWdMU0JTTXpFVE1CRUdcbiBBMVVFQ2hNS1IyeHZZbUZzVTJsbmJqRVRNQkVHQTFVRUF4TUtSMnh2WW1Gc1UybG5iakNDQVNJd0RRWUpLb1pJXG4gaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNd2xkcEI1Qm5naUZ2WEFnN2FFeWlpZS9RVjJFY1d0aUhMOFxuIFJnSkR4N0tLblFSZkpNc3VTK0ZnZ2tiaFVxc01nVWR3Yk4xazBldjFMS01QZ2owTUs2NlgxN1lVaGhCNXV6c1RcbiBnSGVNQ09GSjBtcGlMeDllK3BabzM0a25sVGlmQnRjK3ljc21XUTF6M3JESTZTWU9neFhHNzF1TDBnUmd5a21tXG4gS1BacE8vYkx5Q2lSNVoyS1lWYzNySFFVM0hUZ091NXlMeTZjKzlDN3YvVTlBT0VHTStpQ0s2NVRwam9XYzR6ZFxuIFFRNGdPc0MwcDZIcHNrK1FMakpnNlZmTHVRU1NhR2psT0NaZ2RiS2ZkLytSRk8rdUlFbjhyVUFWU05FQ01XRVpcbiBYcmlYNzYxM3QyU2Flcjlmd1JQdm0yTDdEV3pnVkdrV3FRUGFidW1EazNGMnhtbUZnaGNDQXdFQUFhTkNNRUF3XG4gRGdZRFZSMFBBUUgvQkFRREFnRUdNQThHQTFVZEV3RUIvd1FGTUFNQkFmOHdIUVlEVlIwT0JCWUVGSS93UzMrb1xuIExrVWtyazFRK21PYWk5N2kzUnU4TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFCTFFOdkFVS3IreUF6djk1WlVcbiBSVW03bGdBSlFheXpFNGFHS0Fjenltdm1kTG02QUMydXBBclQ5Zkh4RDRxL2MyZEtnOGRFZTNqZ3IyNXNid01wXG4gampNNVJjT081TGxYYktyOEVwYnNVOFl0NUNSc3VaUmorOXhUYUdkV1BvTzR6elVodzhsby9zN2F3bE9xekpDS1xuIDZmQmRSb3lWM1hwWUtCb3ZIZDdOQURkQmorMUViZGRUS0pkKzgyY0VIaFhYaXBhMDA5NU1KNlJNRzNOemR2UVhcbiBtY0lmZWc3akxRaXRDaHdzL3p5clZRNFBrWDQyNjhOWFNiN2hMaTE4WUl2RFFWRVRJNTNPOXpKcmxBR29tZWNzXG4gTXg4Nk95WFNoa0RPT3l5R2VNbGhMeFM2N3R0VmI5K0U3Z1VKVGIwbzJITE8wMkpRWlI3cmtwZURNZG16dGNwSFxuIFdEOWZcbiAtLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tXG4gYDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/mds.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/metadataService.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseMetadataService: () => (/* binding */ BaseMetadataService),\n/* harmony export */   MetadataService: () => (/* binding */ MetadataService)\n/* harmony export */ });\n/* harmony import */ var _helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/validateCertificatePath.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/validateCertificatePath.js\");\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _helpers_convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../helpers/convertAAGUIDToString.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertAAGUIDToString.js\");\n/* harmony import */ var _settingsService_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./settingsService.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js\");\n/* harmony import */ var _helpers_logging_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../helpers/logging.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/logging.js\");\n/* harmony import */ var _helpers_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../helpers/convertPEMToBytes.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertPEMToBytes.js\");\n/* harmony import */ var _helpers_fetch_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../helpers/fetch.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/fetch.js\");\n/* harmony import */ var _metadata_parseJWT_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../metadata/parseJWT.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/parseJWT.js\");\n/* harmony import */ var _metadata_verifyJWT_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../metadata/verifyJWT.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/metadata/verifyJWT.js\");\n\n\n\n\n\n\n\n\n\nconst defaultURLMDS = 'https://mds.fidoalliance.org/'; // v3\nvar SERVICE_STATE;\n(function (SERVICE_STATE) {\n    SERVICE_STATE[SERVICE_STATE[\"DISABLED\"] = 0] = \"DISABLED\";\n    SERVICE_STATE[SERVICE_STATE[\"REFRESHING\"] = 1] = \"REFRESHING\";\n    SERVICE_STATE[SERVICE_STATE[\"READY\"] = 2] = \"READY\";\n})(SERVICE_STATE || (SERVICE_STATE = {}));\nconst log = (0,_helpers_logging_js__WEBPACK_IMPORTED_MODULE_4__.getLogger)('MetadataService');\n/**\n * A basic service for coordinating interactions with the FIDO Metadata Service. This includes BLOB\n * download and parsing, and on-demand requesting and caching of individual metadata statements.\n *\n * https://fidoalliance.org/metadata/\n */\nclass BaseMetadataService {\n    constructor() {\n        Object.defineProperty(this, \"mdsCache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"statementCache\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"state\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: SERVICE_STATE.DISABLED\n        });\n        Object.defineProperty(this, \"verificationMode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'strict'\n        });\n    }\n    /**\n     * Prepare the service to handle remote MDS servers and/or cache local metadata statements.\n     *\n     * **Options:**\n     *\n     * @param opts.mdsServers An array of URLs to FIDO Alliance Metadata Service\n     * (version 3.0)-compatible servers. Defaults to the official FIDO MDS server\n     * @param opts.statements An array of local metadata statements\n     * @param opts.verificationMode How MetadataService will handle unregistered AAGUIDs. Defaults to\n     * `\"strict\"` which throws errors during registration response verification when an\n     * unregistered AAGUID is encountered. Set to `\"permissive\"` to allow registration by\n     * authenticators with unregistered AAGUIDs\n     */\n    async initialize(opts = {}) {\n        const { mdsServers = [defaultURLMDS], statements, verificationMode } = opts;\n        this.setState(SERVICE_STATE.REFRESHING);\n        // If metadata statements are provided, load them into the cache first\n        if (statements?.length) {\n            let statementsAdded = 0;\n            statements.forEach((statement) => {\n                // Only cache statements that are for FIDO2-compatible authenticators\n                if (statement.aaguid) {\n                    this.statementCache[statement.aaguid] = {\n                        entry: {\n                            metadataStatement: statement,\n                            statusReports: [],\n                            timeOfLastStatusChange: '1970-01-01',\n                        },\n                        url: '',\n                    };\n                    statementsAdded += 1;\n                }\n            });\n            log(`Cached ${statementsAdded} local statements`);\n        }\n        // If MDS servers are provided, then process them and add their statements to the cache\n        if (mdsServers?.length) {\n            // Get a current count so we know how many new statements we've added from MDS servers\n            const currentCacheCount = Object.keys(this.statementCache).length;\n            let numServers = mdsServers.length;\n            for (const url of mdsServers) {\n                try {\n                    await this.downloadBlob({\n                        url,\n                        no: 0,\n                        nextUpdate: new Date(0),\n                    });\n                }\n                catch (err) {\n                    // Notify of the error and move on\n                    log(`Could not download BLOB from ${url}:`, err);\n                    numServers -= 1;\n                }\n            }\n            // Calculate the difference to get the total number of new statements we successfully added\n            const newCacheCount = Object.keys(this.statementCache).length;\n            const cacheDiff = newCacheCount - currentCacheCount;\n            log(`Cached ${cacheDiff} statements from ${numServers} metadata server(s)`);\n        }\n        if (verificationMode) {\n            this.verificationMode = verificationMode;\n        }\n        this.setState(SERVICE_STATE.READY);\n    }\n    /**\n     * Get a metadata statement for a given AAGUID.\n     *\n     * This method will coordinate updating the cache as per the `nextUpdate` property in the initial\n     * BLOB download.\n     */\n    async getStatement(aaguid) {\n        if (this.state === SERVICE_STATE.DISABLED) {\n            return;\n        }\n        if (!aaguid) {\n            return;\n        }\n        if (aaguid instanceof Uint8Array) {\n            aaguid = (0,_helpers_convertAAGUIDToString_js__WEBPACK_IMPORTED_MODULE_2__.convertAAGUIDToString)(aaguid);\n        }\n        // If a cache refresh is in progress then pause this until the service is ready\n        await this.pauseUntilReady();\n        // Try to grab a cached statement\n        const cachedStatement = this.statementCache[aaguid];\n        if (!cachedStatement) {\n            if (this.verificationMode === 'strict') {\n                // FIDO conformance requires RP's to only support registered AAGUID's\n                throw new Error(`No metadata statement found for aaguid \"${aaguid}\"`);\n            }\n            // Allow registration verification to continue without using metadata\n            return;\n        }\n        // If the statement points to an MDS API, check the MDS' nextUpdate to see if we need to refresh\n        if (cachedStatement.url) {\n            const mds = this.mdsCache[cachedStatement.url];\n            const now = new Date();\n            if (now > mds.nextUpdate) {\n                try {\n                    this.setState(SERVICE_STATE.REFRESHING);\n                    await this.downloadBlob(mds);\n                }\n                finally {\n                    this.setState(SERVICE_STATE.READY);\n                }\n            }\n        }\n        const { entry } = cachedStatement;\n        // Check to see if the this aaguid has a status report with a \"compromised\" status\n        for (const report of entry.statusReports) {\n            const { status } = report;\n            if (status === 'USER_VERIFICATION_BYPASS' ||\n                status === 'ATTESTATION_KEY_COMPROMISE' ||\n                status === 'USER_KEY_REMOTE_COMPROMISE' ||\n                status === 'USER_KEY_PHYSICAL_COMPROMISE') {\n                throw new Error(`Detected compromised aaguid \"${aaguid}\"`);\n            }\n        }\n        return entry.metadataStatement;\n    }\n    /**\n     * Download and process the latest BLOB from MDS\n     */\n    async downloadBlob(mds) {\n        const { url, no } = mds;\n        // Get latest \"BLOB\" (FIDO's terminology, not mine)\n        const resp = await (0,_helpers_fetch_js__WEBPACK_IMPORTED_MODULE_6__.fetch)(url);\n        const data = await resp.text();\n        // Parse the JWT\n        const parsedJWT = (0,_metadata_parseJWT_js__WEBPACK_IMPORTED_MODULE_7__.parseJWT)(data);\n        const header = parsedJWT[0];\n        const payload = parsedJWT[1];\n        if (payload.no <= no) {\n            // From FIDO MDS docs: \"also ignore the file if its number (no) is less or equal to the\n            // number of the last BLOB cached locally.\"\n            throw new Error(`Latest BLOB no. \"${payload.no}\" is not greater than previous ${no}`);\n        }\n        const headerCertsPEM = header.x5c.map(_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_1__.convertCertBufferToPEM);\n        try {\n            // Validate the certificate chain\n            const rootCerts = _settingsService_js__WEBPACK_IMPORTED_MODULE_3__.SettingsService.getRootCertificates({\n                identifier: 'mds',\n            });\n            await (0,_helpers_validateCertificatePath_js__WEBPACK_IMPORTED_MODULE_0__.validateCertificatePath)(headerCertsPEM, rootCerts);\n        }\n        catch (error) {\n            const _error = error;\n            // From FIDO MDS docs: \"ignore the file if the chain cannot be verified or if one of the\n            // chain certificates is revoked\"\n            throw new Error(`BLOB certificate path could not be validated: ${_error.message}`);\n        }\n        // Verify the BLOB JWT signature\n        const leafCert = headerCertsPEM[0];\n        const verified = await (0,_metadata_verifyJWT_js__WEBPACK_IMPORTED_MODULE_8__.verifyJWT)(data, (0,_helpers_convertPEMToBytes_js__WEBPACK_IMPORTED_MODULE_5__.convertPEMToBytes)(leafCert));\n        if (!verified) {\n            // From FIDO MDS docs: \"The FIDO Server SHOULD ignore the file if the signature is invalid.\"\n            throw new Error('BLOB signature could not be verified');\n        }\n        // Cache statements for FIDO2 devices\n        for (const entry of payload.entries) {\n            // Only cache entries with an `aaguid`\n            if (entry.aaguid) {\n                this.statementCache[entry.aaguid] = { entry, url };\n            }\n        }\n        // Remember info about the server so we can refresh later\n        const [year, month, day] = payload.nextUpdate.split('-');\n        this.mdsCache[url] = {\n            ...mds,\n            // Store the payload `no` to make sure we're getting the next BLOB in the sequence\n            no: payload.no,\n            // Convert the nextUpdate property into a Date so we can determine when to re-download\n            nextUpdate: new Date(parseInt(year, 10), \n            // Months need to be zero-indexed\n            parseInt(month, 10) - 1, parseInt(day, 10)),\n        };\n    }\n    /**\n     * A helper method to pause execution until the service is ready\n     */\n    pauseUntilReady() {\n        if (this.state === SERVICE_STATE.READY) {\n            return new Promise((resolve) => {\n                resolve();\n            });\n        }\n        // State isn't ready, so set up polling\n        const readyPromise = new Promise((resolve, reject) => {\n            const totalTimeoutMS = 70000;\n            const intervalMS = 100;\n            let iterations = totalTimeoutMS / intervalMS;\n            // Check service state every `intervalMS` milliseconds\n            const intervalID = globalThis.setInterval(() => {\n                if (iterations < 1) {\n                    clearInterval(intervalID);\n                    reject(`State did not become ready in ${totalTimeoutMS / 1000} seconds`);\n                }\n                else if (this.state === SERVICE_STATE.READY) {\n                    clearInterval(intervalID);\n                    resolve();\n                }\n                iterations -= 1;\n            }, intervalMS);\n        });\n        return readyPromise;\n    }\n    /**\n     * Report service status on change\n     */\n    setState(newState) {\n        this.state = newState;\n        if (newState === SERVICE_STATE.DISABLED) {\n            log('MetadataService is DISABLED');\n        }\n        else if (newState === SERVICE_STATE.REFRESHING) {\n            log('MetadataService is REFRESHING');\n        }\n        else if (newState === SERVICE_STATE.READY) {\n            log('MetadataService is READY');\n        }\n    }\n}\n// Export a service singleton\nconst MetadataService = new BaseMetadataService();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/metadataService.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@simplewebauthn/server/esm/services/settingsService.js ***!
  \*****************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SettingsService: () => (/* binding */ SettingsService)\n/* harmony export */ });\n/* harmony import */ var _helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../helpers/convertCertBufferToPEM.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/helpers/convertCertBufferToPEM.js\");\n/* harmony import */ var _defaultRootCerts_android_safetynet_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./defaultRootCerts/android-safetynet.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-safetynet.js\");\n/* harmony import */ var _defaultRootCerts_android_key_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./defaultRootCerts/android-key.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/android-key.js\");\n/* harmony import */ var _defaultRootCerts_apple_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./defaultRootCerts/apple.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/apple.js\");\n/* harmony import */ var _defaultRootCerts_mds_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./defaultRootCerts/mds.js */ \"(rsc)/./node_modules/@simplewebauthn/server/esm/services/defaultRootCerts/mds.js\");\n\n\n\n\n\nclass BaseSettingsService {\n    constructor() {\n        // Certificates are stored as PEM-formatted strings\n        Object.defineProperty(this, \"pemCertificates\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.pemCertificates = new Map();\n    }\n    /**\n     * Set potential root certificates for attestation formats that use them. Root certs will be tried\n     * one-by-one when validating a certificate path.\n     *\n     * Certificates can be specified as a raw `Buffer`, or as a PEM-formatted string. If a\n     * `Buffer` is passed in it will be converted to PEM format.\n     */\n    setRootCertificates(opts) {\n        const { identifier, certificates } = opts;\n        const newCertificates = [];\n        for (const cert of certificates) {\n            if (cert instanceof Uint8Array) {\n                newCertificates.push((0,_helpers_convertCertBufferToPEM_js__WEBPACK_IMPORTED_MODULE_0__.convertCertBufferToPEM)(cert));\n            }\n            else {\n                newCertificates.push(cert);\n            }\n        }\n        this.pemCertificates.set(identifier, newCertificates);\n    }\n    /**\n     * Get any registered root certificates for the specified attestation format\n     */\n    getRootCertificates(opts) {\n        const { identifier } = opts;\n        return this.pemCertificates.get(identifier) ?? [];\n    }\n}\nconst SettingsService = new BaseSettingsService();\n// Initialize default certificates\nSettingsService.setRootCertificates({\n    identifier: 'android-key',\n    certificates: [\n        _defaultRootCerts_android_key_js__WEBPACK_IMPORTED_MODULE_2__.Google_Hardware_Attestation_Root_1,\n        _defaultRootCerts_android_key_js__WEBPACK_IMPORTED_MODULE_2__.Google_Hardware_Attestation_Root_2,\n    ],\n});\nSettingsService.setRootCertificates({\n    identifier: 'android-safetynet',\n    certificates: [_defaultRootCerts_android_safetynet_js__WEBPACK_IMPORTED_MODULE_1__.GlobalSign_Root_CA],\n});\nSettingsService.setRootCertificates({\n    identifier: 'apple',\n    certificates: [_defaultRootCerts_apple_js__WEBPACK_IMPORTED_MODULE_3__.Apple_WebAuthn_Root_CA],\n});\nSettingsService.setRootCertificates({\n    identifier: 'mds',\n    certificates: [_defaultRootCerts_mds_js__WEBPACK_IMPORTED_MODULE_4__.GlobalSign_Root_CA_R3],\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQHNpbXBsZXdlYmF1dGhuL3NlcnZlci9lc20vc2VydmljZXMvc2V0dGluZ3NTZXJ2aWNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUE4RTtBQUNEO0FBQytDO0FBQ3ZEO0FBQ0g7QUFDbEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQiwyQkFBMkI7QUFDM0M7QUFDQTtBQUNBO0FBQ0EscUNBQXFDLDBGQUFzQjtBQUMzRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGFBQWE7QUFDN0I7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsZ0dBQWtDO0FBQzFDLFFBQVEsZ0dBQWtDO0FBQzFDO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxtQkFBbUIsc0ZBQWtCO0FBQ3JDLENBQUM7QUFDRDtBQUNBO0FBQ0EsbUJBQW1CLDhFQUFzQjtBQUN6QyxDQUFDO0FBQ0Q7QUFDQTtBQUNBLG1CQUFtQiwyRUFBcUI7QUFDeEMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3JlYWN0LW5leHRqcy10ZXN0Ly4vbm9kZV9tb2R1bGVzL0BzaW1wbGV3ZWJhdXRobi9zZXJ2ZXIvZXNtL3NlcnZpY2VzL3NldHRpbmdzU2VydmljZS5qcz9mMjczIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0gfSBmcm9tICcuLi9oZWxwZXJzL2NvbnZlcnRDZXJ0QnVmZmVyVG9QRU0uanMnO1xuaW1wb3J0IHsgR2xvYmFsU2lnbl9Sb290X0NBIH0gZnJvbSAnLi9kZWZhdWx0Um9vdENlcnRzL2FuZHJvaWQtc2FmZXR5bmV0LmpzJztcbmltcG9ydCB7IEdvb2dsZV9IYXJkd2FyZV9BdHRlc3RhdGlvbl9Sb290XzEsIEdvb2dsZV9IYXJkd2FyZV9BdHRlc3RhdGlvbl9Sb290XzIsIH0gZnJvbSAnLi9kZWZhdWx0Um9vdENlcnRzL2FuZHJvaWQta2V5LmpzJztcbmltcG9ydCB7IEFwcGxlX1dlYkF1dGhuX1Jvb3RfQ0EgfSBmcm9tICcuL2RlZmF1bHRSb290Q2VydHMvYXBwbGUuanMnO1xuaW1wb3J0IHsgR2xvYmFsU2lnbl9Sb290X0NBX1IzIH0gZnJvbSAnLi9kZWZhdWx0Um9vdENlcnRzL21kcy5qcyc7XG5jbGFzcyBCYXNlU2V0dGluZ3NTZXJ2aWNlIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgLy8gQ2VydGlmaWNhdGVzIGFyZSBzdG9yZWQgYXMgUEVNLWZvcm1hdHRlZCBzdHJpbmdzXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInBlbUNlcnRpZmljYXRlc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnBlbUNlcnRpZmljYXRlcyA9IG5ldyBNYXAoKTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU2V0IHBvdGVudGlhbCByb290IGNlcnRpZmljYXRlcyBmb3IgYXR0ZXN0YXRpb24gZm9ybWF0cyB0aGF0IHVzZSB0aGVtLiBSb290IGNlcnRzIHdpbGwgYmUgdHJpZWRcbiAgICAgKiBvbmUtYnktb25lIHdoZW4gdmFsaWRhdGluZyBhIGNlcnRpZmljYXRlIHBhdGguXG4gICAgICpcbiAgICAgKiBDZXJ0aWZpY2F0ZXMgY2FuIGJlIHNwZWNpZmllZCBhcyBhIHJhdyBgQnVmZmVyYCwgb3IgYXMgYSBQRU0tZm9ybWF0dGVkIHN0cmluZy4gSWYgYVxuICAgICAqIGBCdWZmZXJgIGlzIHBhc3NlZCBpbiBpdCB3aWxsIGJlIGNvbnZlcnRlZCB0byBQRU0gZm9ybWF0LlxuICAgICAqL1xuICAgIHNldFJvb3RDZXJ0aWZpY2F0ZXMob3B0cykge1xuICAgICAgICBjb25zdCB7IGlkZW50aWZpZXIsIGNlcnRpZmljYXRlcyB9ID0gb3B0cztcbiAgICAgICAgY29uc3QgbmV3Q2VydGlmaWNhdGVzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgY2VydCBvZiBjZXJ0aWZpY2F0ZXMpIHtcbiAgICAgICAgICAgIGlmIChjZXJ0IGluc3RhbmNlb2YgVWludDhBcnJheSkge1xuICAgICAgICAgICAgICAgIG5ld0NlcnRpZmljYXRlcy5wdXNoKGNvbnZlcnRDZXJ0QnVmZmVyVG9QRU0oY2VydCkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgbmV3Q2VydGlmaWNhdGVzLnB1c2goY2VydCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgdGhpcy5wZW1DZXJ0aWZpY2F0ZXMuc2V0KGlkZW50aWZpZXIsIG5ld0NlcnRpZmljYXRlcyk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEdldCBhbnkgcmVnaXN0ZXJlZCByb290IGNlcnRpZmljYXRlcyBmb3IgdGhlIHNwZWNpZmllZCBhdHRlc3RhdGlvbiBmb3JtYXRcbiAgICAgKi9cbiAgICBnZXRSb290Q2VydGlmaWNhdGVzKG9wdHMpIHtcbiAgICAgICAgY29uc3QgeyBpZGVudGlmaWVyIH0gPSBvcHRzO1xuICAgICAgICByZXR1cm4gdGhpcy5wZW1DZXJ0aWZpY2F0ZXMuZ2V0KGlkZW50aWZpZXIpID8/IFtdO1xuICAgIH1cbn1cbmV4cG9ydCBjb25zdCBTZXR0aW5nc1NlcnZpY2UgPSBuZXcgQmFzZVNldHRpbmdzU2VydmljZSgpO1xuLy8gSW5pdGlhbGl6ZSBkZWZhdWx0IGNlcnRpZmljYXRlc1xuU2V0dGluZ3NTZXJ2aWNlLnNldFJvb3RDZXJ0aWZpY2F0ZXMoe1xuICAgIGlkZW50aWZpZXI6ICdhbmRyb2lkLWtleScsXG4gICAgY2VydGlmaWNhdGVzOiBbXG4gICAgICAgIEdvb2dsZV9IYXJkd2FyZV9BdHRlc3RhdGlvbl9Sb290XzEsXG4gICAgICAgIEdvb2dsZV9IYXJkd2FyZV9BdHRlc3RhdGlvbl9Sb290XzIsXG4gICAgXSxcbn0pO1xuU2V0dGluZ3NTZXJ2aWNlLnNldFJvb3RDZXJ0aWZpY2F0ZXMoe1xuICAgIGlkZW50aWZpZXI6ICdhbmRyb2lkLXNhZmV0eW5ldCcsXG4gICAgY2VydGlmaWNhdGVzOiBbR2xvYmFsU2lnbl9Sb290X0NBXSxcbn0pO1xuU2V0dGluZ3NTZXJ2aWNlLnNldFJvb3RDZXJ0aWZpY2F0ZXMoe1xuICAgIGlkZW50aWZpZXI6ICdhcHBsZScsXG4gICAgY2VydGlmaWNhdGVzOiBbQXBwbGVfV2ViQXV0aG5fUm9vdF9DQV0sXG59KTtcblNldHRpbmdzU2VydmljZS5zZXRSb290Q2VydGlmaWNhdGVzKHtcbiAgICBpZGVudGlmaWVyOiAnbWRzJyxcbiAgICBjZXJ0aWZpY2F0ZXM6IFtHbG9iYWxTaWduX1Jvb3RfQ0FfUjNdLFxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@simplewebauthn/server/esm/services/settingsService.js\n");

/***/ })

};
;